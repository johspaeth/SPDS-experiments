Analysis;Rule;Seed;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;
ideal;EmptyVector;ForwardQuery: (dacapo.antlr.AntlrHarness.iterate $r6 = new Vector,$r6 (AntlrHarness.iterate) Value: new java.util.Vector);<dacapo.antlr.AntlrHarness: void iterate(java.lang.String)>;dacapo.antlr.AntlrHarness;false;false;326;231;252;32;13;2007;
ideal;EmptyVector;ForwardQuery: (antlr.NameSpace.<init> $r2 = new Vector,$r2 (NameSpace.<init>) Value: new java.util.Vector);<antlr.NameSpace: void <init>(java.lang.String)>;antlr.NameSpace;false;false;67;111;40;36;14;2007;
ideal-ap;EmptyVector;$r2 @ $r2 = new java.util.Vector;<antlr.NameSpace: void <init>(java.lang.String)>;antlr.NameSpace;false;true;22102;121;22102;0;13;2007;
ideal-ap;EmptyVector;$r6 @ $r6 = new java.util.Vector;<dacapo.antlr.AntlrHarness: void iterate(java.lang.String)>;dacapo.antlr.AntlrHarness;false;false;138;215;42;96;12;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipFileResource $r4.<init>($r5),$r4 (Benchmark.unpackZipFileResource) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));<dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>;dacapo.Benchmark;false;false;3884;1910;2237;90;49;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r8.<init>(r0),$r8 (Benchmark.unpackZipStream) Value: specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;231;603;192;25;21;2007;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r4.<init>($r5),$r4 (FileDigest.getBinary) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;53;214;43;7;15;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.copyFile $r5.<init>(r0),$r5 (Benchmark.copyFile) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0));<dacapo.Benchmark: void copyFile(java.io.File,java.io.File)>;dacapo.Benchmark;false;false;390;622;370;9;44;2007;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r5.<init>(r0),$r5 (FileDigest.getBinary) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0));<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;784;1057;196;25;64;2007;
ideal;IO;ForwardQuery: (antlr.Tool.copyFile $r33.<init>($r34),$r33 (Tool.copyFile) Value: specialinvoke $r33.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r34));<antlr.Tool: void copyFile(java.lang.String,java.lang.String)>;antlr.Tool;false;false;2;37;1;0;1;2007;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.Benchmark: void copyFile(java.io.File,java.io.File)>;dacapo.Benchmark;false;true;60182;177;60182;0;9;2007;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;177;194;26;151;9;2007;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>;dacapo.Benchmark;false;true;7375;3263;7375;0;45;2007;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;true;60030;700;60030;0;26;2007;
ideal-ap;IO;$r8 @ specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;106;989;28;78;14;2007;
ideal-ap;IO;$r33 @ specialinvoke $r33.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r34);<antlr.Tool: void copyFile(java.lang.String,java.lang.String)>;antlr.Tool;false;false;56;37;0;56;1;2007;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> r0.<init>($r3),r0 (TeePrintStream.<init>) Value: specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;750;938;422;294;85;2007;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.newLog $r2.<init>($r3),$r2 (TeeOutputStream.newLog) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3));<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;66;81;39;25;15;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r12.<init>(r4),$r12 (Benchmark.unpackZipStream) Value: specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;2320;973;392;42;61;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12.<init>($r14,$r13),$r12 (Benchmark.<init>) Value: specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;26;155;14;11;24;2007;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> $r3.<init>(r1,r2),$r3 (TeePrintStream.<init>) Value: specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;740;73;12;726;11;2007;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.<init> r0.<init>(r1),r0 (TeeOutputStream.<init>) Value: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1));<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;20;88;9;10;13;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9.<init>($r11,$r10),$r9 (Benchmark.<init>) Value: specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;198;638;94;102;81;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r13.<init>(r5,2048),$r13 (Benchmark.unpackZipStream) Value: specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;45;170;38;5;11;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.copyFile $r6.<init>(r1),$r6 (Benchmark.copyFile) Value: specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1));<dacapo.Benchmark: void copyFile(java.io.File,java.io.File)>;dacapo.Benchmark;false;false;258;628;242;7;46;2007;
ideal-ap;IO;$r13 @ specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;245;177;131;114;7;2007;
ideal-ap;IO;$r3 @ specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;true;13809;1292;13809;0;35;2007;
ideal-ap;IO;$r2 @ specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;true;9937;1465;9937;0;43;2007;
ideal-ap;IO;$r12 @ specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;true;5113;557;5113;0;22;2007;
ideal-ap;IO;$r6 @ specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);<dacapo.Benchmark: void copyFile(java.io.File,java.io.File)>;dacapo.Benchmark;false;true;8832;182;8832;0;10;2007;
ideal-ap;IO;$r12 @ specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;65;586;9;56;21;2007;
ideal-ap;IO;$r9 @ specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;71;554;10;61;21;2007;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;87;1123;16;71;22;2007;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;true;7246;1297;7246;0;36;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12 = new TeePrintStream,$r12 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;133;60;69;38;11;2007;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9 = new TeePrintStream,$r9 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;51;60;24;25;11;2007;
ideal-ap;IO;$r9 @ $r9 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;true;1677;632;1677;0;30;2007;
ideal-ap;IO;$r12 @ $r12 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;true;7998;664;7998;0;30;2007;
ideal;IO;ForwardQuery: (antlr.Tool.openOutputFile $r2 = new PrintWriter,$r2 (Tool.openOutputFile) Value: new java.io.PrintWriter);<antlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>;antlr.Tool;false;false;218;156;156;26;15;2007;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<antlr.Tool: java.io.PrintWriter openOutputFile(java.lang.String)>;antlr.Tool;false;true;60069;168;60069;0;13;2007;
