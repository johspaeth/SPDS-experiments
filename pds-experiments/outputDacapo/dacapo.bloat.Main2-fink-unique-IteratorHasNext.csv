Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;MaxAccessPath
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/codegen/CodeGenerator, removeEmptyBlocks(LEDU/purdue/cs/bloat/cfg/FlowGraph,)V >:NEW <Application,LEDU/purdue/cs/bloat/util/ImmutableIterator>@312 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@5fed9976;<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;3125;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/util/Graph$NodeList, iterator()Ljava/util/Iterator, >:NEW <Application,LEDU/purdue/cs/bloat/util/Graph$3>@27 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@4b765e92;<EDU.purdue.cs.bloat.util.Graph$NodeList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$NodeList;false;true;0;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/cfg/FlowGraph, insertConditionalStores()V >:NEW <Application,LEDU/purdue/cs/bloat/util/ImmutableIterator>@6 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@4665428b;<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertConditionalStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;2320;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/tree/Tree$StmtList, listIterator(I)Ljava/util/ListIterator, >:NEW <Application,LEDU/purdue/cs/bloat/tree/Tree$1>@6 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@4a70d302;<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.ListIterator listIterator(int)>;EDU.purdue.cs.bloat.tree.Tree$StmtList;false;true;0;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/trans/SSAPRE$11, iterator()Ljava/util/Iterator, >:NEW <Application,LEDU/purdue/cs/bloat/trans/SSAPRE$12>@0 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@7fd99443;<EDU.purdue.cs.bloat.trans.SSAPRE$11: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.trans.SSAPRE$11;false;false;2383;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/cfg/FlowGraph$7, iterator()Ljava/util/Iterator, >:NEW <Application,LEDU/purdue/cs/bloat/cfg/FlowGraph$8>@0 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@622d7e4;<EDU.purdue.cs.bloat.cfg.FlowGraph$7: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.cfg.FlowGraph$7;false;true;0;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/codegen/Liveness, computeIntersections()V >:NEW <Application,LEDU/purdue/cs/bloat/util/ImmutableIterator>@794 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@6a3fbcb1;<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;2399;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/tree/Tree$StmtList, iterator()Ljava/util/Iterator, >:NEW <Application,LEDU/purdue/cs/bloat/tree/Tree$2>@5 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@73a6cc79;<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.tree.Tree$StmtList;false;true;0;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/codegen/CodeGenerator, removeEmptyBlocks(LEDU/purdue/cs/bloat/cfg/FlowGraph,)V >:NEW <Application,LEDU/purdue/cs/bloat/util/ImmutableIterator>@660 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@570a62a5;<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;2378;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/codegen/Liveness, intersections(LEDU/purdue/cs/bloat/tree/VarExpr,)Ljava/util/Iterator, >:NEW <Application,LEDU/purdue/cs/bloat/codegen/Liveness$1>@63 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@48cd319d;<EDU.purdue.cs.bloat.codegen.Liveness: java.util.Iterator intersections(EDU.purdue.cs.bloat.tree.VarExpr)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;2386;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/util/Graph$EdgeSet, iterator()Ljava/util/Iterator, >:NEW <Application,LEDU/purdue/cs/bloat/util/Graph$4>@32 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@1bee0085;<EDU.purdue.cs.bloat.util.Graph$EdgeSet: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;false;true;0;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/cfg/FlowGraph, splitReducibleLoops()V >:NEW <Application,LEDU/purdue/cs/bloat/util/ImmutableIterator>@500 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@16e1219f;<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;2332;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/codegen/CodeGenerator, removeEmptyBlocks(LEDU/purdue/cs/bloat/cfg/FlowGraph,)V >:NEW <Application,LEDU/purdue/cs/bloat/util/ImmutableIterator>@425 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@13f40d71;<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;2294;0;0;0;0;4505;0;
fink-unique;IteratorHasNext;SITE_IN_NODE{< Application, LEDU/purdue/cs/bloat/util/Graph$1, iterator()Ljava/util/Iterator, >:NEW <Application,LEDU/purdue/cs/bloat/util/Graph$2>@10 in Everywhere};com.ibm.wala.util.collections.NonNullSingletonIterator@73a845cb;<EDU.purdue.cs.bloat.util.Graph$1: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$1;false;true;0;0;0;0;0;4505;0;
