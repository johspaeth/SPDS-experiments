Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;MaxAccessPath
ideal;EmptyVector;ForwardQuery: (EDU.purdue.cs.bloat.util.UnionFind.findNode $r3 = new Stack,$r3 (UnionFind.findNode) Value: new java.util.Stack);$r3 = new java.util.Stack;<EDU.purdue.cs.bloat.util.UnionFind: EDU.purdue.cs.bloat.util.UnionFind$Node findNode(EDU.purdue.cs.bloat.util.UnionFind$Node)>;EDU.purdue.cs.bloat.util.UnionFind;true;false;312;210;45542;41;20;4450;0;
ideal;EmptyVector;ForwardQuery: (dacapo.parser.ConfigFile.sizeClause $r4 = new Vector,$r4 (ConfigFile.sizeClause) Value: new java.util.Vector);$r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;209;238;45280;49;14;4450;0;
ideal;EmptyVector;ForwardQuery: (EDU.purdue.cs.bloat.tree.LEGatherer.getLEs $r2 = new Vector,$r2 (LEGatherer.getLEs) Value: new java.util.Vector);$r2 = new java.util.Vector;<EDU.purdue.cs.bloat.tree.LEGatherer: java.util.Vector getLEs(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.tree.LEGatherer;false;true;30006;19258;30001;0;800;4450;0;
ideal;EmptyVector;ForwardQuery: (EDU.purdue.cs.bloat.tree.AscendVisitor.<init> $r3 = new Vector,$r3 (AscendVisitor.<init>) Value: new java.util.Vector);$r3 = new java.util.Vector;<EDU.purdue.cs.bloat.tree.AscendVisitor: void <init>(java.util.Hashtable,java.util.Hashtable)>;EDU.purdue.cs.bloat.tree.AscendVisitor;false;false;3988;16306;2022;1906;797;4450;0;
ideal;EmptyVector;ForwardQuery: (EDU.purdue.cs.bloat.editor.CodeArray.buildCode $r22 = new Stack,$r22 (CodeArray.buildCode) Value: new java.util.Stack);$r22 = new java.util.Stack;<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;10273;924;11303;185;20;4450;0;
ideal;EmptyVector;ForwardQuery: (dacapo.parser.ConfigFile.<init> $r4 = new Vector,$r4 (ConfigFile.<init>) Value: new java.util.Vector);$r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;true;false;144;782;1035;69;34;4450;0;
ideal;EmptyVector;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.splitReducibleLoops $r7 = new Stack,$r7 (FlowGraph.splitReducibleLoops) Value: new java.util.Stack);$r7 = new java.util.Stack;<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;214;402;893;35;20;4450;0;
ideal;EmptyVector;ForwardQuery: (EDU.purdue.cs.bloat.trans.Peephole.removeUnreachable $r11 = new Stack,$r11 (Peephole.removeUnreachable) Value: new java.util.Stack);$r11 = new java.util.Stack;<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;true;false;322;410;682;35;20;4450;0;
ideal;EmptyVector;ForwardQuery: (dacapo.TestHarness.vectorise $r3 = new Vector,$r3 (TestHarness.vectorise) Value: new java.util.Vector);$r3 = new java.util.Vector;<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;true;false;98;240;361;17;14;4450;0;
