Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;MaxAccessPath
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClass $r21.<init>(r104),$r21 (ClassFileLoader.loadClass) Value: specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>(r104));specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>(r104);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;true;30105;7071;30041;0;215;4455;0;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r4.<init>($r5),$r4 (FileDigest.getBinary) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;43;214;11968;6;15;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClass $r47.<init>(r99),$r47 (ClassFileLoader.loadClass) Value: specialinvoke $r47.<java.io.FileInputStream: void <init>(java.io.File)>(r99));specialinvoke $r47.<java.io.FileInputStream: void <init>(java.io.File)>(r99);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;true;false;5649;2177;11934;446;178;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClassFromFile $r4.<init>(r1),$r4 (ClassFileLoader.loadClassFromFile) Value: specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1));specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClassFromFile(java.io.File)>;EDU.purdue.cs.bloat.file.ClassFileLoader;true;false;5345;2020;6295;417;168;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClassFromStream $r5.<init>(r2),$r5 (ClassFileLoader.loadClassFromStream) Value: specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2));specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClassFromStream(java.io.File,java.io.InputStream)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;239;865;954;23;35;4455;0;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r5.<init>(r0),$r5 (FileDigest.getBinary) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0));specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;true;false;654;1153;726;21;77;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r14.<init>(r117),$r14 (Main.editClass) Value: specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r117));specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r117);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;1827;1196;16089;93;58;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r13.<init>($r14),$r13 (Main.editClass) Value: specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14));specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;998;1196;14293;25;58;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFile.commitOnly $r5.<init>(r7),$r5 (ClassFile.commitOnly) Value: specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7));specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7);<EDU.purdue.cs.bloat.file.ClassFile: void commitOnly(java.util.Set,java.util.Set)>;EDU.purdue.cs.bloat.file.ClassFile;false;false;306;777;13298;24;36;4455;0;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.<init> r0.<init>(r1),r0 (TeeOutputStream.<init>) Value: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1));specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;21;88;10;10;13;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r2.<init>($r10),$r2 (FlowGraph.printGraph) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>($r10));specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>($r10);<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;20;76;9;9;11;4455;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9.<init>($r11,$r10),$r9 (Benchmark.<init>) Value: specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10));specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;2191;2015;1198;987;232;4455;0;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> r0.<init>($r3),r0 (TeePrintStream.<init>) Value: specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3));specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;4336;3982;2202;2123;242;4455;0;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> $r3.<init>(r1,r2),$r3 (TeePrintStream.<init>) Value: specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2));specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;20;73;11;8;11;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.outputStreamFor $r7.<init>(r1),$r7 (ClassFileLoader.outputStreamFor) Value: specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r1));specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);<EDU.purdue.cs.bloat.file.ClassFileLoader: java.io.OutputStream outputStreamFor(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;4073;1555;6449;316;87;4455;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12.<init>($r14,$r13),$r12 (Benchmark.<init>) Value: specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13));specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;2238;1966;1122;1111;230;4455;0;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.newLog $r2.<init>($r3),$r2 (TeeOutputStream.newLog) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3));specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;20;81;11;8;15;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r1.<init>($r2),$r1 (FlowGraph.printGraph) Value: specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2));specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2);<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;9;37;4;4;7;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r15.<init>(r119),$r15 (Main.editClass) Value: specialinvoke $r15.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r119));specialinvoke $r15.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r119);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;15;195;6;8;5;4455;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12 = new TeePrintStream,$r12 (Benchmark.<init>) Value: new dacapo.TeePrintStream);$r12 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;211;60;144;44;11;4455;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9 = new TeePrintStream,$r9 (Benchmark.<init>) Value: new dacapo.TeePrintStream);$r9 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;77;60;35;40;11;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r15 = new PrintStream,$r15 (Main.editClass) Value: new java.io.PrintStream);$r15 = new java.io.PrintStream;<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;62;51;33;27;10;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r1 = new PrintStream,$r1 (FlowGraph.printGraph) Value: new java.io.PrintStream);$r1 = new java.io.PrintStream;<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;62;65;31;28;10;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueFolding.transform $r11 = new PrintWriter,$r11 (ValueFolding.transform) Value: new java.io.PrintWriter);$r11 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueFolding: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueFolding;false;false;8517;19101;279819;2439;800;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.print $r2 = new PrintWriter,$r2 (FlowGraph.print) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.cfg.FlowGraph: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;30013;19528;30001;0;815;4455;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.enableValidationReport $r2 = new PrintWriter,$r2 (Benchmark.enableValidationReport) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;false;246;466;241383;75;50;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.transform $r22 = new PrintWriter,$r22 (ValueNumbering.transform) Value: new java.io.PrintWriter);$r22 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;30006;19092;30001;0;799;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueFolding.transform $r13 = new PrintWriter,$r13 (ValueFolding.transform) Value: new java.io.PrintWriter);$r13 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueFolding: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueFolding;false;true;30062;22820;30059;0;810;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.tree.PrintVisitor.<init> $r2 = new PrintWriter,$r2 (PrintVisitor.<init>) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.tree.PrintVisitor: void <init>(java.io.PrintStream)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;true;30015;17958;30001;0;804;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.tree.PrintVisitor.<init> $r2 = new PrintWriter,$r2 (PrintVisitor.<init>) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.tree.PrintVisitor: void <init>(java.io.Writer)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;true;30055;18658;30029;0;805;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.context.CachingBloatContext.toString $r4 = new PrintWriter,$r4 (CachingBloatContext.toString) Value: new java.io.PrintWriter);$r4 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;false;false;392;446;121208;22;12;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.transform $r19 = new PrintWriter,$r19 (ValueNumbering.transform) Value: new java.io.PrintWriter);$r19 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;30217;36531;30205;0;1102;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFile.print $r2 = new PrintWriter,$r2 (ClassFile.print) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.file.ClassFile: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.file.ClassFile;false;false;150;243;90619;11;14;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.<init> $r1 = new PrintWriter,$r1 (ValueNumbering.<init>) Value: new java.io.PrintWriter);$r1 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void <init>()>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;30037;41222;30018;0;1154;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r2 = new PrintWriter,$r2 (FlowGraph.printGraph) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph(java.io.PrintStream)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;30013;19688;30002;0;821;4455;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.transform $r32 = new PrintWriter,$r32 (ValueNumbering.transform) Value: new java.io.PrintWriter);$r32 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;30012;19130;30006;0;801;4455;0;
