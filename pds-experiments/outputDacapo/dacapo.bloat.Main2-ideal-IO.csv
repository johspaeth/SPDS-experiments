Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;MaxAccessPath
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r5.<init>(r0),$r5 (FileDigest.getBinary) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0));specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;true;false;2501;1155;45955;66;72;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClass $r21.<init>(r104),$r21 (ClassFileLoader.loadClass) Value: specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>(r104));specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>(r104);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;true;30313;14564;30285;0;128;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClassFromStream $r5.<init>(r2),$r5 (ClassFileLoader.loadClassFromStream) Value: specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2));specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClassFromStream(java.io.File,java.io.InputStream)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;264;865;13180;29;35;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClass $r47.<init>(r99),$r47 (ClassFileLoader.loadClass) Value: specialinvoke $r47.<java.io.FileInputStream: void <init>(java.io.File)>(r99));specialinvoke $r47.<java.io.FileInputStream: void <init>(java.io.File)>(r99);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;true;false;6569;2179;12929;1129;164;4450;0;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r4.<init>($r5),$r4 (FileDigest.getBinary) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;423;214;6370;4;15;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.loadClassFromFile $r4.<init>(r1),$r4 (ClassFileLoader.loadClassFromFile) Value: specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1));specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClassFromFile(java.io.File)>;EDU.purdue.cs.bloat.file.ClassFileLoader;true;false;5888;2022;5949;1056;164;4450;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12.<init>($r14,$r13),$r12 (Benchmark.<init>) Value: specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13));specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;2611;1821;1654;930;219;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r13.<init>($r14),$r13 (Main.editClass) Value: specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14));specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;1970;1198;19291;35;58;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r15.<init>(r119),$r15 (Main.editClass) Value: specialinvoke $r15.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r119));specialinvoke $r15.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r119);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;23;195;11;11;5;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFile.commitOnly $r5.<init>(r7),$r5 (ClassFile.commitOnly) Value: specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7));specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7);<EDU.purdue.cs.bloat.file.ClassFile: void commitOnly(java.util.Set,java.util.Set)>;EDU.purdue.cs.bloat.file.ClassFile;false;false;536;777;17302;39;36;4450;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9.<init>($r11,$r10),$r9 (Benchmark.<init>) Value: specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10));specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;3777;2175;1879;1888;268;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r1.<init>($r2),$r1 (FlowGraph.printGraph) Value: specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2));specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2);<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;16;37;7;7;7;4450;0;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.newLog $r2.<init>($r3),$r2 (TeeOutputStream.newLog) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3));specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;33;81;17;15;15;4450;0;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> r0.<init>($r3),r0 (TeePrintStream.<init>) Value: specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3));specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;4784;3997;2765;2007;279;4450;0;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.<init> r0.<init>(r1),r0 (TeeOutputStream.<init>) Value: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1));specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;20;88;10;9;13;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.outputStreamFor $r7.<init>(r1),$r7 (ClassFileLoader.outputStreamFor) Value: specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r1));specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);<EDU.purdue.cs.bloat.file.ClassFileLoader: java.io.OutputStream outputStreamFor(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;7410;1557;8178;572;87;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r14.<init>(r117),$r14 (Main.editClass) Value: specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r117));specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r117);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;640;1198;773;35;58;4450;0;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> $r3.<init>(r1,r2),$r3 (TeePrintStream.<init>) Value: specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2));specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;19;73;7;11;11;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r2.<init>($r10),$r2 (FlowGraph.printGraph) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>($r10));specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>($r10);<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;16;76;8;7;11;4450;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12 = new TeePrintStream,$r12 (Benchmark.<init>) Value: new dacapo.TeePrintStream);$r12 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;158;60;94;43;11;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r15 = new PrintStream,$r15 (Main.editClass) Value: new java.io.PrintStream);$r15 = new java.io.PrintStream;<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;80;51;39;39;10;4450;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9 = new TeePrintStream,$r9 (Benchmark.<init>) Value: new dacapo.TeePrintStream);$r9 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;80;60;39;39;11;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r1 = new PrintStream,$r1 (FlowGraph.printGraph) Value: new java.io.PrintStream);$r1 = new java.io.PrintStream;<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;98;65;51;45;10;4450;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.enableValidationReport $r2 = new PrintWriter,$r2 (Benchmark.enableValidationReport) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;false;496;494;321842;174;55;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueFolding.transform $r13 = new PrintWriter,$r13 (ValueFolding.transform) Value: new java.io.PrintWriter);$r13 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueFolding: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueFolding;false;true;31041;21135;31007;0;810;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.print $r2 = new PrintWriter,$r2 (FlowGraph.print) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.cfg.FlowGraph: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;30038;19051;30025;0;815;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r2 = new PrintWriter,$r2 (FlowGraph.printGraph) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph(java.io.PrintStream)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;30014;19218;30001;0;821;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueFolding.transform $r11 = new PrintWriter,$r11 (ValueFolding.transform) Value: new java.io.PrintWriter);$r11 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueFolding: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueFolding;false;false;7835;19101;230578;2723;800;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.tree.PrintVisitor.<init> $r2 = new PrintWriter,$r2 (PrintVisitor.<init>) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.tree.PrintVisitor: void <init>(java.io.PrintStream)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;true;30017;16376;30004;0;804;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.tree.PrintVisitor.<init> $r2 = new PrintWriter,$r2 (PrintVisitor.<init>) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.tree.PrintVisitor: void <init>(java.io.Writer)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;true;30021;19102;30001;0;805;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.transform $r22 = new PrintWriter,$r22 (ValueNumbering.transform) Value: new java.io.PrintWriter);$r22 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;35991;19097;35983;0;800;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.transform $r19 = new PrintWriter,$r19 (ValueNumbering.transform) Value: new java.io.PrintWriter);$r19 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;30148;35028;30134;0;1016;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.<init> $r1 = new PrintWriter,$r1 (ValueNumbering.<init>) Value: new java.io.PrintWriter);$r1 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void <init>()>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;42152;27203;42148;0;753;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFile.print $r2 = new PrintWriter,$r2 (ClassFile.print) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.file.ClassFile: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.file.ClassFile;false;false;199;243;54681;15;14;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.trans.ValueNumbering.transform $r32 = new PrintWriter,$r32 (ValueNumbering.transform) Value: new java.io.PrintWriter);$r32 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;53368;19132;53354;0;801;4450;0;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.context.CachingBloatContext.toString $r4 = new PrintWriter,$r4 (CachingBloatContext.toString) Value: new java.io.PrintWriter);$r4 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;false;false;513;446;1192;29;12;4450;0;
