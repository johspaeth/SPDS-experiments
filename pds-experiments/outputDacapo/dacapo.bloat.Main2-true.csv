Analysis;Rule;Seed;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;
ideal-ap;EmptyVector;$r11 @ $r11 = new java.util.Stack;<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;true;false;557;872;333;224;19;4450;
ideal-ap;EmptyVector;$r3 @ $r3 = new java.util.Vector;<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;false;false;242;560;68;174;13;4450;
ideal-ap;EmptyVector;$r7 @ $r7 = new java.util.Stack;<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;352;3536;114;238;19;4450;
ideal-ap;EmptyVector;$r4 @ $r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;186;254;31;155;13;4450;
ideal-ap;EmptyVector;$r4 @ $r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;false;false;554;1638;391;163;32;4450;
ideal-ap;EmptyVector;$r2 @ $r2 = new java.util.Vector;<EDU.purdue.cs.bloat.tree.LEGatherer: java.util.Vector getLEs(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.tree.LEGatherer;false;true;38121;1344719;38121;0;794;4450;
ideal-ap;EmptyVector;$r3 @ $r3 = new java.util.Vector;<EDU.purdue.cs.bloat.tree.AscendVisitor: void <init>(java.util.Hashtable,java.util.Hashtable)>;EDU.purdue.cs.bloat.tree.AscendVisitor;false;true;31028;1911701;31028;0;791;4450;
ideal-ap;EmptyVector;$r22 @ $r22 = new java.util.Stack;<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;2878;24420;1805;1073;19;4450;
ideal-ap;EmptyVector;$r3 @ $r3 = new java.util.Stack;<EDU.purdue.cs.bloat.util.UnionFind: EDU.purdue.cs.bloat.util.UnionFind$Node findNode(EDU.purdue.cs.bloat.util.UnionFind$Node)>;EDU.purdue.cs.bloat.util.UnionFind;true;false;170;320;43;127;19;4450;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;true;1911;720;1911;0;32;4450;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClassFromStream(java.io.File,java.io.InputStream)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;402;1597;108;294;30;4450;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r1);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClassFromFile(java.io.File)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;true;60075;1646;60075;0;56;4450;
ideal-ap;IO;$r47 @ specialinvoke $r47.<java.io.FileInputStream: void <init>(java.io.File)>(r99);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;true;60053;1726;60053;0;56;4450;
ideal-ap;IO;$r21 @ specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>(r104);<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;true;60048;1642;60048;0;56;4450;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;121;194;26;95;9;4450;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12.<init>($r14,$r13),$r12 (Benchmark.<init>) Value: specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;3563;2312;2149;1379;275;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r1.<init>($r2),$r1 (FlowGraph.printGraph) Value: specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2));<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;43;37;25;17;7;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r13.<init>($r14),$r13 (Main.editClass) Value: specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14));<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;1985;1198;242;31;85;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r14.<init>(r117),$r14 (Main.editClass) Value: specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r117));<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;989;1198;901;49;85;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r2.<init>($r10),$r2 (FlowGraph.printGraph) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>($r10));<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;25;76;12;11;11;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFile.commitOnly $r5.<init>(r7),$r5 (ClassFile.commitOnly) Value: specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7));<EDU.purdue.cs.bloat.file.ClassFile: void commitOnly(java.util.Set,java.util.Set)>;EDU.purdue.cs.bloat.file.ClassFile;false;false;431;777;358;29;36;4450;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.newLog $r2.<init>($r3),$r2 (TeeOutputStream.newLog) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3));<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;25;81;12;12;15;4450;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> $r3.<init>(r1,r2),$r3 (TeePrintStream.<init>) Value: specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;25;73;12;12;11;4450;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.<init> r0.<init>(r1),r0 (TeeOutputStream.<init>) Value: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1));<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;31;88;17;12;13;4450;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9.<init>($r11,$r10),$r9 (Benchmark.<init>) Value: specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;2216;2008;1143;1067;237;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r15.<init>(r119),$r15 (Main.editClass) Value: specialinvoke $r15.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r119));<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;15;195;8;7;5;4450;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> r0.<init>($r3),r0 (TeePrintStream.<init>) Value: specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;4750;4329;2446;2293;276;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.file.ClassFileLoader.outputStreamFor $r7.<init>(r1),$r7 (ClassFileLoader.outputStreamFor) Value: specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r1));<EDU.purdue.cs.bloat.file.ClassFileLoader: java.io.OutputStream outputStreamFor(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;7295;1557;4919;655;114;4450;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;1032;1764;773;259;33;4450;
ideal-ap;IO;$r3 @ specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;699;1759;531;168;32;4450;
ideal-ap;IO;$r15 @ specialinvoke $r15.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r119);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;144;198;3;141;4;4450;
ideal-ap;IO;$r14 @ specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r117);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;true;60065;1045;60065;0;25;4450;
ideal-ap;IO;$r12 @ specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;170;826;15;155;18;4450;
ideal-ap;IO;$r1 @ specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2);<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;34550;1311104;34550;0;808;4450;
ideal-ap;IO;$r2 @ specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.lang.String)>($r10);<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;31021;1556266;31021;0;814;4450;
ideal-ap;IO;$r9 @ specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;93;781;5;88;18;4450;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7);<EDU.purdue.cs.bloat.file.ClassFile: void commitOnly(java.util.Set,java.util.Set)>;EDU.purdue.cs.bloat.file.ClassFile;false;false;198;1138;59;139;32;4450;
ideal-ap;IO;$r2 @ specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;416;1932;315;101;40;4450;
ideal-ap;IO;$r7 @ specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);<EDU.purdue.cs.bloat.file.ClassFileLoader: java.io.OutputStream outputStreamFor(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;true;60053;1203;60053;0;49;4450;
ideal-ap;IO;$r13 @ specialinvoke $r13.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;346;630;262;84;16;4450;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;109;1590;12;97;19;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.cfg.FlowGraph.printGraph $r1 = new PrintStream,$r1 (FlowGraph.printGraph) Value: new java.io.PrintStream);<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;173;65;104;44;10;4450;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12 = new TeePrintStream,$r12 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;84;60;39;44;11;4450;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9 = new TeePrintStream,$r9 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;91;60;44;45;11;4450;
ideal;IO;ForwardQuery: (EDU.purdue.cs.bloat.optimize.Main.editClass $r15 = new PrintStream,$r15 (Main.editClass) Value: new java.io.PrintStream);<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;false;88;51;49;38;10;4450;
ideal-ap;IO;$r1 @ $r1 = new java.io.PrintStream;<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;31019;1262099;31019;0;814;4450;
ideal-ap;IO;$r15 @ $r15 = new java.io.PrintStream;<EDU.purdue.cs.bloat.optimize.Main: void editClass(java.lang.String)>;EDU.purdue.cs.bloat.optimize.Main;false;true;818;265;818;0;12;4450;
ideal-ap;IO;$r12 @ $r12 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;true;30761;904;30761;0;27;4450;
ideal-ap;IO;$r9 @ $r9 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;true;698;859;698;0;27;4450;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.cfg.FlowGraph: void printGraph(java.io.PrintStream)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;30998;1322538;30998;0;806;4450;
ideal-ap;IO;$r11 @ $r11 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueFolding: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueFolding;false;true;31023;1564947;31023;0;796;4450;
ideal-ap;IO;$r1 @ $r1 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void <init>()>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;31022;1859083;31022;0;823;4450;
ideal-ap;IO;$r19 @ $r19 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;36134;1895194;36134;0;821;4450;
ideal-ap;IO;$r22 @ $r22 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;31208;1912032;31208;0;794;4450;
ideal-ap;IO;$r4 @ $r4 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;false;false;304;381;139;165;11;4450;
ideal-ap;IO;$r13 @ $r13 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueFolding: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueFolding;false;true;38007;1914735;38007;0;803;4450;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.tree.PrintVisitor: void <init>(java.io.PrintStream)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;true;31016;1724683;31016;0;797;4450;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;true;60146;1661;60146;0;23;4450;
ideal-ap;IO;$r32 @ $r32 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.trans.ValueNumbering: void transform(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.trans.ValueNumbering;false;true;60048;1;60048;0;13;4450;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.tree.PrintVisitor: void <init>(java.io.Writer)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;true;37534;2022994;37534;0;797;4450;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.file.ClassFile: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.file.ClassFile;false;true;60066;255;60066;0;12;4450;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<EDU.purdue.cs.bloat.cfg.FlowGraph: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;true;31017;2154068;31017;0;808;4450;
