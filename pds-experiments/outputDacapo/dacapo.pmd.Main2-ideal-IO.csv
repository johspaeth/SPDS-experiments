Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;MaxAccessPath
ideal;IO;ForwardQuery: (net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream $r7.<init>(r2),$r7 (ResourceLoader.loadResourceAsStream) Value: specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r2));specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r2);<net.sourceforge.pmd.util.ResourceLoader: java.io.InputStream loadResourceAsStream(java.lang.String,java.lang.ClassLoader)>;net.sourceforge.pmd.util.ResourceLoader;false;false;106;193;57;27;9;3780;0;
ideal;IO;ForwardQuery: (net.sourceforge.pmd.PMD.processFiles $r10.<init>($r11),$r10 (PMD.processFiles) Value: specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r11));specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r11);<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;68;65;41;26;6;3780;0;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r5.<init>(r0),$r5 (FileDigest.getBinary) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0));specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;true;false;1666;1390;4052;37;92;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipFileResource $r4.<init>($r5),$r4 (Benchmark.unpackZipFileResource) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>;dacapo.Benchmark;true;false;2028;2178;2398;96;66;3780;0;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r4.<init>($r5),$r4 (FileDigest.getBinary) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;47;214;371;6;15;3780;0;
ideal;IO;ForwardQuery: (dacapo.pmd.PmdHarness.collectFilesFromFile $r5.<init>(r1),$r5 (PmdHarness.collectFilesFromFile) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(r1));specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);<dacapo.pmd.PmdHarness: java.lang.String collectFilesFromFile(java.lang.String)>;dacapo.pmd.PmdHarness;false;false;10;24;5;4;5;3780;0;
ideal;IO;ForwardQuery: (net.sourceforge.pmd.FileDataSource.getInputStream $r1.<init>($r2),$r1 (FileDataSource.getInputStream) Value: specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2));specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);<net.sourceforge.pmd.FileDataSource: java.io.InputStream getInputStream()>;net.sourceforge.pmd.FileDataSource;false;false;21;121;10;11;11;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r8.<init>(r0),$r8 (Benchmark.unpackZipStream) Value: specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0));specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;229;603;294;27;22;3780;0;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> r0.<init>($r3),r0 (TeePrintStream.<init>) Value: specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3));specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;1015;1172;567;426;118;3780;0;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.<init> r0.<init>(r1),r0 (TeeOutputStream.<init>) Value: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1));specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;79;88;47;30;13;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r12.<init>(r4),$r12 (Benchmark.unpackZipStream) Value: specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4));specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;1291;971;1723;27;61;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r13.<init>(r5,2048),$r13 (Benchmark.unpackZipStream) Value: specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048));specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;37;170;433;4;11;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12.<init>($r14,$r13),$r12 (Benchmark.<init>) Value: specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13));specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;281;889;145;134;113;3780;0;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> $r3.<init>(r1,r2),$r3 (TeePrintStream.<init>) Value: specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2));specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;20;73;10;9;11;3780;0;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.newLog $r2.<init>($r3),$r2 (TeeOutputStream.newLog) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3));specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;17;81;8;8;15;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9.<init>($r11,$r10),$r9 (Benchmark.<init>) Value: specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10));specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;38;282;21;17;34;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12 = new TeePrintStream,$r12 (Benchmark.<init>) Value: new dacapo.TeePrintStream);$r12 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;145;60;87;34;11;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9 = new TeePrintStream,$r9 (Benchmark.<init>) Value: new dacapo.TeePrintStream);$r9 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;63;60;31;31;11;3780;0;
ideal;IO;ForwardQuery: (dacapo.Benchmark.enableValidationReport $r2 = new PrintWriter,$r2 (Benchmark.enableValidationReport) Value: new java.io.PrintWriter);$r2 = new java.io.PrintWriter;<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;false;361;365;360;97;37;3780;0;
