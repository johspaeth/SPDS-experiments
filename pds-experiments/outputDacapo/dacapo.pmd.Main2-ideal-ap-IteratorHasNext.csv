Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;MaxAccessPath
ideal-ap;IteratorHasNext;r33 @ r33 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();r33 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;30203;77;30071;132;4;3780;r0[names, last, prev, next, item];
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.EmacsRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.EmacsRenderer;false;false;289;50;204;85;4;3780;r0[names, last, prev, next, item];
ideal-ap;IteratorHasNext;$r2 @ $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();$r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: boolean isEmpty()>;net.sourceforge.pmd.Report;false;false;187;17;127;60;2;3780;r0[names, last, prev, next, item];
ideal-ap;IteratorHasNext;r94 @ r94 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();r94 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;141;70;76;65;4;3780;r0[names, last, prev, next, item];
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;132;410;68;64;4;3780;r0[names, last, prev, next, item];
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;54;66;16;38;4;3780;r0[names, last, prev, next, item];
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: void apply(java.util.List,net.sourceforge.pmd.RuleContext)>;net.sourceforge.pmd.RuleSet;false;true;60032;50;60032;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.CSVRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.CSVRenderer;false;false;206;72;151;55;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;$r11 @ $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();$r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;30075;40;30023;52;3;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;$r2 @ $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();$r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator errors()>;net.sourceforge.pmd.Report;false;false;128;346;58;70;8;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r42 @ r42 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r42 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;150;87;99;51;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.OccurrenceFinder: java.lang.Object visit(net.sourceforge.pmd.ast.ASTPrimaryExpression,java.lang.Object)>;net.sourceforge.pmd.symboltable.OccurrenceFinder;false;false;66;60;19;47;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r5 @ r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;151;61;103;48;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r187 @ r187 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r187 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;false;false;203;261;145;58;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: java.util.Set getAllRules()>;net.sourceforge.pmd.RuleSets;false;false;79;51;32;47;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: java.lang.StringBuffer glomIRuleViolations(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;168;126;112;56;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;r8 @ r8 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();r8 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseInternallyDefinedRuleNode(net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)>;net.sourceforge.pmd.RuleSetFactory;false;false;104;125;43;61;7;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, key];
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.LocalScope;false;true;39769;109;39769;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r46 @ $r46 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();$r46 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;true;60036;424;60036;0;5;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;108;71;51;57;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();r6 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;true;false;30084;128;30027;57;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r8 @ r8 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();r8 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;72;105;21;51;5;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.LocalScope;true;false;80;71;20;60;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: void glomSuppressions(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;122;123;66;56;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();<dacapo.pmd.PmdHarness: java.lang.String commaSeparate(java.util.List)>;dacapo.pmd.PmdHarness;false;false;71;62;26;45;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath: java.lang.String clipPath(java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath;true;false;30077;94;30022;55;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r47 @ r47 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r47 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.VBHTMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.VBHTMLRenderer;false;false;187;106;119;68;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r74 @ r74 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r74 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;174;146;113;61;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: boolean usesDFA(net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;93;55;37;56;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r38 @ r38 = interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>();r38 = interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: java.util.List collect(java.lang.String,net.sourceforge.pmd.SourceFileSelector)>;net.sourceforge.pmd.PMD;false;false;30070;52;30028;42;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;57;71;18;39;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.MethodScope;true;false;60;71;18;42;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r16 @ $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();$r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;true;43811;113;43811;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.MethodScope;false;true;60029;1;60029;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r2 @ r2 = virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>();r2 = virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getCountSummary()>;net.sourceforge.pmd.Report;false;false;77;89;33;44;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.SourceFileScope;false;true;60029;71;60029;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: void apply(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;70;53;27;43;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void printRuleNamesInDebug(boolean,net.sourceforge.pmd.RuleSets)>;net.sourceforge.pmd.PMD;true;false;30069;77;30020;49;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getSummary()>;net.sourceforge.pmd.Report;false;false;140;59;91;49;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseRuleNodeWithExclude(net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)>;net.sourceforge.pmd.RuleSetFactory;false;true;60030;56;60030;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.SourceFileScope;false;true;60028;109;60028;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;30067;40;30023;44;3;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: void addSuppressed(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;89;70;47;42;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, attribute];
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.SummaryHTMLRenderer: java.lang.String renderSummary(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.SummaryHTMLRenderer;true;false;30064;107;30019;45;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;true;false;30065;111;30020;45;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;$r2 @ $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();$r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator iterator()>;net.sourceforge.pmd.Report;false;false;171;727;99;72;12;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;$r24 @ $r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();$r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;false;true;60031;71;60031;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.LocalScope;false;true;60027;1;60027;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: boolean usesDFA()>;net.sourceforge.pmd.RuleSet;false;true;60026;52;60026;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;r191 @ r191 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();r191 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;true;false;30084;496;30031;53;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;r5 @ r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;132;65;86;46;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.MethodScope;false;true;60032;109;60032;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: net.sourceforge.pmd.Rule getRuleByName(java.lang.String)>;net.sourceforge.pmd.RuleSet;false;true;60030;54;60030;0;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();r1 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;30069;156;30022;47;4;3780;r0[sourceTypeDiscoverer, mapExtensionOnSourceType, table, array, next, value, variableNames, keySet];
