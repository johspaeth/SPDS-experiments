Analysis;Rule;Seed;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.ast.JJTJavaParserState.<init> $r2 = new Stack,$r2 (JJTJavaParserState.<init>) Value: new java.util.Stack);<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;false;true;30042;18614;30020;0;257;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder.<init> $r1 = new Stack,$r1 (ScopeAndDeclarationFinder.<init>) Value: new java.util.Stack);<net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder: void <init>()>;net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder;true;false;1533;1769;530;1212;272;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.ast.JJTJavaParserState.<init> $r1 = new Stack,$r1 (JJTJavaParserState.<init>) Value: new java.util.Stack);<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;false;true;30059;18614;30057;0;257;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.jsp.ast.JJTJspParserState.<init> $r2 = new Stack,$r2 (JJTJspParserState.<init>) Value: new java.util.Stack);<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;false;true;30003;18689;30001;0;271;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor.addVariableAccess $r6 = new Vector,$r6 (VariableAccessVisitor.addVariableAccess) Value: new java.util.Vector);<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: void addVariableAccess(int,net.sourceforge.pmd.dfa.variableaccess.VariableAccess,java.util.List)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;33;166;24;6;22;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.jsp.ast.JspParser.<init> $r6 = new Vector,$r6 (JspParser.<init>) Value: new java.util.Vector);<net.sourceforge.pmd.jsp.ast.JspParser: void <init>(net.sourceforge.pmd.jsp.ast.CharStream)>;net.sourceforge.pmd.jsp.ast.JspParser;false;true;34486;18317;34483;0;261;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.dfa.Structure.<init> $r2 = new Stack,$r2 (Structure.<init>) Value: new java.util.Stack);<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;true;false;18406;5013;9940;245;291;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.dfa.Structure.<init> $r3 = new Stack,$r3 (Structure.<init>) Value: new java.util.Stack);<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;false;false;13559;4204;7133;13321;287;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.ast.JavaParser.<init> $r6 = new Vector,$r6 (JavaParser.<init>) Value: new java.util.Vector);<net.sourceforge.pmd.ast.JavaParser: void <init>(net.sourceforge.pmd.ast.CharStream)>;net.sourceforge.pmd.ast.JavaParser;false;true;30232;17891;30231;0;253;3775;
ideal;EmptyVector;ForwardQuery: (dacapo.parser.ConfigFile.<init> $r4 = new Vector,$r4 (ConfigFile.<init>) Value: new java.util.Vector);<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;true;false;63;782;31;30;34;3775;
ideal;EmptyVector;ForwardQuery: (net.sourceforge.pmd.jsp.ast.JJTJspParserState.<init> $r1 = new Stack,$r1 (JJTJspParserState.<init>) Value: new java.util.Stack);<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;false;true;30538;18229;30537;0;271;3775;
ideal;EmptyVector;ForwardQuery: (dacapo.parser.ConfigFile.sizeClause $r4 = new Vector,$r4 (ConfigFile.sizeClause) Value: new java.util.Vector);<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;52;238;38;11;14;3775;
ideal;EmptyVector;ForwardQuery: (dacapo.TestHarness.vectorise $r3 = new Vector,$r3 (TestHarness.vectorise) Value: new java.util.Vector);<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;true;false;67;240;49;15;14;3775;
ideal-ap;EmptyVector;$r2 @ $r2 = new java.util.Stack;<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;false;true;60385;5861;60385;0;162;3775;
ideal-ap;EmptyVector;$r1 @ $r1 = new java.util.Stack;<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;false;true;60561;28265;60561;0;733;3775;
ideal-ap;EmptyVector;$r2 @ $r2 = new java.util.Stack;<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;false;true;4457;28346;4457;0;733;3775;
ideal-ap;EmptyVector;$r6 @ $r6 = new java.util.Vector;<net.sourceforge.pmd.jsp.ast.JspParser: void <init>(net.sourceforge.pmd.jsp.ast.CharStream)>;net.sourceforge.pmd.jsp.ast.JspParser;false;true;4218;4797;4218;0;159;3775;
ideal-ap;EmptyVector;$r2 @ $r2 = new java.util.Stack;<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;false;true;3528;5502;3528;0;287;3775;
ideal-ap;EmptyVector;$r1 @ $r1 = new java.util.Stack;<net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder: void <init>()>;net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder;false;true;60115;2038;60115;0;270;3775;
ideal-ap;EmptyVector;$r4 @ $r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;196;254;19;177;13;3775;
ideal-ap;EmptyVector;$r4 @ $r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;false;false;614;1616;469;145;32;3775;
ideal-ap;EmptyVector;$r6 @ $r6 = new java.util.Vector;<net.sourceforge.pmd.ast.JavaParser: void <init>(net.sourceforge.pmd.ast.CharStream)>;net.sourceforge.pmd.ast.JavaParser;false;true;4938;21458;4938;0;730;3775;
ideal-ap;EmptyVector;$r3 @ $r3 = new java.util.Stack;<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;false;true;645;4695;645;0;283;3775;
ideal-ap;EmptyVector;$r3 @ $r3 = new java.util.Vector;<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;false;false;112;560;31;81;13;3775;
ideal-ap;EmptyVector;$r1 @ $r1 = new java.util.Stack;<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;false;true;60143;5780;60143;0;162;3775;
ideal-ap;EmptyVector;$r6 @ $r6 = new java.util.Vector;<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: void addVariableAccess(int,net.sourceforge.pmd.dfa.variableaccess.VariableAccess,java.util.List)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;true;694;185;694;0;15;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.SourceFileScope.toString $r4.iterator(),$r5 (SourceFileScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.SourceFileScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.SourceFileScope;false;false;46;7;13;1;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.toString $r15.iterator(),$r16 (ClassScope.toString) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;false;10;7;1;1;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor.markUsages $r20.iterator(),r8 (VariableAccessVisitor.markUsages) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;373;117;261;92;10;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSets.usesDFA $r4.iterator(),r2 (RuleSets.usesDFA) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSets: boolean usesDFA(net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;132;69;109;19;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.SummaryHTMLRenderer.renderSummary $r11.iterator(),r4 (SummaryHTMLRenderer.renderSummary) Value: interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.SummaryHTMLRenderer: java.lang.String renderSummary(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.SummaryHTMLRenderer;false;false;1;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (dacapo.Benchmark.postIterationCleanup $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;false;false;1;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSet.getRuleByName $r4.iterator(),r2 (RuleSet.getRuleByName) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSet: net.sourceforge.pmd.Rule getRuleByName(java.lang.String)>;net.sourceforge.pmd.RuleSet;false;false;126;68;111;11;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.findVariableHere $r5.iterator(),$r6 (ClassScope.findVariableHere) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;false;false;4;3;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.getVariableDeclarations $r5.iterator(),$r6 (ClassScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.ClassScope;false;false;4;4;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.findVariableHere $r23.iterator(),$r24 (ClassScope.findVariableHere) Value: interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;false;false;4;4;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.LocalScope.toString $r4.iterator(),$r5 (LocalScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.LocalScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.LocalScope;false;false;9;7;1;1;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.PapariTextRenderer.render $r20.iterator(),r191 (PapariTextRenderer.render) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;false;false;1;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.findVariableHere $r29.iterator(),r33 (ClassScope.findVariableHere) Value: interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;false;false;3;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.CSVRenderer.render r1.iterator(),r3 (CSVRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.CSVRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.CSVRenderer;false;false;137;92;120;12;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSetFactory.parseRuleNodeWithExclude $r11.iterator(),r6 (RuleSetFactory.parseRuleNodeWithExclude) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSetFactory: void parseRuleNodeWithExclude(net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)>;net.sourceforge.pmd.RuleSetFactory;false;false;116;70;102;10;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSetFactory.parseInternallyDefinedRuleNode $r23.iterator(),r8 (RuleSetFactory.parseInternallyDefinedRuleNode) Value: interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSetFactory: void parseInternallyDefinedRuleNode(net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)>;net.sourceforge.pmd.RuleSetFactory;false;false;154;142;131;17;15;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.MethodScope.getVariableDeclarations $r5.iterator(),$r6 (MethodScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.MethodScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.MethodScope;false;false;6;4;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.VBHTMLRenderer.render r1.iterator(),r47 (VBHTMLRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.VBHTMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.VBHTMLRenderer;false;false;128;126;113;10;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.Report.errors $r1.iterator(),$r2 (Report.errors) Value: interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.Report: java.util.Iterator errors()>;net.sourceforge.pmd.Report;false;false;377;383;338;20;14;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.PMD.processFiles r1.iterator(),r6 (PMD.processFiles) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;46;80;40;3;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.Report.getCountSummary $r7.iterator(),r2 (Report.getCountSummary) Value: virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>());<net.sourceforge.pmd.Report: java.util.Map getCountSummary()>;net.sourceforge.pmd.Report;false;false;54;102;47;4;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.OccurrenceFinder.visit r4.iterator(),r5 (OccurrenceFinder.visit) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.OccurrenceFinder: java.lang.Object visit(net.sourceforge.pmd.ast.ASTPrimaryExpression,java.lang.Object)>;net.sourceforge.pmd.symboltable.OccurrenceFinder;false;false;39;76;33;2;10;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.Report.getSummary $r5.iterator(),r2 (Report.getSummary) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.Report: java.util.Map getSummary()>;net.sourceforge.pmd.Report;false;false;50;78;42;4;11;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.toString $r21.iterator(),r1 (ClassScope.toString) Value: interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;false;2;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.MethodScope.findVariableHere $r6.iterator(),$r7 (MethodScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.MethodScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.MethodScope;false;false;2;4;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.LocalScope.getVariableDeclarations $r5.iterator(),$r6 (LocalScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.LocalScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.LocalScope;false;false;2;4;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.XMLRenderer.render r1.iterator(),r74 (XMLRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;69;166;59;7;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.LocalScope.findVariableHere $r6.iterator(),$r7 (LocalScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.LocalScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.LocalScope;false;false;2;4;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor.markUsages r3.iterator(),r4 (VariableAccessVisitor.markUsages) Value: interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;1;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.toString $r45.iterator(),$r46 (ClassScope.toString) Value: interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;false;4;7;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.PMD.collect r37.iterator(),r38 (PMD.collect) Value: interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.PMD: java.util.List collect(java.lang.String,net.sourceforge.pmd.SourceFileSelector)>;net.sourceforge.pmd.PMD;false;false;50;66;45;3;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.Report.isEmpty $r1.iterator(),$r2 (Report.isEmpty) Value: interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.Report: boolean isEmpty()>;net.sourceforge.pmd.Report;false;false;16;39;14;0;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSets.apply $r6.iterator(),r4 (RuleSets.apply) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSets: void apply(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;40;67;34;3;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.TextRenderer.addSuppressed $r5.iterator(),r3 (TextRenderer.addSuppressed) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.TextRenderer: void addSuppressed(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;41;84;34;4;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.PMD.printRuleNamesInDebug $r3.iterator(),r1 (PMD.printRuleNamesInDebug) Value: interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.PMD: void printRuleNamesInDebug(boolean,net.sourceforge.pmd.RuleSets)>;net.sourceforge.pmd.PMD;false;false;0;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.HTMLRenderer.glomSuppressions $r6.iterator(),r3 (HTMLRenderer.glomSuppressions) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.HTMLRenderer: void glomSuppressions(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;66;137;54;7;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath.clipPath $r4.iterator(),r2 (IDEAJRenderer$SourcePath.clipPath) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath: java.lang.String clipPath(java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath;false;false;0;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.ClassScope.findVariableHere $r10.iterator(),$r11 (ClassScope.findVariableHere) Value: interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;false;false;2;3;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (dacapo.pmd.PmdHarness.commaSeparate r0.iterator(),r1 (PmdHarness.commaSeparate) Value: interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>());<dacapo.pmd.PmdHarness: java.lang.String commaSeparate(java.util.List)>;dacapo.pmd.PmdHarness;false;false;49;76;42;4;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSet.usesDFA $r3.iterator(),r1 (RuleSet.usesDFA) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSet: boolean usesDFA()>;net.sourceforge.pmd.RuleSet;false;false;44;66;40;2;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.TextRenderer.render r1.iterator(),r42 (TextRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.TextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;40;107;34;3;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.SourceFileScope.findVariableHere $r6.iterator(),$r7 (SourceFileScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.SourceFileScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.SourceFileScope;false;false;1;4;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (dacapo.Benchmark.validate $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;false;false;0;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.symboltable.MethodScope.toString $r4.iterator(),$r5 (MethodScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.symboltable.MethodScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.MethodScope;false;false;2;7;0;0;3;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.IDEAJRenderer.render r1.iterator(),r5 (IDEAJRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;33;81;28;2;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.PapariTextRenderer.render r1.iterator(),r187 (PapariTextRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;false;false;99;281;81;15;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSet.apply $r5.iterator(),r3 (RuleSet.apply) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSet: void apply(java.util.List,net.sourceforge.pmd.RuleContext)>;net.sourceforge.pmd.RuleSet;false;false;37;64;31;3;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.Report.iterator $r1.iterator(),$r2 (Report.iterator) Value: interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.Report: java.util.Iterator iterator()>;net.sourceforge.pmd.Report;false;false;306;738;255;26;20;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.XMLRenderer.render $r20.iterator(),r94 (XMLRenderer.render) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;54;131;49;3;10;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor.markUsages $r11.iterator(),r6 (VariableAccessVisitor.markUsages) Value: interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>());<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;1;1;0;0;2;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.RuleSets.getAllRules $r4.iterator(),r2 (RuleSets.getAllRules) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());<net.sourceforge.pmd.RuleSets: java.util.Set getAllRules()>;net.sourceforge.pmd.RuleSets;false;false;28;65;24;2;9;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.HTMLRenderer.glomIRuleViolations r1.iterator(),r3 (HTMLRenderer.glomIRuleViolations) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.HTMLRenderer: java.lang.StringBuffer glomIRuleViolations(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;44;146;36;5;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.EmacsRenderer.render r1.iterator(),r3 (EmacsRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.EmacsRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.EmacsRenderer;false;false;26;70;24;1;12;3775;
ideal;IteratorHasNext;ForwardQuery: (net.sourceforge.pmd.renderers.IDEAJRenderer.render r1.iterator(),r5 (IDEAJRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;31;85;27;2;12;3775;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: void glomSuppressions(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;576;123;405;171;4;3775;
ideal-ap;IteratorHasNext;r33 @ r33 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;30113;77;30030;83;4;3775;
ideal-ap;IteratorHasNext;r94 @ r94 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;261;70;147;114;4;3775;
ideal-ap;IteratorHasNext;r42 @ r42 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;319;87;230;89;4;3775;
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.MethodScope;true;false;110;71;21;89;4;3775;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;true;12590;111;12590;0;4;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;227;410;87;140;4;3775;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.SummaryHTMLRenderer: java.lang.String renderSummary(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.SummaryHTMLRenderer;false;true;2232;107;2232;0;4;3775;
ideal-ap;IteratorHasNext;$r16 @ $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;true;906;113;906;0;4;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath: java.lang.String clipPath(java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath;false;true;9771;94;9771;0;4;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;156;71;49;107;4;3775;
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.MethodScope;false;true;921;109;921;0;4;3775;
ideal-ap;IteratorHasNext;$r11 @ $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;30094;40;30035;59;3;3775;
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.SourceFileScope;false;true;60091;1;60091;0;4;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: net.sourceforge.pmd.Rule getRuleByName(java.lang.String)>;net.sourceforge.pmd.RuleSet;false;true;30673;54;30673;0;4;3775;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;86;66;19;67;4;3775;
ideal-ap;IteratorHasNext;r5 @ r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;242;65;162;80;4;3775;
ideal-ap;IteratorHasNext;r47 @ r47 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.VBHTMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.VBHTMLRenderer;false;false;215;106;137;78;4;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getSummary()>;net.sourceforge.pmd.Report;false;false;202;59;124;78;4;3775;
ideal-ap;IteratorHasNext;r5 @ r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.OccurrenceFinder: java.lang.Object visit(net.sourceforge.pmd.ast.ASTPrimaryExpression,java.lang.Object)>;net.sourceforge.pmd.symboltable.OccurrenceFinder;false;false;82;60;20;62;4;3775;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;true;12464;156;12464;0;4;3775;
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.LocalScope;true;false;78;71;19;59;4;3775;
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.MethodScope;false;true;60092;71;60092;0;4;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: java.util.Set getAllRules()>;net.sourceforge.pmd.RuleSets;false;false;102;51;31;71;4;3775;
ideal-ap;IteratorHasNext;$r2 @ $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator iterator()>;net.sourceforge.pmd.Report;false;false;270;727;165;105;12;3775;
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: java.lang.StringBuffer glomIRuleViolations(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;232;126;134;98;4;3775;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void printRuleNamesInDebug(boolean,net.sourceforge.pmd.RuleSets)>;net.sourceforge.pmd.PMD;false;true;757;77;757;0;4;3775;
ideal-ap;IteratorHasNext;$r2 @ $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator errors()>;net.sourceforge.pmd.Report;false;false;121;346;55;66;8;3775;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: void addSuppressed(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;174;70;90;84;4;3775;
ideal-ap;IteratorHasNext;r4 @ r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: void apply(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;122;53;41;81;4;3775;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;true;1248;128;1248;0;4;3775;
ideal-ap;IteratorHasNext;$r46 @ $r46 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;false;true;759;424;759;0;5;3775;
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;30282;40;30068;214;3;3775;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: boolean usesDFA()>;net.sourceforge.pmd.RuleSet;false;true;4499;52;4499;0;4;3775;
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.LocalScope;false;true;952;109;952;0;4;3775;
ideal-ap;IteratorHasNext;$r7 @ $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.LocalScope;false;true;60095;71;60095;0;4;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: boolean usesDFA(net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;92;55;33;59;4;3775;
ideal-ap;IteratorHasNext;r1 @ r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();<dacapo.pmd.PmdHarness: java.lang.String commaSeparate(java.util.List)>;dacapo.pmd.PmdHarness;false;false;95;62;26;69;4;3775;
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.CSVRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.CSVRenderer;false;false;204;72;131;73;4;3775;
ideal-ap;IteratorHasNext;r187 @ r187 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;false;false;184;261;112;72;4;3775;
ideal-ap;IteratorHasNext;$r2 @ $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: boolean isEmpty()>;net.sourceforge.pmd.Report;false;false;180;17;109;71;2;3775;
ideal-ap;IteratorHasNext;r6 @ r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseRuleNodeWithExclude(net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)>;net.sourceforge.pmd.RuleSetFactory;false;true;636;56;636;0;4;3775;
ideal-ap;IteratorHasNext;r3 @ r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.EmacsRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.EmacsRenderer;false;false;191;50;120;71;4;3775;
ideal-ap;IteratorHasNext;r8 @ r8 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;71;105;16;55;5;3775;
ideal-ap;IteratorHasNext;r191 @ r191 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;false;true;9979;496;9979;0;4;3775;
ideal-ap;IteratorHasNext;r8 @ r8 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseInternallyDefinedRuleNode(net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)>;net.sourceforge.pmd.RuleSetFactory;false;false;97;125;35;62;7;3775;
ideal-ap;IteratorHasNext;r2 @ r2 = virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getCountSummary()>;net.sourceforge.pmd.Report;false;false;103;89;44;59;4;3775;
ideal-ap;IteratorHasNext;$r6 @ $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;90;71;18;72;4;3775;
ideal-ap;IteratorHasNext;r5 @ r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;199;61;135;64;4;3775;
ideal-ap;IteratorHasNext;$r5 @ $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.SourceFileScope;false;true;727;109;727;0;4;3775;
ideal-ap;IteratorHasNext;r3 @ r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: void apply(java.util.List,net.sourceforge.pmd.RuleContext)>;net.sourceforge.pmd.RuleSet;false;true;754;50;754;0;4;3775;
ideal-ap;IteratorHasNext;$r24 @ $r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;false;true;60084;71;60084;0;4;3775;
ideal-ap;IteratorHasNext;r74 @ r74 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;195;146;127;68;4;3775;
ideal-ap;IteratorHasNext;r38 @ r38 = interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: java.util.List collect(java.lang.String,net.sourceforge.pmd.SourceFileSelector)>;net.sourceforge.pmd.PMD;false;false;30098;52;30042;56;4;3775;
ideal;IO;ForwardQuery: (net.sourceforge.pmd.FileDataSource.getInputStream $r1.<init>($r2),$r1 (FileDataSource.getInputStream) Value: specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2));<net.sourceforge.pmd.FileDataSource: java.io.InputStream getInputStream()>;net.sourceforge.pmd.FileDataSource;false;false;194;121;121;50;11;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r8.<init>(r0),$r8 (Benchmark.unpackZipStream) Value: specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;724;603;635;62;22;3775;
ideal;IO;ForwardQuery: (net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream $r7.<init>(r2),$r7 (ResourceLoader.loadResourceAsStream) Value: specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r2));<net.sourceforge.pmd.util.ResourceLoader: java.io.InputStream loadResourceAsStream(java.lang.String,java.lang.ClassLoader)>;net.sourceforge.pmd.util.ResourceLoader;false;false;32;193;16;15;9;3775;
ideal;IO;ForwardQuery: (net.sourceforge.pmd.PMD.processFiles $r10.<init>($r11),$r10 (PMD.processFiles) Value: specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r11));<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;35;65;15;18;6;3775;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r5.<init>(r0),$r5 (FileDigest.getBinary) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0));<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;true;false;1385;1392;1046;30;84;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipFileResource $r4.<init>($r5),$r4 (Benchmark.unpackZipFileResource) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));<dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>;dacapo.Benchmark;true;false;2532;2178;1229;231;66;3775;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r4.<init>($r5),$r4 (FileDigest.getBinary) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;43;214;36;4;15;3775;
ideal;IO;ForwardQuery: (dacapo.pmd.PmdHarness.collectFilesFromFile $r5.<init>(r1),$r5 (PmdHarness.collectFilesFromFile) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(r1));<dacapo.pmd.PmdHarness: java.lang.String collectFilesFromFile(java.lang.String)>;dacapo.pmd.PmdHarness;false;false;9;24;4;4;5;3775;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);<dacapo.pmd.PmdHarness: java.lang.String collectFilesFromFile(java.lang.String)>;dacapo.pmd.PmdHarness;false;false;543;41;295;248;3;3775;
ideal-ap;IO;$r8 @ specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;224;1013;81;143;15;3775;
ideal-ap;IO;$r1 @ specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);<net.sourceforge.pmd.FileDataSource: java.io.InputStream getInputStream()>;net.sourceforge.pmd.FileDataSource;false;true;60058;1081;60058;0;18;3775;
ideal-ap;IO;$r7 @ specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r2);<net.sourceforge.pmd.util.ResourceLoader: java.io.InputStream loadResourceAsStream(java.lang.String,java.lang.ClassLoader)>;net.sourceforge.pmd.util.ResourceLoader;false;false;92;195;4;88;6;3775;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;true;60065;1030;60065;0;39;3775;
ideal-ap;IO;$r10 @ specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r11);<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;182;1022;86;96;15;3775;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;93;194;21;72;9;3775;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>;dacapo.Benchmark;false;true;6056;4014;6056;0;56;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12.<init>($r14,$r13),$r12 (Benchmark.<init>) Value: specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;149;153;89;37;23;3775;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.<init> r0.<init>(r1),r0 (TeeOutputStream.<init>) Value: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1));<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;114;88;66;45;13;3775;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> $r3.<init>(r1,r2),$r3 (TeePrintStream.<init>) Value: specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;93;73;47;43;11;3775;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> r0.<init>($r3),r0 (TeePrintStream.<init>) Value: specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;248;481;137;108;41;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r12.<init>(r4),$r12 (Benchmark.unpackZipStream) Value: specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;1507;973;538;38;61;3775;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.newLog $r2.<init>($r3),$r2 (TeeOutputStream.newLog) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3));<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;160;81;11;148;15;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r13.<init>(r5,2048),$r13 (Benchmark.unpackZipStream) Value: specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;52;170;44;6;11;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9.<init>($r11,$r10),$r9 (Benchmark.<init>) Value: specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;73;327;33;39;39;3775;
ideal-ap;IO;$r9 @ specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;393;883;141;252;24;3775;
ideal-ap;IO;$r3 @ specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;true;60106;1963;60106;0;38;3775;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;true;60061;1968;60061;0;39;3775;
ideal-ap;IO;$r13 @ specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;148;177;28;120;7;3775;
ideal-ap;IO;$r12 @ specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;141;928;18;123;24;3775;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;156;1794;30;126;25;3775;
ideal-ap;IO;$r12 @ specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;true;60421;3266;60421;0;23;3775;
ideal-ap;IO;$r2 @ specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;true;60057;2136;60057;0;46;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9 = new TeePrintStream,$r9 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;149;60;83;39;11;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12 = new TeePrintStream,$r12 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;67;60;33;32;11;3775;
ideal-ap;IO;$r12 @ $r12 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;true;false;536;1006;269;267;33;3775;
ideal-ap;IO;$r9 @ $r9 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;true;false;237;961;87;150;33;3775;
ideal;IO;ForwardQuery: (dacapo.Benchmark.enableValidationReport $r2 = new PrintWriter,$r2 (Benchmark.enableValidationReport) Value: new java.io.PrintWriter);<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;false;328;352;204;95;36;3775;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;false;576;1821;269;307;32;3775;
