Analysis;Rule;Seed;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;Phase1Time;Phase2Time;VisitedMethod;ReachableMethods;
ideal;EmptyVector;ForwardQuery: (dacapo.parser.ConfigFile.sizeClause $r4 = new Vector,$r4 (ConfigFile.sizeClause) Value: new java.util.Vector);<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;236;238;171;29;14;1725;
ideal;EmptyVector;ForwardQuery: (dacapo.parser.ConfigFile.<init> $r4 = new Vector,$r4 (ConfigFile.<init>) Value: new java.util.Vector);<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;true;false;251;782;120;121;34;1725;
ideal;EmptyVector;ForwardQuery: (dacapo.TestHarness.vectorise $r3 = new Vector,$r3 (TestHarness.vectorise) Value: new java.util.Vector);<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;true;false;157;240;120;29;14;1725;
ideal-ap;EmptyVector;$r4 @ $r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;297;254;157;140;13;1725;
ideal-ap;EmptyVector;$r4 @ $r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;false;false;669;1628;574;95;32;1725;
ideal-ap;EmptyVector;$r3 @ $r3 = new java.util.Vector;<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;false;false;122;560;60;62;13;1725;
ideal;IteratorHasNext;ForwardQuery: (dacapo.Benchmark.postIterationCleanup $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;false;false;36;1;10;0;2;1725;
ideal;IteratorHasNext;ForwardQuery: (dacapo.Benchmark.validate $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;false;false;1;1;0;0;2;1725;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;30304;410;30214;90;4;1725;
ideal-ap;IteratorHasNext;r2 @ r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;30079;71;30044;35;4;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r8.<init>(r0),$r8 (Benchmark.unpackZipStream) Value: specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;672;603;573;57;21;1725;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r5.<init>(r0),$r5 (FileDigest.getBinary) Value: specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0));<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;1638;1057;470;52;64;1725;
ideal;IO;ForwardQuery: (dacapo.FileDigest.getBinary $r4.<init>($r5),$r4 (FileDigest.getBinary) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;109;214;90;15;15;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipFileResource $r4.<init>($r5),$r4 (Benchmark.unpackZipFileResource) Value: specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5));<dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>;dacapo.Benchmark;false;false;2284;1910;1239;98;49;1725;
ideal;IO;ForwardQuery: (dacapo.xalan.XalanHarness$XalanWorker.run $r18.<init>($r19),$r18 (XalanHarness$XalanWorker.run) Value: specialinvoke $r18.<java.io.FileInputStream: void <init>(java.io.File)>($r19));<dacapo.xalan.XalanHarness$XalanWorker: void run()>;dacapo.xalan.XalanHarness$XalanWorker;false;false;570;732;545;13;47;1725;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;false;237;194;134;103;9;1725;
ideal-ap;IO;$r8 @ specialinvoke $r8.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r0);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;183;989;83;100;14;1725;
ideal-ap;IO;$r5 @ specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);<dacapo.FileDigest: byte[] getBinary(java.io.File)>;dacapo.FileDigest;false;true;60070;700;60070;0;26;1725;
ideal-ap;IO;$r4 @ specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);<dacapo.Benchmark: void unpackZipFileResource(java.lang.String,java.io.File)>;dacapo.Benchmark;false;true;60102;3263;60102;0;45;1725;
ideal-ap;IO;$r18 @ specialinvoke $r18.<java.io.FileInputStream: void <init>(java.io.File)>($r19);<dacapo.xalan.XalanHarness$XalanWorker: void run()>;dacapo.xalan.XalanHarness$XalanWorker;false;true;11600;245;11600;0;10;1725;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.newLog $r2.<init>($r3),$r2 (TeeOutputStream.newLog) Value: specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3));<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;145;81;80;40;15;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r12.<init>(r4),$r12 (Benchmark.unpackZipStream) Value: specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;1999;973;1699;32;61;1725;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> r0.<init>($r3),r0 (TeePrintStream.<init>) Value: specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;53;324;29;22;36;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9.<init>($r11,$r10),$r9 (Benchmark.<init>) Value: specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;21;143;9;10;23;1725;
ideal;IO;ForwardQuery: (dacapo.TeePrintStream.<init> $r3.<init>(r1,r2),$r3 (TeePrintStream.<init>) Value: specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2));<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;19;73;8;9;11;1725;
ideal;IO;ForwardQuery: (dacapo.TeeOutputStream.<init> r0.<init>(r1),r0 (TeeOutputStream.<init>) Value: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1));<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;22;88;9;11;13;1725;
ideal;IO;ForwardQuery: (dacapo.xalan.XalanHarness$XalanWorker.run $r6.<init>($r7),$r6 (XalanHarness$XalanWorker.run) Value: specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r7));<dacapo.xalan.XalanHarness$XalanWorker: void run()>;dacapo.xalan.XalanHarness$XalanWorker;false;false;10;115;5;5;4;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12.<init>($r14,$r13),$r12 (Benchmark.<init>) Value: specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13));<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;28;180;14;13;22;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.unpackZipStream $r13.<init>(r5,2048),$r13 (Benchmark.unpackZipStream) Value: specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048));<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;49;170;40;7;11;1725;
ideal-ap;IO;$r2 @ specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);<dacapo.TeeOutputStream: void newLog()>;dacapo.TeeOutputStream;false;false;477;2394;304;173;47;1725;
ideal-ap;IO;$r3 @ specialinvoke $r3.<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>(r1, r2);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;226;2221;105;121;39;1725;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);<dacapo.TeeOutputStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeeOutputStream;false;false;169;2226;75;94;40;1725;
ideal-ap;IO;r0 @ specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r3);<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>;dacapo.TeePrintStream;false;false;99;2052;26;73;26;1725;
ideal-ap;IO;$r12 @ specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;true;6608;557;6608;0;22;1725;
ideal-ap;IO;$r12 @ specialinvoke $r12.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r14, $r13);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;67;1057;16;51;25;1725;
ideal-ap;IO;$r13 @ specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r5, 2048);<dacapo.Benchmark: void unpackZipStream(java.io.BufferedInputStream,java.io.File)>;dacapo.Benchmark;false;false;76;177;26;50;7;1725;
ideal-ap;IO;$r6 @ specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r7);<dacapo.xalan.XalanHarness$XalanWorker: void run()>;dacapo.xalan.XalanHarness$XalanWorker;false;false;43;117;13;30;3;1725;
ideal-ap;IO;$r9 @ specialinvoke $r9.<dacapo.TeePrintStream: void <init>(java.io.OutputStream,java.io.File)>($r11, $r10);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;57;1012;15;42;25;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r12 = new TeePrintStream,$r12 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;137;60;72;34;11;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.<init> $r9 = new TeePrintStream,$r9 (Benchmark.<init>) Value: new dacapo.TeePrintStream);<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;false;54;60;27;26;11;1725;
ideal-ap;IO;$r9 @ $r9 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;true;false;397;1090;248;149;34;1725;
ideal-ap;IO;$r12 @ $r12 = new dacapo.TeePrintStream;<dacapo.Benchmark: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.Benchmark;false;true;1239;1135;1239;0;34;1725;
ideal;IO;ForwardQuery: (dacapo.Benchmark.enableValidationReport $r2 = new PrintWriter,$r2 (Benchmark.enableValidationReport) Value: new java.io.PrintWriter);<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;false;798;894;426;339;79;1725;
ideal-ap;IO;$r2 @ $r2 = new java.io.PrintWriter;<dacapo.Benchmark: void enableValidationReport(java.lang.String)>;dacapo.Benchmark;false;false;444;1896;268;176;33;1725;
