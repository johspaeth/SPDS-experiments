QueryA;QueryB;Boomerang_res;Boomerang_time(ms);Boomerang_timeout;Sridharan_res;Sridharan_time(ms);Sridharan_timeout;Dacong_res;Dacong_time(ms);Dacong_timeout
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));true;-1;true;false;589;false;true;681;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i15 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;273;false;true;7;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c132 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;223;false;true;2;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));true;-1;true;true;243;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z1 = r2.storeTermVector,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storeTermVector = varReplacer1463,r2 (FieldInfos.add));false;6;false;true;-1;true;true;10;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer1990,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2008,r0 (Field.setStoreTermVector));true;299;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isCompressed = varReplacer2041,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isCompressed()> $z0 = r0.isCompressed,r0 (Field.isCompressed));false;242;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = varReplacer3216,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.buffer = $r8,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $r1 = r0.buffer,r0 (FastCharStream.readChar));true;-1;true;false;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void addDocument(org.apache.lucene.document.Document,org.apache.lucene.analysis.Analyzer)> $r9 = r0.infoStream,r0 (IndexWriter.addDocument));false;35;false;true;213;false;true;4;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r31 = r0.tvf,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;30;false;true;212;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.positions = $r3,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> r5 = r4.positions,r4 (DocumentWriter.writePostings));false;90;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r27 = r4.offsets,r4 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.offsets = r20,r4 (DocumentWriter.addPosition));false;8;false;true;-1;true;true;12;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r38 = r0.proxOutput,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;2;false;true;204;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.proxPointer = varReplacer1420,r0 (TermInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.proxPointer = l2,r0 (TermInfo.set));true;121;false;true;206;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r30 = r1.positions,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.positions = r2,r4 (TermVectorsWriter.addTermInternal));true;718;false;true;-1;true;true;30;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.freq = $i9,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.freq = varReplacer2081,r0 (Posting.<init>));false;29;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.storePositions = z0,r0 (TermVectorsWriter$TVField.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> z0 = $r6.storePositions,$r6 (TermVectorsWriter.writeField));true;780;false;true;243;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r30 = r1.positions,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.positions = varReplacer1381,r0 (TermVectorsWriter$TVTerm.<init>));true;766;false;true;-1;true;true;9;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> z0 = $r6.storePositions,$r6 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.storePositions = varReplacer1386,r0 (TermVectorsWriter$TVField.<init>));true;773;false;true;240;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentReader: boolean usesCompoundFile(org.apache.lucene.index.SegmentInfo)> $r3 = r0.name,r0 (SegmentReader.usesCompoundFile));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.name = r1,r0 (SegmentInfo.<init>));true;998;false;true;-1;true;true;9;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i5 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_ntk = varReplacer3157,r0 (StandardTokenizer.jj_consume_token));true;399;false;false;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));false;0;false;true;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r23 = r0.freqOutput,r0 (SegmentMerger.mergeTerms));false;27;false;true;214;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.termIndexInterval = varReplacer2084,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $i1 = r0.termIndexInterval,r0 (DocumentWriter.writePostings));false;8;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r61 = r0.expectedTokenSequences,r0 (ParseException.getMessage));false;5;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $i0 = r1.docFreq,r1 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.docFreq = i0,r0 (TermInfo.set));true;108;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r19 = r0.directory,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i13 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;0;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $r3 = r0.segmentInfos,r0 (IndexWriter.newSegmentName));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));false;0;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean getOmitNorms()> $z0 = r0.omitNorms,r0 (Field.getOmitNorms));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.omitNorms = varReplacer2004,r0 (Field.<init>));true;336;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r2 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));false;44;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.proxPointer = $l2,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l24 = $r24.proxPointer,$r24 (TermInfosWriter.add));false;26;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void ReInitRounds()> r0.jjround = varReplacer3519,r0 (StandardTokenizerTokenManager.ReInitRounds));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjround = $i6,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2017,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStoreOffsetWithTermVector()> $z0 = r0.storeOffsetWithTermVector,r0 (Field.isStoreOffsetWithTermVector));true;519;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer1992,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTermVectorStored()> $z0 = r0.storeTermVector,r0 (Field.isTermVectorStored));true;331;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5 = r0.token,r0 (StandardTokenizer.jj_ntk));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;337;false;false;343;false;true;125;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $i1 = $r7.kind,$r7 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.kind = $i1,r1 (StandardTokenizerTokenManager.jjFillToken));true;707;false;false;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getBeginColumn()> $i0 = r0.tokenStart,r0 (FastCharStream.getBeginColumn));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.tokenStart = varReplacer3521,r0 (FastCharStream.refill));true;-1;true;false;231;false;true;8;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer2023,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r2 = r0.fieldsData,r0 (Field.binaryValue));false;183;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentReader: boolean hasDeletions(org.apache.lucene.index.SegmentInfo)> $r2 = r0.dir,r0 (SegmentReader.hasDeletions));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.dir = r2,r0 (SegmentInfo.<init>));true;791;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)> $r5 = r0.field,r0 (Term.compareTo));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));true;-1;true;true;-1;true;true;-1;true
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r7 = r0.ramDirectory,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.ramDirectory = $r8,r0 (IndexWriter.<init>));true;116;false;true;487;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r40 = r0.directory,r0 (IndexWriter.mergeSegments));false;48;false;true;250;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = r1,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5 = r0.token,r0 (StandardTokenizer.jj_ntk));true;593;false;false;244;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.proxPointer = $l2,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $l2 = r1.proxPointer,r1 (TermInfo.set));false;29;false;true;245;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.proxPointer = $l2,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l3 = $r4.proxPointer,$r4 (TermInfosWriter.add));false;29;false;true;245;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r1 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;212;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r1 = r0.token,r0 (StandardTokenizer.jj_ntk));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;454;false;false;280;false;true;156;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.skipInterval = $i1,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $i5 = r0.skipInterval,r0 (SegmentMerger.appendPostings));false;1;false;true;252;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r10 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;215;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r3 = r0.lastTi,r0 (TermInfosWriter.add));false;31;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r8 = r0.directory,r0 (IndexWriter.optimize));true;102;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: boolean isFieldOpen()> $r1 = r0.currentField,r0 (TermVectorsWriter.isFieldOpen));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> r0.currentField = varReplacer1375,r0 (TermVectorsWriter.closeField));false;48;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r4 = r0.segmentInfos,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;76;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> r0.bufferPosition = $i3,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));true;-1;true;false;231;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $r3 = r2.name,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.name = r1,r0 (FieldInfo.<init>));false;5;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void close()> $r4 = r0.writeLock,r0 (IndexWriter.close));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.writeLock = r3,r0 (IndexWriter.<init>));true;77;false;true;189;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isIndexed()> $z0 = r0.isIndexed,r0 (Field.isIndexed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isIndexed = varReplacer1987,r0 (Field.<init>));true;366;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r7 = r0.tvx,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = varReplacer1387,r0 (TermVectorsWriter.<init>));false;27;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r16 = r0.expectedTokenSequences,r0 (ParseException.getMessage));false;5;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r11 = r0.directory,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;4;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i3 = r0.tokenStart,r0 (FastCharStream.GetImage));true;-1;true;false;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: java.lang.Object doBody()> $r1 = r0.this$0,r0 (IndexWriter$5.doBody));BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.lang.String,java.util.Vector)> r0.this$0 = r1,r0 (IndexWriter$5.<init>));true;12;false;true;209;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeVectors()> $r8 = r0.readers,r0 (SegmentMerger.mergeVectors));false;30;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));true;944;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = $r6,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r15 = r0.other,r0 (TermInfosWriter.add));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void copyFile(org.apache.lucene.index.CompoundFileWriter$FileEntry,org.apache.lucene.store.IndexOutput,byte[])> $r6 = r0.directory,r0 (CompoundFileWriter.copyFile));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.directory = r1,r0 (CompoundFileWriter.<init>));true;48;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i0 = r0.size,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;140;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r8 = r0.tvf,r0 (TermVectorsWriter.writeField));false;54;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isTokenized = varReplacer2025,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTokenized()> $z0 = r0.isTokenized,r0 (Field.isTokenized));false;202;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r1 = r0.fieldsData,r0 (Field.binaryValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer2023,r0 (Field.<init>));false;34;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> r0.pointer = $i17,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void seek(long)> r0.pointer = $i1,r0 (RAMOutputStream.seek));false;0;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.termEnum = r1,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r5 = r2.termEnum,r2 (SegmentMerger.appendPostings));true;-1;true;true;220;false;true;18;false
BackwardQuery: (<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentReader get(org.apache.lucene.index.SegmentInfo)> $r1 = r0.dir,r0 (SegmentReader.get));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.dir = r2,r0 (SegmentInfo.<init>));false;200;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.isIndex = varReplacer1404,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = z0,r0 (TermInfosWriter.initialize));true;29;false;true;310;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_la1 = $r2,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r15 = r0.jj_la1,r0 (StandardTokenizer.generateParseException));true;437;false;false;254;false;true;18;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $l3 = r0.bufferStart,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void seek(long)> r0.bufferStart = l0,r0 (BufferedIndexOutput.seek));true;598;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: int getMaxFieldLength()> $i0 = r0.maxFieldLength,r0 (IndexWriter.getMaxFieldLength));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.maxFieldLength = varReplacer1499,r0 (IndexWriter.<init>));false;1;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $r1 = r0.output,r0 (TermInfosWriter.close));false;0;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r6 = r0.other,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.other = varReplacer1414,r0 (TermInfosWriter.<init>));false;28;false;true;216;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i12 = r0.bufferStart,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferStart = varReplacer2439,r0 (FastCharStream.<init>));true;-1;true;false;269;false;true;182;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r1 = r0.fieldsData,r0 (Field.readerValue));false;194;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $r6 = r0.input_stream,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;217;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r4 = r0.lastTi,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));false;24;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = i0,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $i2 = r0.counter,r0 (SegmentInfos.write));true;248;false;true;215;false;true;2;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $r1 = r0.buffer,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.buffer = $r1,r0 (BufferedIndexOutput.<init>));true;736;false;true;220;false;true;11;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $l0 = r0.version,r0 (SegmentInfos.write));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l5,r0 (SegmentInfos.read));true;245;false;true;214;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i5 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $z0 = r0.isIndex,r0 (TermInfosWriter.close));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = varReplacer1416,r0 (TermInfosWriter.<init>));false;30;false;true;224;false;true;2;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r1 = r0.fieldsData,r0 (Field.readerValue));false;172;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r7 = r0.buffer,r0 (FastCharStream.refill));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z2 = r2.storePositionWithTermVector,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storePositionWithTermVector = varReplacer1466,r2 (FieldInfos.add));false;4;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r8 = r0.output,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));false;28;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $r3.counter = $i1,$r3 (IndexWriter.newSegmentName));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $i2 = r0.counter,r0 (SegmentInfos.write));false;0;false;true;217;false;true;10;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i1 = r0.bufferPosition,r0 (FastCharStream.GetImage));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r26 = r0.queue,r0 (SegmentMerger.mergeTerms));false;27;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r11 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;27;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.docFreq = varReplacer1421,r0 (TermInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.docFreq = i0,r0 (TermInfo.set));true;119;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentField = varReplacer1394,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> r0.currentField = varReplacer1375,r0 (TermVectorsWriter.closeField));false;50;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $r2 = r0.proxOutput,r0 (SegmentMerger.bufferSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;11;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r9 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $l0 = r0.size,r0 (TermInfosWriter.close));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> r0.size = $l7,r0 (TermInfosWriter.add));false;31;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)> $r7 = r0.text,r0 (Term.compareTo));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));true;-1;true;true;-1;true;true;-1;true
BackwardQuery: (<org.apache.lucene.index.SegmentReader: boolean hasSeparateNorms(org.apache.lucene.index.SegmentInfo)> $r3 = r0.dir,r0 (SegmentReader.hasSeparateNorms));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.dir = r2,r0 (SegmentInfo.<init>));true;914;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i2 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3165,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r14 = r0.tvd,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));false;28;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r13 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;116;false;true;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $z0 = r2.isIndexed,r2 (DocumentWriter.writeNorms));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.isIndexed = varReplacer1464,r2 (FieldInfos.add));false;24;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r2 = r0.lastTerm,r0 (TermInfosWriter.writeTerm));false;30;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.directory = r1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> $r14 = r0.directory,r0 (DocumentWriter.addDocument));false;8;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = $r5,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r16 = r4.offsets,r4 (DocumentWriter.addPosition));false;108;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldPositions = $r19,r0 (DocumentWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r19 = r0.fieldPositions,r0 (DocumentWriter.invertDocument));false;1;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r21 = r0.output,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));false;26;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.getFilePointer));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));true;753;false;true;222;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.freqPointer = $l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l0 = $r3.freqPointer,$r3 (TermInfosWriter.add));false;23;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i143,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $i0 = r0.jj_kind,r0 (StandardTokenizer.generateParseException));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_kind = varReplacer2444,r0 (StandardTokenizer.<init>));true;349;false;false;216;false;true;786;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r1 = r0.segmentInfos,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;78;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,java.util.Vector)> $r8 = r0.directory,r0 (IndexWriter.deleteFiles));false;59;false;true;217;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r3 = r0.readers,r0 (SegmentMerger.mergeTermInfos));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;2;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r5 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $i5 = r1.freq,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.freq = i0,r4 (TermVectorsWriter.addTermInternal));true;670;false;true;-1;true;true;7;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int)> $r1 = r0.segmentInfos,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;82;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c66 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.fileName = r2,r0 (CompoundFileWriter.<init>));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r3 = r0.fileName,r0 (CompoundFileWriter.close));true;44;false;true;209;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeDocument()> r0.currentDocPointer = varReplacer1374,r0 (TermVectorsWriter.closeDocument));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: boolean isDocumentOpen()> $l0 = r0.currentDocPointer,r0 (TermVectorsWriter.isDocumentOpen));false;33;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r31 = r0.fieldInfos,r0 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldInfos = $r4,r0 (DocumentWriter.addDocument));false;5;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $r5 = r0.input_stream,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;219;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_gen = varReplacer2443,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $i3 = r0.jj_gen,r0 (StandardTokenizer.generateParseException));true;338;false;false;217;false;true;14;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r18 = r0.lastTerm,r0 (TermInfosWriter.add));false;34;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i1 = r0.size,r0 (PriorityQueue.pop));true;114;false;true;236;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i0 = r0.size,r0 (PriorityQueue.pop));true;123;false;true;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void seek(long)> r0.pointer = $i1,r0 (RAMOutputStream.seek));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i6 = r0.pointer,r0 (RAMOutputStream.flushBuffer));true;556;false;true;217;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isTokenized = varReplacer2051,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTokenized()> $z0 = r0.isTokenized,r0 (Field.isTokenized));false;195;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r27 = r0.queue,r0 (SegmentMerger.mergeTerms));false;27;false;true;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r16 = r0.readers,r0 (SegmentMerger.mergeFields));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;1;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r4.length = $l12,$r4 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)> l0 = $r2.length,$r2 (RAMOutputStream.writeTo));true;-1;true;true;245;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i16 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i2 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));false;0;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r9 = r0.terms,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = varReplacer1388,r0 (TermVectorsWriter.<init>));false;47;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = varReplacer1389,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r4 = r0.fields,r0 (TermVectorsWriter.writeDoc));false;42;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r13 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void copyFile(org.apache.lucene.index.CompoundFileWriter$FileEntry,org.apache.lucene.store.IndexOutput,byte[])> $r5 = r1.file,r1 (CompoundFileWriter.copyFile));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void addFile(java.lang.String)> r2.file = r1,r2 (CompoundFileWriter.addFile));true;692;false;true;215;false;true;3;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2035,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2020,r0 (Field.setStoreTermVector));true;310;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = $r5,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r15 = r4.offsets,r4 (DocumentWriter.addPosition));false;107;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.termIndexInterval = $i1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $i1 = r0.termIndexInterval,r0 (DocumentWriter.writePostings));false;8;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.termText = r1,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.LowerCaseFilter: org.apache.lucene.analysis.Token next()> r1.termText = $r4,r1 (LowerCaseFilter.next));true;192;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_kind = varReplacer2444,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> r0.jj_kind = varReplacer3158,r0 (StandardTokenizer.generateParseException));true;330;false;false;210;false;true;14;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c125 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;225;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r7 = $r6.next,$r6 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));false;1;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.eol = $r4,r0 (ParseException.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r53 = r0.eol,r0 (ParseException.getMessage));false;5;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void maybeMergeSegments()> $i9 = r1.docCount,r1 (IndexWriter.maybeMergeSegments));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.docCount = i0,r0 (SegmentInfo.<init>));false;10;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void addDocument(org.apache.lucene.document.Document,org.apache.lucene.analysis.Analyzer)> $r8 = r0.ramDirectory,r0 (IndexWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.ramDirectory = $r8,r0 (IndexWriter.<init>));false;0;false;true;233;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: java.lang.String termText()> $r1 = r0.termText,r0 (Token.termText));BackwardQuery: (<org.apache.lucene.analysis.LowerCaseFilter: org.apache.lucene.analysis.Token next()> r1.termText = $r4,r1 (LowerCaseFilter.next));true;209;false;true;237;false;true;4;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r8 = r0.termInfosWriter,r0 (SegmentMerger.mergeTermInfo));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.termInfosWriter = $r16,r0 (SegmentMerger.mergeTerms));false;11;false;true;232;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentDocPointer = varReplacer1395,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: boolean isDocumentOpen()> $l0 = r0.currentDocPointer,r0 (TermVectorsWriter.isDocumentOpen));false;53;false;true;232;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> i6 = r4.freq,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.freq = varReplacer2081,r0 (Posting.<init>));false;27;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r28 = r4.positions,r4 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.positions = r18,r4 (DocumentWriter.addPosition));false;8;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.offsets = r3,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.offsets = varReplacer1382,r0 (TermVectorsWriter$TVTerm.<init>));true;20;false;true;229;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = $r3,r0 (SegmentMergeInfo.next));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r7 = $r5.term,$r5 (SegmentMerger.mergeTermInfo));true;-1;true;true;233;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $i12 = r1.freq,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.freq = i0,r4 (TermVectorsWriter.addTermInternal));true;679;false;true;-1;true;true;11;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l21 = $r22.freqPointer,$r22 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.freqPointer = varReplacer1419,r0 (TermInfo.<init>));false;28;false;true;242;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void close()> $r3 = r0.directory,r0 (IndexWriter.close));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));true;81;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_kind = i0,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $i0 = r0.jj_kind,r0 (StandardTokenizer.generateParseException));true;397;false;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> $r1 = r0.termEnum,r0 (SegmentMergeInfo.next));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.termEnum = r1,r0 (SegmentMergeInfo.<init>));true;-1;true;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferLength = $i6,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferLength = varReplacer2440,r0 (FastCharStream.<init>));true;-1;true;false;218;false;true;182;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r5 = r1.text,r1 (TermInfosWriter.writeTerm));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));true;-1;true;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.positions = r2,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.positions = varReplacer1381,r0 (TermVectorsWriter$TVTerm.<init>));true;19;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_kind = i0,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_kind = varReplacer2444,r0 (StandardTokenizer.<init>));true;336;false;false;218;false;true;203;false
BackwardQuery: (<org.apache.lucene.store.RAMFile: void <init>()> r0.lastModified = $l0,r0 (RAMFile.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r3.lastModified = $l10,$r3 (RAMOutputStream.flushBuffer));true;-1;true;true;237;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = $r6,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $r4 = r0.other,r0 (TermInfosWriter.close));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r46 = r55.name,r55 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.name = r1,r0 (SegmentInfo.<init>));false;0;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.buffer = r9,r0 (FastCharStream.refill));true;-1;true;false;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: boolean equals(java.lang.Object)> $r3 = r2.field,r2 (Term.equals));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i3 = r0.size,r0 (PriorityQueue.pop));true;116;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMDirectory: void <init>()> r0.files = $r1,r0 (RAMDirectory.<init>));BackwardQuery: (<org.apache.lucene.store.RAMDirectory: java.lang.String[] list()> $r4 = r0.files,r0 (RAMDirectory.list));false;923;false;true;843;false;true;14;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void writeDeleteableFiles(java.util.Vector)> $r5 = r0.directory,r0 (IndexWriter.writeDeleteableFiles));false;60;false;true;215;false;true;2;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r11 = $r10.buffers,$r10 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMFile: void <init>()> r0.buffers = $r1,r0 (RAMFile.<init>));true;-1;true;true;234;false;true;48;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r6 = r0.fields,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = varReplacer1389,r0 (TermVectorsWriter.<init>));false;32;false;true;208;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>()> r0.eol = $r1,r0 (ParseException.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r14 = r0.eol,r0 (ParseException.getMessage));false;4;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r9 = r0.output,r0 (TermInfosWriter.writeTerm));false;0;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_gen = $i3,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_gen = varReplacer2443,r0 (StandardTokenizer.<init>));true;342;false;false;218;false;true;214;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: org.apache.lucene.store.Directory access$000(org.apache.lucene.index.IndexWriter)> $r1 = r0.directory,r0 (IndexWriter.access$000));true;86;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $r5 = r0.skipBuffer,r0 (SegmentMerger.bufferSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.skipBuffer = $r5,r0 (SegmentMerger.<init>));false;11;false;true;330;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)> r0.input = r1,r0 (TokenFilter.<init>));BackwardQuery: (<org.apache.lucene.analysis.LowerCaseFilter: org.apache.lucene.analysis.Token next()> $r2 = r0.input,r0 (LowerCaseFilter.next));true;283;false;true;219;false;false;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r14 = r0.segment,r0 (SegmentMerger.mergeFields));false;17;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r2 = r0.token,r0 (StandardTokenizer.jj_consume_token));true;648;false;false;216;false;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.Token: java.lang.String type()> $r1 = r0.type,r0 (Token.type));BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.type = varReplacer3152,r0 (Token.<init>));true;194;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r9 = r0.token,r0 (StandardTokenizer.jj_consume_token));true;332;false;false;221;false;true;3;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void seek(long)> r0.pointer = $i1,r0 (RAMOutputStream.seek));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.pointer = varReplacer1472,r0 (RAMOutputStream.<init>));true;754;false;true;265;false;true;4;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeVectors()> $r6 = r0.segment,r0 (SegmentMerger.mergeVectors));false;31;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r3 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;123;false;true;236;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2050,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2006,r0 (Field.setStoreTermVector));true;374;false;true;265;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r3 = r0.input_stream,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;237;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openDocument()> $r1 = r0.tvd,r0 (TermVectorsWriter.openDocument));false;26;false;true;234;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.getFilePointer));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));true;597;false;true;238;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void close()> $r3 = r0.postings,r0 (SegmentMergeInfo.close));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: org.apache.lucene.index.TermPositions getPositions()> r0.postings = $r4,r0 (SegmentMergeInfo.getPositions));true;-1;true;true;221;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $r2 = r0.output,r0 (TermInfosWriter.close));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $r6 = r0.heap,r0 (PriorityQueue.pop));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;166;false;true;214;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isIndexed()> $z0 = r0.isIndexed,r0 (Field.isIndexed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isIndexed = varReplacer2054,r0 (Field.<init>));true;411;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void maybeMergeSegments()> $i12 = r1.docCount,r1 (IndexWriter.maybeMergeSegments));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.docCount = i0,r0 (SegmentInfo.<init>));false;9;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c31 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $r1 = r0.freqOutput,r0 (SegmentMerger.bufferSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));false;11;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeDocument()> r0.currentDocPointer = varReplacer1374,r0 (TermVectorsWriter.closeDocument));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openDocument()> r0.currentDocPointer = $l0,r0 (TermVectorsWriter.openDocument));false;34;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i0 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));true;-1;true;false;225;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(int,boolean,boolean)> r0.currentField = $r1,r0 (TermVectorsWriter.openField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> r0.currentField = varReplacer1375,r0 (TermVectorsWriter.closeField));false;23;false;true;207;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.counter = varReplacer1503,r0 (SegmentInfos.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $i2 = r0.counter,r0 (SegmentInfos.write));true;215;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferStart = $l11,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $l3 = r0.bufferStart,r0 (BufferedIndexOutput.flush));false;202;false;true;425;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i13 = r0.indexInterval,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.indexInterval = varReplacer1415,r0 (TermInfosWriter.<init>));false;25;false;true;421;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z2 = r2.storePositionWithTermVector,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storePositionWithTermVector = z2,r0 (FieldInfo.<init>));false;4;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i13 = r0.tokenStart,r0 (FastCharStream.refill));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = $r5,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.offsets = r20,r4 (DocumentWriter.addPosition));false;108;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i13 = r0.tokenStart,r0 (FastCharStream.refill));true;-1;true;false;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.term = $r3,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r7 = $r5.term,$r5 (SegmentMerger.mergeTermInfo));true;936;false;true;216;false;true;6;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r17 = r0.tvf,r0 (TermVectorsWriter.writeField));false;56;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = $r22,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r9 = r0.fields,r0 (TermVectorsWriter.writeDoc));false;0;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeDocument()> $r1 = r0.fields,r0 (TermVectorsWriter.closeDocument));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = varReplacer1389,r0 (TermVectorsWriter.<init>));false;32;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: java.lang.Object doBody()> $r14 = r0.this$0,r0 (IndexWriter$5.doBody));BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.lang.String,java.util.Vector)> r0.this$0 = r1,r0 (IndexWriter$5.<init>));false;0;false;true;234;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: long writeSkip()> $r1 = r0.freqOutput,r0 (SegmentMerger.writeSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;11;false;true;245;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.reader = r2,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: int[] getDocMap()> $r5 = r0.reader,r0 (SegmentMergeInfo.getDocMap));true;-1;true;true;215;false;true;6;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r11 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;0;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2035,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2007,r0 (Field.setStoreTermVector));true;315;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,boolean)> r0.this$0 = r1,r0 (IndexWriter$1.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: java.lang.Object doBody()> $r5 = r0.this$0,r0 (IndexWriter$1.doBody));true;13;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2039,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2021,r0 (Field.setStoreTermVector));true;315;false;true;341;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferStart = varReplacer1474,r0 (BufferedIndexOutput.<init>));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $l2 = r0.bufferStart,r0 (BufferedIndexOutput.getFilePointer));true;733;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r1 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer1994,r0 (Field.<init>));false;73;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r33 = r0.proxOutput,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;1;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.termText = r1,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r15 = r1.termText,r1 (TermVectorsWriter.writeField));true;616;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r5 = r0.tvd,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));false;34;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: boolean equals(java.lang.Object)> $r3 = r2.field,r2 (Term.equals));BackwardQuery: (<org.apache.lucene.index.Term: void set(java.lang.String,java.lang.String)> r0.field = r1,r0 (Term.set));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = i248,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = i248,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferStart = varReplacer1474,r0 (BufferedIndexOutput.<init>));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void seek(long)> r0.bufferStart = l0,r0 (BufferedIndexOutput.seek));true;361;false;true;214;false;true;12;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i5 = r0.size,r0 (PriorityQueue.downHeap));true;137;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $r3 = r0.jjrounds,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjrounds = $r3,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;218;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.IndexWriter: org.apache.lucene.search.Similarity getSimilarity()> $r1 = r0.similarity,r0 (IndexWriter.getSimilarity));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.similarity = $r6,r0 (IndexWriter.<init>));false;1;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getBeginColumn()> $i1 = r0.bufferStart,r0 (FastCharStream.getBeginColumn));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferStart = $i14,r0 (FastCharStream.refill));true;-1;true;false;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i3 = r0.tokenStart,r0 (FastCharStream.GetImage));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.entries = $r4,r0 (CompoundFileWriter.<init>));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r2 = r0.entries,r0 (CompoundFileWriter.close));true;44;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r3 = r0.currentField,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> r0.currentField = varReplacer1375,r0 (TermVectorsWriter.closeField));false;42;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.termText = r1,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $r7 = r6.termText,r6 (StopFilter.next));true;194;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastIndexPointer = varReplacer1418,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l9 = r0.lastIndexPointer,r0 (TermInfosWriter.add));false;35;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c115 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;205;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r4 = r0.readers,r0 (SegmentMerger.mergeFields));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));true;35;false;true;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r13 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.omitNorms = z4,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $z1 = r1.omitNorms,r1 (SegmentMerger.mergeNorms));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i12 = r0.jjmatchedPos,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedPos = i247,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r16 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;47;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = varReplacer1389,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r9 = r0.fields,r0 (TermVectorsWriter.writeDoc));false;42;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer1990,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2009,r0 (Field.setStoreTermVector));true;268;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l4,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.version = $l0,r0 (SegmentInfos.<init>));true;221;false;true;224;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_gen = $i3,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $i3 = r0.jj_gen,r0 (StandardTokenizer.generateParseException));true;412;false;false;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r9 = r0.fieldLengths,r0 (DocumentWriter.invertDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldLengths = $r17,r0 (DocumentWriter.addDocument));false;15;false;true;201;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isBinary()> $z0 = r0.isBinary,r0 (Field.isBinary));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isBinary = varReplacer1999,r0 (Field.<init>));false;36;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void maybeMergeSegments()> $i1 = r0.maxMergeDocs,r0 (IndexWriter.maybeMergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.maxMergeDocs = varReplacer1500,r0 (IndexWriter.<init>));false;7;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.freq = $i9,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> i0 = r4.freq,r4 (DocumentWriter.writePostings));false;28;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> $r7.other = r0,$r7 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.other = varReplacer1414,r0 (TermInfosWriter.<init>));false;1;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addAllDocVectors(org.apache.lucene.index.TermFreqVector[])> $i3 = r22.number,r22 (TermVectorsWriter.addAllDocVectors));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.number = i0,r0 (FieldInfo.<init>));false;27;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i2 = r0.bufferPosition,r0 (FastCharStream.readChar));true;-1;true;false;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i13 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void seek(long)> r0.pointer = $i1,r0 (RAMOutputStream.seek));true;561;false;true;240;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.base = i0,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> i1 = r2.base,r2 (SegmentMerger.appendPostings));true;988;false;true;221;false;true;5;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i21,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorOffsetInfo: int getEndOffset()> $i0 = r0.endOffset,r0 (TermVectorOffsetInfo.getEndOffset));BackwardQuery: (<org.apache.lucene.index.TermVectorOffsetInfo: void <init>(int,int)> r0.endOffset = i1,r0 (TermVectorOffsetInfo.<init>));true;-1;true;true;729;false;true;167;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r16 = r4.offsets,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = varReplacer2080,r0 (Posting.<init>));false;28;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r6,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r7 = r0.token,r0 (StandardTokenizer.generateParseException));true;366;false;false;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));false;0;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r18 = r0.fieldInfos,r0 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldInfos = $r4,r0 (DocumentWriter.addDocument));false;0;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r5 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;27;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c98 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;219;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r39 = r0.tokenImage,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.tokenImage = r3,r0 (ParseException.<init>));false;1;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r3 = r0.file,r0 (RAMOutputStream.flushBuffer));true;688;false;true;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i26 = r2.docFreq,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.docFreq = $i0,r0 (TermInfo.set));false;95;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r6 = r0.currentField,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentField = varReplacer1394,r0 (TermVectorsWriter.<init>));false;43;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> r0.version = $l1,r0 (SegmentInfos.write));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.version = $l0,r0 (SegmentInfos.<init>));true;219;false;true;212;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(java.lang.String)> $z1 = r2.storePositionWithTermVector,r2 (TermVectorsWriter.openField));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storePositionWithTermVector = varReplacer1466,r2 (FieldInfos.add));false;26;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferStart = $i14,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getEndColumn()> $i1 = r0.bufferStart,r0 (FastCharStream.getEndColumn));true;-1;true;false;203;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.skipBuffer = $r5,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> $r1 = r0.skipBuffer,r0 (SegmentMerger.resetSkip));false;26;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r45 = r0.expectedTokenSequences,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer1992,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2013,r0 (Field.setStoreTermVector));true;286;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeVectors()> $r9 = r0.readers,r0 (SegmentMerger.mergeVectors));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;14;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2035,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2010,r0 (Field.setStoreTermVector));true;312;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r29 = r0.eol,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.eol = $r4,r0 (ParseException.<init>));false;1;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r2 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r29 = r0.fieldInfos,r0 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldInfos = $r4,r0 (DocumentWriter.addDocument));false;5;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r6 = r0.directory,r0 (SegmentMerger.createCompoundFile));false;17;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: int[] getDocMap()> $r2 = r0.reader,r0 (SegmentMergeInfo.getDocMap));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.reader = r2,r0 (SegmentMergeInfo.<init>));true;960;false;true;214;false;true;32;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r15 = r4.offsets,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = varReplacer2080,r0 (Posting.<init>));false;26;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c7 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;227;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.isIndexed = z0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $z5 = r2.isIndexed,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> $r7.other = r0,$r7 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r15 = r0.other,r0 (TermInfosWriter.add));false;1;false;true;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isTokenized = varReplacer2033,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTokenized()> $z0 = r0.isTokenized,r0 (Field.isTokenized));false;199;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.startOffset = i0,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.Token: int startOffset()> $i0 = r0.startOffset,r0 (Token.startOffset));true;197;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: long writeSkip()> $r2 = r0.freqOutput,r0 (SegmentMerger.writeSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;10;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i4 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;214;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r22 = r0.readers,r0 (SegmentMerger.mergeTerms));false;16;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2015,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStorePositionWithTermVector()> $z0 = r0.storePositionWithTermVector,r0 (Field.isStorePositionWithTermVector));true;401;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c118 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r5 = r0.tvd,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));false;33;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.directory = r1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r32 = r0.directory,r0 (DocumentWriter.writePostings));false;13;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i0 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i1,r0 (StandardTokenizer.jj_ntk));true;379;false;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.mergeFactor = varReplacer1496,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $i2 = r0.mergeFactor,r0 (IndexWriter.flushRamSegments));true;79;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r6 = r0.fieldsStream,r0 (FieldsWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));false;10;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r17 = r0.fieldInfos,r0 (SegmentMerger.mergeTerms));false;18;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r11,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r7 = r0.token,r0 (StandardTokenizer.generateParseException));true;392;false;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $r3.counter = $i1,$r3 (IndexWriter.newSegmentName));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = i0,r0 (SegmentInfos.read));false;0;false;true;213;false;true;10;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getBeginColumn()> $i0 = r0.tokenStart,r0 (FastCharStream.getBeginColumn));true;-1;true;false;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = $r22,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r4 = r0.fields,r0 (TermVectorsWriter.writeDoc));false;0;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.freqPointer = l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l20 = r2.freqPointer,r2 (TermInfosWriter.add));true;118;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferStart = varReplacer2439,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferStart = $i14,r0 (FastCharStream.refill));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $r6 = r0.fieldInfos,r0 (SegmentMerger.mergeNorms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));false;13;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r7 = r0.token,r0 (StandardTokenizer.generateParseException));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;343;false;false;216;false;true;807;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.base = i0,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $i1 = r4.base,r4 (SegmentMergeQueue.lessThan));true;-1;true;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeVectors()> $r7 = r0.directory,r0 (SegmentMerger.mergeVectors));false;29;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.curChar = $c18,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $c17 = r0.curChar,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;279;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i6 = r7.kind,r7 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.kind = $i1,r1 (StandardTokenizerTokenManager.jjFillToken));true;802;false;false;240;false;true;9;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $r3 = r0.skipBuffer,r0 (SegmentMerger.bufferSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.skipBuffer = $r5,r0 (SegmentMerger.<init>));false;12;false;true;235;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r28 = r4.positions,r4 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.positions = $r3,r0 (Posting.<init>));false;8;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isStored = varReplacer2027,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStored()> $z0 = r0.isStored,r0 (Field.isStored));false;177;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r9 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;224;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void ReInitRounds()> r0.jjround = varReplacer3519,r0 (StandardTokenizerTokenManager.ReInitRounds));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i1 = r0.jjround,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i72,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void set(java.lang.String,java.lang.String)> r0.field = r1,r0 (Term.set));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));false;25;false;true;215;false;true;6;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $r7 = r0.fieldInfos,r0 (SegmentMerger.mergeNorms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));false;14;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(int,boolean,boolean)> r0.currentField = $r1,r0 (TermVectorsWriter.openField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentField = varReplacer1394,r0 (TermVectorsWriter.<init>));false;22;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.endColumn = $i6,r1 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i2 = r7.endColumn,r7 (StandardTokenizer.next));true;729;false;false;221;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $i4 = r0.mergeFactor,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.mergeFactor = varReplacer1496,r0 (IndexWriter.<init>));true;80;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.positions = $r3,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.positions = r18,r4 (DocumentWriter.addPosition));false;106;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> r0.lastSkipProxPointer = $l1,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> r0.lastSkipProxPointer = l2,r0 (SegmentMerger.bufferSkip));false;11;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z0 = r0.isIndex,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = varReplacer1416,r0 (TermInfosWriter.<init>));false;24;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)> $r4 = r1.field,r1 (Term.compareTo));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));true;-1;true;true;-1;true;true;-1;true
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r2 = r0.freqOutput,r0 (SegmentMerger.mergeTermInfo));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;10;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferStart = $l4,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void seek(long)> r0.bufferStart = l0,r0 (BufferedIndexOutput.seek));true;582;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r10 = r1.field,r1 (TermInfosWriter.writeTerm));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void addInternal(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $r6 = r0.byName,r0 (FieldInfos.addInternal));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void <init>()> r0.byName = $r2,r0 (FieldInfos.<init>));true;159;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r12 = r0.output,r0 (TermInfosWriter.writeTerm));false;0;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i14 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void seek(long)> r0.pointer = $i1,r0 (RAMOutputStream.seek));true;575;false;true;204;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean getOmitNorms()> $z0 = r0.omitNorms,r0 (Field.getOmitNorms));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.omitNorms = varReplacer2026,r0 (Field.<init>));true;353;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r71 = r0.expectedTokenSequences,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r1 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer2023,r0 (Field.<init>));false;73;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r13 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;27;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $l2 = r1.proxPointer,r1 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.proxPointer = l2,r0 (TermInfo.set));true;104;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r30 = r0.freqOutput,r0 (SegmentMerger.mergeTerms));false;26;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isStored()> $z0 = r0.isStored,r0 (Field.isStored));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isStored = varReplacer2037,r0 (Field.<init>));false;29;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.dir = r2,r0 (SegmentInfo.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r9 = $r7.dir,$r7 (IndexWriter.optimize));true;765;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $i1 = $r20.skipInterval,$r20 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.skipInterval = varReplacer1401,r0 (TermInfosWriter.<init>));false;1;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $r5 = r4.term,r4 (SegmentMergeQueue.lessThan));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = varReplacer1426,r0 (SegmentMergeInfo.next));true;-1;true;true;226;false;true;913;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r8 = r0.proxOutput,r0 (SegmentMerger.appendPostings));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;12;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r2 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer2023,r0 (Field.<init>));false;74;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r9 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;27;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeOffsetWithTermVector = z3,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(java.lang.String)> $z0 = r2.storeOffsetWithTermVector,r2 (TermVectorsWriter.openField));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.Lock$With: java.lang.Object run()> $l0 = r0.lockWaitTimeout,r0 (Lock$With.run));BackwardQuery: (<org.apache.lucene.store.Lock$With: void <init>(org.apache.lucene.store.Lock,long)> r0.lockWaitTimeout = l0,r0 (Lock$With.<init>));true;33;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> r0.lastTerm = r1,r0 (TermInfosWriter.writeTerm));false;29;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r6,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;347;false;false;223;false;true;203;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r1 = r0.token,r0 (StandardTokenizer.jj_ntk));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = r1,r0 (StandardTokenizer.jj_consume_token));true;371;false;false;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i1 = r7.kind,r7 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.kind = $i1,r1 (StandardTokenizerTokenManager.jjFillToken));true;681;false;false;218;false;true;9;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastIndexPointer = varReplacer1403,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l9 = r0.lastIndexPointer,r0 (TermInfosWriter.add));false;39;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i1 = r0.bufferPosition,r0 (FastCharStream.GetImage));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r21 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;49;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.docFreq = varReplacer1421,r0 (TermInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.docFreq = $i0,r0 (TermInfo.set));false;102;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i16 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.pointer = varReplacer1472,r0 (RAMOutputStream.<init>));false;0;false;true;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r11 = r0.fieldOffsets,r0 (DocumentWriter.invertDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldOffsets = $r21,r0 (DocumentWriter.addDocument));false;15;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(int,boolean,boolean)> r0.currentField = $r1,r0 (TermVectorsWriter.openField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r7 = r0.currentField,r0 (TermVectorsWriter.writeField));false;22;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r47 = r0.expectedTokenSequences,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.offsets = r20,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = varReplacer2080,r0 (Posting.<init>));false;27;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2012,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer1992,r0 (Field.<init>));true;269;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $r9 = r2.name,r2 (DocumentWriter.writeNorms));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.name = r1,r0 (FieldInfo.<init>));false;24;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.offsets = varReplacer1382,r0 (TermVectorsWriter$TVTerm.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r19 = r1.offsets,r1 (TermVectorsWriter.writeField));true;662;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r6 = r0.segmentInfos,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;80;false;true;207;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r4 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;25;false;true;208;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.fieldInfos = r3,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r11 = r0.fieldInfos,r0 (TermInfosWriter.writeTerm));false;40;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r29 = r0.tvd,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));false;28;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $i2 = r55.docCount,r55 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.docCount = i0,r0 (SegmentInfo.<init>));false;0;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $i2 = $r11.beginColumn,$r11 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.beginColumn = $i4,r1 (StandardTokenizerTokenManager.jjFillToken));false;1;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r22 = r1.offsets,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.offsets = varReplacer1382,r0 (TermVectorsWriter$TVTerm.<init>));true;636;false;true;-1;true;true;7;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i5 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));false;0;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = $r8,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r7 = r0.tvx,r0 (TermVectorsWriter.close));false;0;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: java.lang.Object doBody()> $r3 = r0.this$0,r0 (IndexWriter$4.doBody));BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.util.Vector)> r0.this$0 = r1,r0 (IndexWriter$4.<init>));true;13;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> r0.currentField = varReplacer1375,r0 (TermVectorsWriter.closeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r7 = r0.currentField,r0 (TermVectorsWriter.writeField));false;43;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r7 = $r6.output,$r6 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));false;23;false;true;216;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.term = $r3,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r12 = r27.term,r27 (SegmentMerger.mergeTermInfos));true;953;false;true;222;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r5 = $r4.term,$r4 (DocumentWriter.quickSort));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));true;-1;true;true;-1;true;true;10;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r13 = r0.tvx,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = $r8,r0 (TermVectorsWriter.<init>));false;27;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.offsets = r3,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r19 = r1.offsets,r1 (TermVectorsWriter.writeField));true;639;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r8 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;44;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r2 = $r1.next,$r1 (StandardTokenizer.jj_ntk));true;-1;true;false;216;false;true;466;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> r0.pointer = $i17,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.pointer = varReplacer1472,r0 (RAMOutputStream.<init>));false;0;false;true;221;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r17 = r0.tvf,r0 (TermVectorsWriter.writeField));false;0;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r9 = $r8.term,$r8 (DocumentWriter.quickSort));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void reset()> $r2.length = varReplacer2600,$r2 (RAMOutputStream.reset));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)> l0 = $r2.length,$r2 (RAMOutputStream.writeTo));false;13;false;true;246;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r4 = r0.positions,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.positions = r18,r4 (DocumentWriter.addPosition));false;114;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i0 = r0.bufferLength,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferLength = i0,r0 (FastCharStream.refill));true;-1;true;false;246;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = varReplacer1405,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $r4 = r0.other,r0 (TermInfosWriter.close));false;43;false;true;247;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_kind = varReplacer2444,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $i8 = r0.jj_kind,r0 (StandardTokenizer.generateParseException));true;356;false;false;238;false;true;14;false
BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r2 = r0.fieldsData,r0 (Field.readerValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer1994,r0 (Field.<init>));false;60;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $z0 = r1.isIndexed,r1 (SegmentMerger.mergeNorms));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.isIndexed = varReplacer1464,r2 (FieldInfos.add));false;15;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $r1 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;243;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = $i8,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $i2 = r0.counter,r0 (SegmentInfos.write));true;285;false;true;248;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.term = $r3,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $r5 = r4.term,r4 (SegmentMergeQueue.lessThan));true;-1;true;true;248;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldOffsets = $r21,r0 (DocumentWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r21 = r0.fieldOffsets,r0 (DocumentWriter.invertDocument));false;1;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.omitNorms = z4,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $z9 = r2.omitNorms,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $r5 = r0.fieldInfos,r0 (DocumentWriter.writeNorms));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldInfos = $r4,r0 (DocumentWriter.addDocument));false;27;false;true;254;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i142 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $z7 = r2.storePositionWithTermVector,r2 (FieldInfos.add));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storePositionWithTermVector = z2,r0 (FieldInfo.<init>));true;-1;true;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isIndexed()> $z0 = r0.isIndexed,r0 (Field.isIndexed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isIndexed = varReplacer2034,r0 (Field.<init>));true;411;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMFile: void <init>()> r0.buffers = $r1,r0 (RAMFile.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r8 = $r7.buffers,$r7 (RAMOutputStream.flushBuffer));true;-1;true;true;238;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r3 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r13 = r0.lastTi,r0 (TermInfosWriter.add));false;36;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2006,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStoreOffsetWithTermVector()> $z0 = r0.storeOffsetWithTermVector,r0 (Field.isStoreOffsetWithTermVector));true;467;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getEndColumn()> $i0 = r0.bufferPosition,r0 (FastCharStream.getEndColumn));true;-1;true;false;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i2 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));true;865;false;true;229;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.proxPointer = varReplacer1420,r0 (TermInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l23 = r2.proxPointer,r2 (TermInfosWriter.add));true;148;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $z0 = r0.isIndex,r0 (TermInfosWriter.close));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = z0,r0 (TermInfosWriter.initialize));false;29;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c56 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;214;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.freq = varReplacer1383,r0 (TermVectorsWriter$TVTerm.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $i6 = r1.freq,r1 (TermVectorsWriter.writeField));true;613;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: boolean isFieldOpen()> $r1 = r0.currentField,r0 (TermVectorsWriter.isFieldOpen));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(int,boolean,boolean)> r0.currentField = $r1,r0 (TermVectorsWriter.openField));false;48;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3168,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l6 = r0.size,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.size = varReplacer1417,r0 (TermInfosWriter.<init>));false;29;false;true;219;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r10 = r0.directory,r0 (SegmentMerger.mergeTerms));false;17;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.dir = r2,r0 (SegmentInfo.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r8 = $r6.dir,$r6 (IndexWriter.flushRamSegments));true;784;false;true;-1;true;true;4;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $r2 = r0.proxOutput,r0 (SegmentMerger.bufferSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.proxOutput = $r15,r0 (SegmentMerger.mergeTerms));false;11;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r25 = r0.tvf,r0 (TermVectorsWriter.close));false;0;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer1996,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2019,r0 (Field.setStoreTermVector));true;267;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: boolean equals(java.lang.Object)> $r6 = r0.text,r0 (Term.equals));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,java.util.Vector)> $r11 = r0.infoStream,r0 (IndexWriter.deleteFiles));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));false;28;false;true;217;false;true;2;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r14 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;116;false;true;217;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i21,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> r0.bufferPosition = $i3,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i1 = r0.bufferPosition,r0 (FastCharStream.GetImage));true;-1;true;false;240;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c106 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r11 = r0.input,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.input = r1,r0 (FastCharStream.<init>));true;-1;true;false;219;false;true;180;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.indexInterval = i0,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.indexInterval = varReplacer1415,r0 (TermInfosWriter.<init>));true;22;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));false;418;false;true;230;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r39 = r0.freqOutput,r0 (SegmentMerger.mergeTerms));false;17;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardAnalyzer: void <init>(java.lang.String[])> r0.stopSet = $r2,r0 (StandardAnalyzer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardAnalyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)> $r7 = r0.stopSet,r0 (StandardAnalyzer.tokenStream));false;79;false;true;225;false;true;6;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r14 = r0.lastTerm,r0 (TermInfosWriter.add));false;37;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r48 = r0.expectedTokenSequences,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: int size()> $i0 = r0.size,r0 (PriorityQueue.size));true;102;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = varReplacer1388,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r4 = r0.terms,r0 (TermVectorsWriter.writeField));false;53;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.termBuffer = $r5,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r5 = r0.termBuffer,r0 (DocumentWriter.addPosition));false;32;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i5 = r0.bufferLength,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferLength = varReplacer2440,r0 (FastCharStream.<init>));true;-1;true;false;220;false;true;180;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.docFreq = varReplacer1421,r0 (TermInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i19 = r2.docFreq,r2 (TermInfosWriter.add));true;146;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));true;657;false;true;224;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r18 = r0.readers,r0 (SegmentMerger.mergeTermInfos));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;2;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c139 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;227;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.term = $r3,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = $r3,r0 (SegmentMergeInfo.next));true;-1;true;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r7 = r0.directory,r0 (SegmentMerger.mergeFields));true;37;false;true;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i4 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));false;429;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r3.tvfPointer = $l3,$r3 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.tvfPointer = varReplacer1385,r0 (TermVectorsWriter$TVField.<init>));true;680;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i13 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));false;0;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.Lock$With: void <init>(org.apache.lucene.store.Lock,long)> r0.lock = r1,r0 (Lock$With.<init>));BackwardQuery: (<org.apache.lucene.store.Lock$With: java.lang.Object run()> $r4 = r0.lock,r0 (Lock$With.run));true;36;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i22 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfosWriter = varReplacer1469,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r37 = r0.termInfosWriter,r0 (SegmentMerger.mergeTerms));false;18;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $i0 = r0.termIndexInterval,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termIndexInterval = varReplacer1471,r0 (SegmentMerger.<init>));false;0;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isIndexed()> $z0 = r0.isIndexed,r0 (Field.isIndexed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isIndexed = varReplacer2053,r0 (Field.<init>));true;433;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> $r2 = r0.freqOutput,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));false;10;false;true;205;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $i2 = r0.jj_gen,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_gen = varReplacer2443,r0 (StandardTokenizer.<init>));true;332;false;false;218;false;true;217;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r18 = r0.segment,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));false;0;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_expentries = $r3,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r8 = r0.jj_expentries,r0 (StandardTokenizer.generateParseException));true;342;false;false;218;false;true;14;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeTermVector = z1,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storeTermVector = varReplacer1463,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i5 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;0;false;true;214;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.omitNorms = z4,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $z1 = r2.omitNorms,r2 (DocumentWriter.writeNorms));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.omitNorms = varReplacer1462,r2 (FieldInfos.add));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $z3 = r4.omitNorms,r4 (SegmentMerger.createCompoundFile));true;-1;true;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i1 = r0.bufferPosition,r0 (FastCharStream.GetImage));true;-1;true;false;230;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.indexInterval = varReplacer1409,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> $i1 = r0.indexInterval,r0 (TermInfosWriter.initialize));false;11;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i13 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;0;false;true;214;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r3 = r0.currentField,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentField = varReplacer1394,r0 (TermVectorsWriter.<init>));false;42;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> r0.bufferPosition = $i3,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));true;-1;true;false;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.isIndex = varReplacer1404,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z1 = r0.isIndex,r0 (TermInfosWriter.add));false;36;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferStart = $l11,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void seek(long)> r0.bufferStart = l0,r0 (BufferedIndexOutput.seek));false;13;false;false;219;false;false;3;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = $r3,r0 (SegmentMergeInfo.next));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r12 = r27.term,r27 (SegmentMerger.mergeTermInfos));true;-1;true;true;225;false;true;9;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $l1 = r0.currentDocPointer,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentDocPointer = varReplacer1395,r0 (TermVectorsWriter.<init>));false;33;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.SegmentInfos access$100(org.apache.lucene.index.IndexWriter)> $r1 = r0.segmentInfos,r0 (IndexWriter.access$100));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;81;false;true;217;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.name = varReplacer1989,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String name()> $r1 = r0.name,r0 (Field.name));true;486;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i2 = r0.size,r0 (PriorityQueue.pop));true;126;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $i0 = r1.docFreq,r1 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.docFreq = $i0,r0 (TermInfo.set));false;85;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r13 = r0.buffer,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));true;-1;true;false;219;false;true;180;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> r74 = $r2.next,$r2 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));true;-1;true;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i72,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $i0 = $r3.counter,$r3 (IndexWriter.newSegmentName));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = i0,r0 (SegmentInfos.read));false;0;false;true;217;false;true;10;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r23 = r0.tvd,r0 (TermVectorsWriter.close));false;60;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $l1 = r1.freqPointer,r1 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.freqPointer = $l1,r0 (TermInfo.set));false;86;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i15 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;0;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.termText = r1,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.Token: java.lang.String termText()> $r1 = r0.termText,r0 (Token.termText));true;194;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = $r8,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r3 = r0.tvx,r0 (TermVectorsWriter.writeDoc));false;0;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> r74 = r74.next,r74 (ParseException.getMessage));true;-1;true;true;-1;true;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c103 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> $r7.other = r0,$r7 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $r4 = r0.other,r0 (TermInfosWriter.close));false;1;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2013,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTermVectorStored()> $z0 = r0.storeTermVector,r0 (Field.isTermVectorStored));true;404;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferStart = $l4,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $l2 = r0.bufferStart,r0 (BufferedIndexOutput.getFilePointer));true;778;false;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c86 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;219;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isStorePositionWithTermVector()> $z0 = r0.storePositionWithTermVector,r0 (Field.isStorePositionWithTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2021,r0 (Field.setStoreTermVector));true;391;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r6 = r0.termInfo,r0 (SegmentMerger.mergeTermInfo));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfo = $r4,r0 (SegmentMerger.<init>));false;10;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: int size()> $i0 = r0.size,r0 (PriorityQueue.size));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;130;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer1992,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2010,r0 (Field.setStoreTermVector));true;273;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r24 = r0.fieldInfos,r0 (SegmentMerger.createCompoundFile));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));false;2;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l4 = r2.proxPointer,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.proxPointer = l2,r0 (TermInfo.set));true;109;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $i4 = r74.kind,r74 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.kind = $i1,r1 (StandardTokenizerTokenManager.jjFillToken));true;-1;true;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r24 = r0.lastTi,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));false;27;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r14 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));false;47;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: int endOffset()> $i0 = r0.endOffset,r0 (Token.endOffset));BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.endOffset = i1,r0 (Token.<init>));true;199;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i4 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;14;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i1 = r0.jjmatchedPos,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedPos = i247,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r20 = r0.eol,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>()> r0.eol = $r1,r0 (ParseException.<init>));false;1;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3168,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i2 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));true;-1;true;false;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c136 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i2 = r0.size,r0 (PriorityQueue.pop));true;115;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferStart = $l11,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferStart = varReplacer1474,r0 (BufferedIndexOutput.<init>));false;13;false;true;219;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastIndexPointer = varReplacer1418,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> r0.lastIndexPointer = $l11,r0 (TermInfosWriter.add));false;36;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.closeDir = z1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void close()> $z0 = r0.closeDir,r0 (IndexWriter.close));true;80;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r25 = r1.offsets,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.offsets = varReplacer1382,r0 (TermVectorsWriter$TVTerm.<init>));true;635;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2015,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2039,r0 (Field.<init>));true;311;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.name = $r4,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String name()> $r1 = r0.name,r0 (Field.name));true;484;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void <init>()> r0.byNumber = $r1,r0 (FieldInfos.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void addInternal(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $r5 = r0.byNumber,r0 (FieldInfos.addInternal));true;163;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r25 = r1.offsets,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.offsets = r3,r4 (TermVectorsWriter.addTermInternal));true;659;false;true;-1;true;true;7;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z0 = r2.isIndexed,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.isIndexed = varReplacer1464,r2 (FieldInfos.add));false;4;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));true;-1;true;false;229;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $z1 = r0.useCompoundFile,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.useCompoundFile = varReplacer1497,r0 (IndexWriter.<init>));true;77;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)> $r2 = r0.byNumber,r0 (FieldInfos.fieldInfo));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void <init>()> r0.byNumber = $r1,r0 (FieldInfos.<init>));false;42;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = $i8,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.counter = varReplacer1503,r0 (SegmentInfos.<init>));true;215;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));BackwardQuery: (<org.apache.lucene.index.Term: java.lang.String field()> $r1 = r0.field,r0 (Term.field));false;159;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.directory = r1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r13 = r0.directory,r0 (DocumentWriter.writePostings));false;8;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i5 = r0.jjround,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjround = $i6,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r14 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;46;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r2 = r0.readers,r0 (SegmentMerger.mergeTermInfos));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;2;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i6 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.pointer = varReplacer1472,r0 (RAMOutputStream.<init>));true;698;false;true;229;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.tokenStart = varReplacer3521,r0 (FastCharStream.refill));true;-1;true;false;231;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $r18 = r1.name,r1 (SegmentMerger.mergeNorms));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.name = r1,r0 (FieldInfo.<init>));false;1;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r11 = r0.tvf,r0 (TermVectorsWriter.close));false;38;false;true;232;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> z1 = $r7.storeOffsets,$r7 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.storeOffsets = z1,r0 (TermVectorsWriter$TVField.<init>));true;739;false;true;275;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.other = varReplacer1414,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r9 = r0.other,r0 (TermInfosWriter.add));false;40;false;true;243;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.ramDirectory = $r8,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r11 = r0.ramDirectory,r0 (IndexWriter.flushRamSegments));true;80;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2020,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTermVectorStored()> $z0 = r0.storeTermVector,r0 (Field.isTermVectorStored));true;401;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z1 = r0.isIndex,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = varReplacer1416,r0 (TermInfosWriter.<init>));false;25;false;true;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void setInfoStream(java.io.PrintStream)> r0.infoStream = r1,r0 (DocumentWriter.setInfoStream));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r25 = r0.infoStream,r0 (DocumentWriter.invertDocument));false;24;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.StopFilter: void <init>(org.apache.lucene.analysis.TokenStream,java.util.Set,boolean)> r0.ignoreCase = z0,r0 (StopFilter.<init>));BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $z0 = r0.ignoreCase,r0 (StopFilter.next));true;32;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.skipOffset = $i3,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $i3 = r1.skipOffset,r1 (TermInfo.set));false;25;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i23,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.size = varReplacer1417,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $l0 = r0.size,r0 (TermInfosWriter.close));false;36;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2011,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStorePositionWithTermVector()> $z0 = r0.storePositionWithTermVector,r0 (Field.isStorePositionWithTermVector));true;382;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.image = $r10,r1 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $r4 = r7.image,r7 (StandardTokenizer.next));true;711;false;false;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r3 = r0.proxOutput,r0 (SegmentMerger.mergeTermInfo));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;10;false;true;200;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l7,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.version = $l0,r0 (SegmentInfos.<init>));true;201;false;true;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.isIndex = varReplacer1404,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z2 = r0.isIndex,r0 (TermInfosWriter.add));false;38;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));true;104;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r24 = r4.term,r4 (DocumentWriter.writePostings));false;86;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i1 = r0.tokenStart,r0 (FastCharStream.refill));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentDocPointer = varReplacer1395,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeDocument()> r0.currentDocPointer = varReplacer1374,r0 (TermVectorsWriter.closeDocument));false;43;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r2 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;117;false;true;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openDocument()> $r1 = r0.tvd,r0 (TermVectorsWriter.openDocument));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));false;16;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3164,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;221;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void <init>()> r0.byNumber = $r1,r0 (FieldInfos.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: int size()> $r1 = r0.byNumber,r0 (FieldInfos.size));false;110;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i27 = r0.skipInterval,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.skipInterval = varReplacer1413,r0 (TermInfosWriter.<init>));false;28;false;true;217;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i2 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;11;false;true;214;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r32 = r0.freqOutput,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));false;1;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r20 = r0.output,r0 (TermInfosWriter.add));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r9 = r0.heap,r0 (PriorityQueue.downHeap));true;116;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r2 = r0.fieldsData,r0 (Field.readerValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;56;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r18 = r0.lastTerm,r0 (TermInfosWriter.add));false;30;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: float getBoost()> $f0 = r0.boost,r0 (Field.getBoost));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.boost = varReplacer2003,r0 (Field.<init>));false;60;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r3 = $r2.next,$r2 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));true;-1;true;false;238;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = $i8,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $i0 = $r3.counter,$r3 (IndexWriter.newSegmentName));false;118;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: org.apache.lucene.index.Posting[] sortPostingTable()> $r3 = r0.postingTable,r0 (DocumentWriter.sortPostingTable));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.postingTable = $r4,r0 (DocumentWriter.<init>));false;12;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r15 = r0.directory,r0 (IndexWriter.mergeSegments));false;35;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedPos = varReplacer3169,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedPos = i247,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.curChar = $c18,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $c23 = r0.curChar,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.termIndexInterval = varReplacer1490,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: int getTermIndexInterval()> $i0 = r0.termIndexInterval,r0 (IndexWriter.getTermIndexInterval));false;33;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isStored()> $z0 = r0.isStored,r0 (Field.isStored));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isStored = varReplacer2002,r0 (Field.<init>));false;27;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r2 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;72;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> $i2 = r0.skipInterval,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.skipInterval = varReplacer1413,r0 (TermInfosWriter.<init>));false;0;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer1990,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2006,r0 (Field.setStoreTermVector));true;264;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.offsets = r3,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r22 = r1.offsets,r1 (TermVectorsWriter.writeField));true;643;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.document.Document: java.util.Enumeration fields()> $r1 = r0.fields,r0 (Document.fields));BackwardQuery: (<org.apache.lucene.document.Document: void <init>()> r0.fields = $r1,r0 (Document.<init>));true;29;false;true;222;false;true;3;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r11 = r1.termText,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.termText = r1,r4 (TermVectorsWriter.addTermInternal));true;577;false;true;-1;true;true;7;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r19 = $r16.term,$r16 (DocumentWriter.quickSort));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));true;-1;true;true;-1;true;true;10;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r13 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));false;47;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r2 = r0.fieldsData,r0 (Field.binaryValue));false;169;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.util.Vector readDeleteableFiles()> $r5 = r0.directory,r0 (IndexWriter.readDeleteableFiles));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;23;false;true;210;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.proxPointer = varReplacer1420,r0 (TermInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l3 = $r4.proxPointer,$r4 (TermInfosWriter.add));false;97;false;true;212;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = varReplacer1405,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r15 = r0.other,r0 (TermInfosWriter.add));false;36;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i7 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;0;false;true;214;false;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.buffer = r9,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $r1 = r0.buffer,r0 (FastCharStream.readChar));false;0;false;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.maxFieldLength = $i0,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $i6 = r0.maxFieldLength,r0 (DocumentWriter.invertDocument));false;8;false;true;286;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.tvfPointer = varReplacer1385,r0 (TermVectorsWriter$TVField.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> l6 = r2.tvfPointer,r2 (TermVectorsWriter.writeDoc));true;840;false;true;-1;true;true;14;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = $r8,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r15 = r0.tvx,r0 (TermVectorsWriter.close));false;0;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.positions = r18,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> r5 = r4.positions,r4 (DocumentWriter.writePostings));false;26;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r11,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r1 = r0.token,r0 (StandardTokenizer.jj_ntk));true;389;false;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfosWriter = varReplacer1469,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r28 = r0.termInfosWriter,r0 (SegmentMerger.mergeTerms));false;27;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isCompressed = varReplacer1993,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isCompressed()> $z0 = r0.isCompressed,r0 (Field.isCompressed));false;128;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.offsets = r3,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r27 = r1.offsets,r1 (TermVectorsWriter.writeField));true;624;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r7 = $r6.next,$r6 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));false;0;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r11 = r0.tvd,r0 (TermVectorsWriter.writeDoc));false;0;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> $i0 = r0.size,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));true;103;false;true;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.kind = $i1,r1 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $i1 = $r6.kind,$r6 (StandardTokenizer.jj_ntk));true;31;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r3.tvfPointer = $l3,$r3 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> l6 = r2.tvfPointer,r2 (TermVectorsWriter.writeDoc));true;809;false;true;-1;true;true;53;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = i248,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void addInternal(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $r4 = r0.byNumber,r0 (FieldInfos.addInternal));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void <init>()> r0.byNumber = $r1,r0 (FieldInfos.<init>));true;155;false;true;206;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r20 = r0.fieldBoosts,r0 (DocumentWriter.invertDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldBoosts = $r23,r0 (DocumentWriter.addDocument));false;15;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r8 = r0.entries,r0 (CompoundFileWriter.close));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.entries = $r4,r0 (CompoundFileWriter.<init>));true;48;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2011,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer1996,r0 (Field.<init>));true;474;false;true;419;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $z0 = r0.specialConstructor,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.specialConstructor = varReplacer3162,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.number = i0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addAllDocVectors(org.apache.lucene.index.TermFreqVector[])> $i8 = r19.number,r19 (TermVectorsWriter.addAllDocVectors));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r4 = r0.terms,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = $r23,r0 (TermVectorsWriter.<init>));false;44;false;true;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r4 = r0.segment,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));false;1;false;true;195;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.proxPointer = $l2,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l4 = r2.proxPointer,r2 (TermInfosWriter.add));false;24;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer1992,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2007,r0 (Field.setStoreTermVector));true;272;false;true;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l4,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> r0.version = $l1,r0 (SegmentInfos.write));true;252;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r3 = r0.tvx,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = varReplacer1387,r0 (TermVectorsWriter.<init>));false;33;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: int[] getDocMap()> $r3 = r0.reader,r0 (SegmentMergeInfo.getDocMap));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.reader = r2,r0 (SegmentMergeInfo.<init>));true;983;false;true;220;false;true;33;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r7 = r0.fieldInfos,r0 (FieldsWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldInfos = r3,r0 (FieldsWriter.<init>));false;9;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i5 = r0.size,r0 (PriorityQueue.downHeap));true;116;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isIndexed()> $z0 = r0.isIndexed,r0 (Field.isIndexed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isIndexed = varReplacer2044,r0 (Field.<init>));true;405;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> $r2 = r0.heap,r0 (PriorityQueue.upHeap));true;102;false;true;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.freq = i0,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $i6 = r1.freq,r1 (TermVectorsWriter.writeField));true;665;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r22 = r0.lastTi,r0 (TermInfosWriter.add));false;30;false;true;191;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r2 = r0.segmentInfos,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;73;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $r2 = r0.buffer,r0 (FastCharStream.GetImage));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i138,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));false;0;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i7 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));false;412;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r24 = r0.tvf,r0 (TermVectorsWriter.writeField));false;0;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r5 = r0.segmentInfos,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;78;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.size = varReplacer1402,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l6 = r0.size,r0 (TermInfosWriter.add));false;39;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r13 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;47;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r4 = r0.segmentInfos,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;77;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.number = i0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(java.lang.String)> $i0 = r2.number,r2 (TermVectorsWriter.openField));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r11 = $r10.next,$r10 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));false;1;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r16 = r0.tvf,r0 (TermVectorsWriter.writeField));false;58;false;true;207;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: long writeSkip()> $r2 = r0.freqOutput,r0 (SegmentMerger.writeSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));false;9;false;true;194;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;15;false;true;290;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i5 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i0,r0 (StandardTokenizer.jj_ntk));true;378;false;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,boolean)> r0.this$0 = r1,r0 (IndexWriter$1.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: java.lang.Object doBody()> $r1 = r0.this$0,r0 (IndexWriter$1.doBody));true;13;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r6,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5 = r0.token,r0 (StandardTokenizer.jj_ntk));true;384;false;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.isIndex = varReplacer1404,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $z0 = r0.isIndex,r0 (TermInfosWriter.close));false;40;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r4.length = $l12,$r4 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $l7 = $r2.length,$r2 (RAMOutputStream.flushBuffer));true;-1;true;true;261;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.positions = r2,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r31 = r1.positions,r1 (TermVectorsWriter.writeField));true;626;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r4 = r0.buffer,r0 (FastCharStream.refill));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r7 = r0.entries,r0 (CompoundFileWriter.close));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.entries = $r4,r0 (CompoundFileWriter.<init>));true;46;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.size = varReplacer1417,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l15 = r0.size,r0 (TermInfosWriter.add));false;31;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r4 = $r2.text,$r2 (TermInfosWriter.writeTerm));false;181;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> $r3 = r0.proxOutput,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.proxOutput = $r15,r0 (SegmentMerger.mergeTerms));false;11;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r6 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;122;false;true;334;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> r0.lastSkipFreqPointer = $l0,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> r0.lastSkipFreqPointer = l1,r0 (SegmentMerger.bufferSkip));false;24;false;true;279;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void close()> $r2 = r0.writeLock,r0 (IndexWriter.close));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.writeLock = r3,r0 (IndexWriter.<init>));true;99;false;true;279;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void deleteSegments(java.util.Vector)> $r8 = r0.directory,r0 (IndexWriter.deleteSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;34;false;true;243;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2039,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2019,r0 (Field.setStoreTermVector));true;341;false;true;240;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer1990,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2018,r0 (Field.setStoreTermVector));true;296;false;true;238;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.offsets = r3,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r18 = r1.offsets,r1 (TermVectorsWriter.writeField));true;691;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isBinary()> $z0 = r0.isBinary,r0 (Field.isBinary));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isBinary = varReplacer1991,r0 (Field.<init>));false;39;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i72,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r6 = r0.infoStream,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));false;0;false;true;244;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: int hashCode()> $r2 = r0.text,r0 (Term.hashCode));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));true;-1;true;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>()> r0.eol = $r1,r0 (ParseException.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r53 = r0.eol,r0 (ParseException.getMessage));false;4;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i72,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;346;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r12 = r0.segmentInfos,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));false;3;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r15 = r0.segmentInfos,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;80;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2012,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2035,r0 (Field.<init>));true;317;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeOffsetWithTermVector = z3,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $z8 = r2.storeOffsetWithTermVector,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i8 = r0.bufferLength,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferLength = varReplacer2440,r0 (FastCharStream.<init>));true;-1;true;false;220;false;true;181;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isCompressed = varReplacer2031,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isCompressed()> $z0 = r0.isCompressed,r0 (Field.isCompressed));false;174;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r5 = r0.tvf,r0 (TermVectorsWriter.close));false;38;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> $i1 = r0.bufferPosition,r0 (FastCharStream.backup));true;-1;true;false;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r13 = r0.tvx,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = varReplacer1387,r0 (TermVectorsWriter.<init>));false;27;false;true;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = varReplacer1405,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r6 = r0.other,r0 (TermInfosWriter.add));false;39;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r2 = r0.fieldsStream,r0 (FieldsWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));false;7;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r11 = $r10.next,$r10 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));true;-1;true;false;242;false;true;464;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i23,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i5 = r0.size,r0 (PriorityQueue.downHeap));true;136;false;true;236;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.buffer = r9,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $r2 = r0.buffer,r0 (FastCharStream.GetImage));false;0;false;false;244;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: float getBoost()> $f0 = r0.boost,r0 (Field.getBoost));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.boost = varReplacer2049,r0 (Field.<init>));false;64;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r5 = r0.lastTi,r0 (TermInfosWriter.add));false;37;false;true;239;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i2 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));false;11;false;true;243;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferStart = $l4,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $l10 = r0.bufferStart,r0 (BufferedIndexOutput.writeBytes));false;510;false;true;244;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: java.lang.Object doBody()> $r6 = r0.this$0,r0 (IndexWriter$4.doBody));BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.util.Vector)> r0.this$0 = r1,r0 (IndexWriter$4.<init>));true;13;false;true;247;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i4 = r0.jj_gen,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_gen = varReplacer2443,r0 (StandardTokenizer.<init>));true;327;false;false;218;false;true;10;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i138,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;264;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r7 = r0.freqOutput,r0 (SegmentMerger.appendPostings));false;62;false;true;271;false;true;1;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $r2 = r0.heap,r0 (PriorityQueue.pop));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;133;false;true;252;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r2 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer1994,r0 (Field.<init>));false;85;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.getFilePointer));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));false;309;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void addFile(java.lang.String)> r2.file = r1,r2 (CompoundFileWriter.addFile));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r12 = r20.file,r20 (CompoundFileWriter.close));true;711;false;true;312;false;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r6 = r0.currentToken,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.currentToken = r1,r0 (ParseException.<init>));false;2;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: java.lang.Object doBody()> $r13 = r0.val$filesToDelete,r0 (IndexWriter$5.doBody));BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.lang.String,java.util.Vector)> r0.val$filesToDelete = r4,r0 (IndexWriter$5.<init>));false;0;false;true;235;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> r0.lastTerm = r1,r0 (TermInfosWriter.writeTerm));false;36;false;true;243;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $r2 = r0.buffer,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.buffer = $r1,r0 (BufferedIndexOutput.<init>));false;15;false;true;239;false;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c13 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;244;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i143,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;248;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $r1 = r0.freqOutput,r0 (SegmentMerger.bufferSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;12;false;true;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r27 = r4.offsets,r4 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = varReplacer2080,r0 (Posting.<init>));false;8;false;true;-1;true;true;7;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r16 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;29;false;true;240;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Document: void <init>()> r0.fields = $r1,r0 (Document.<init>));BackwardQuery: (<org.apache.lucene.document.Document: void add(org.apache.lucene.document.Field)> $r2 = r0.fields,r0 (Document.add));true;21;false;true;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i2 = r0.bufferLength,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferLength = varReplacer2440,r0 (FastCharStream.<init>));true;-1;true;false;243;false;true;185;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r26 = r0.segment,r0 (SegmentMerger.createCompoundFile));false;20;false;true;245;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i0,r0 (StandardTokenizer.jj_ntk));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_ntk = varReplacer2442,r0 (StandardTokenizer.<init>));true;344;false;false;235;false;true;116;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r18 = r1.offsets,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.offsets = varReplacer1382,r0 (TermVectorsWriter$TVTerm.<init>));true;674;false;true;-1;true;true;7;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = varReplacer2080,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r21 = r4.offsets,r4 (DocumentWriter.addPosition));false;113;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r9 = r0.freqOutput,r0 (SegmentMerger.appendPostings));false;30;false;true;252;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r13 = r0.fieldsStream,r0 (FieldsWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));false;10;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> $i1 = r0.indexInterval,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.indexInterval = varReplacer1415,r0 (TermInfosWriter.<init>));false;0;false;true;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i5 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i1,r0 (StandardTokenizer.jj_ntk));true;352;false;false;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> r26 = $r8.term,$r8 (SegmentMerger.mergeTermInfos));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = varReplacer1426,r0 (SegmentMergeInfo.next));true;-1;true;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $l0 = r0.version,r0 (SegmentInfos.write));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.version = $l0,r0 (SegmentInfos.<init>));true;231;false;true;219;false;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r4 = r0.token_source,r0 (StandardTokenizer.jj_ntk));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token_source = $r4,r0 (StandardTokenizer.<init>));true;329;false;false;218;false;true;114;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i16 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void seek(long)> r0.pointer = $i1,r0 (RAMOutputStream.seek));false;0;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $l10 = r0.bufferStart,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void seek(long)> r0.bufferStart = l0,r0 (BufferedIndexOutput.seek));false;13;false;false;219;false;false;3;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r4 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;119;false;true;216;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Document: void <init>()> r0.boost = varReplacer2056,r0 (Document.<init>));BackwardQuery: (<org.apache.lucene.document.Document: float getBoost()> $f0 = r0.boost,r0 (Document.getBoost));false;15;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r12 = r0.fieldInfos,r0 (SegmentMerger.createCompoundFile));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));false;2;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r13 = r0.lastTi,r0 (TermInfosWriter.add));false;32;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> r0.bufferPosition = $i3,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> $i0 = r0.bufferPosition,r0 (FastCharStream.BeginToken));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.analyzer = r2,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r33 = r0.analyzer,r0 (DocumentWriter.invertDocument));false;23;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i12 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;11;false;true;215;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: long writeSkip()> $r1 = r0.freqOutput,r0 (SegmentMerger.writeSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));false;10;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Tokenizer: void close()> $r1 = r0.input,r0 (Tokenizer.close));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(java.io.Reader)> r0.input = r1,r0 (StandardTokenizer.<init>));true;343;false;false;251;false;false;39;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r35 = r0.queue,r0 (SegmentMerger.mergeTerms));false;41;false;true;314;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.curChar = $c18,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;247;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r2 = r0.buffer,r0 (FastCharStream.refill));true;-1;true;false;237;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i19 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z1 = r2.storeTermVector,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeTermVector = z1,r0 (FieldInfo.<init>));false;4;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5 = r0.token,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;356;false;false;218;false;true;201;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r10 = $r9.output,$r9 (TermInfosWriter.add));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r21 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;17;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: java.lang.Object doBody()> $r9 = r0.val$mergedName,r0 (IndexWriter$5.doBody));BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.lang.String,java.util.Vector)> r0.val$mergedName = r3,r0 (IndexWriter$5.<init>));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r8 = r0.proxOutput,r0 (SegmentMerger.appendPostings));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.proxOutput = $r15,r0 (SegmentMerger.mergeTerms));false;12;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void seek(long)> r0.pointer = $i1,r0 (RAMOutputStream.seek));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i11 = r0.pointer,r0 (RAMOutputStream.flushBuffer));true;568;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = varReplacer1405,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r9 = r0.other,r0 (TermInfosWriter.add));false;40;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.termText = r1,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r12 = r1.termText,r1 (TermVectorsWriter.writeField));true;652;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r10 = $r7.term,$r7 (DocumentWriter.quickSort));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));true;-1;true;true;-1;true;true;9;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void addDocument(org.apache.lucene.document.Document,org.apache.lucene.analysis.Analyzer)> $r13 = r0.segmentInfos,r0 (IndexWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));false;0;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r10 = r0.fieldsStream,r0 (FieldsWriter.addDocument));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c9 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;219;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r22 = r0.lastTi,r0 (TermInfosWriter.add));false;36;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z3 = r2.storeOffsetWithTermVector,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeOffsetWithTermVector = z3,r0 (FieldInfo.<init>));false;4;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r3 = r0.currentField,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(int,boolean,boolean)> r0.currentField = $r1,r0 (TermVectorsWriter.openField));false;43;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> $r3 = r0.terms,r0 (TermVectorsWriter.closeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = varReplacer1388,r0 (TermVectorsWriter.<init>));false;45;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i71 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i21,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;235;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i2 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3164,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r14 = r0.lastTerm,r0 (TermInfosWriter.add));false;32;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = $r3,r0 (SegmentMergeInfo.next));BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $r6 = r3.term,r3 (SegmentMergeQueue.lessThan));true;-1;true;true;227;false;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.positionIncrement = varReplacer3153,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.Token: int getPositionIncrement()> $i0 = r0.positionIncrement,r0 (Token.getPositionIncrement));true;198;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void set(java.lang.String,java.lang.String)> r0.text = r2,r0 (Term.set));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));false;25;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r8 = r0.segment,r0 (SegmentMerger.mergeFields));true;39;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $i1 = $r7.beginLine,$r7 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.beginLine = $i3,r1 (StandardTokenizerTokenManager.jjFillToken));false;1;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r21 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;1;false;true;235;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $i1 = $r3.docCount,$r3 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.docCount = i0,r0 (SegmentInfo.<init>));true;754;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getBeginColumn()> $i1 = r0.bufferStart,r0 (FastCharStream.getBeginColumn));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferStart = varReplacer2439,r0 (FastCharStream.<init>));true;-1;true;false;224;false;true;504;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = $r8,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r2 = r0.tvx,r0 (TermVectorsWriter.close));false;0;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));true;712;false;true;226;false;true;4;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r14 = r0.tvd,r0 (TermVectorsWriter.close));false;37;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c8 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;219;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> r0.merged = varReplacer1327,r0 (CompoundFileWriter.close));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void addFile(java.lang.String)> $z0 = r0.merged,r0 (CompoundFileWriter.addFile));true;48;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i0 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_ntk = varReplacer2442,r0 (StandardTokenizer.<init>));true;337;false;false;214;false;true;10;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentField = varReplacer1394,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r7 = r0.currentField,r0 (TermVectorsWriter.writeField));false;52;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: int size()> $i0 = r0.size,r0 (PriorityQueue.size));true;114;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.directory = r1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r19 = r0.directory,r0 (DocumentWriter.writePostings));false;8;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.isIndexed = z0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $z0 = r1.isIndexed,r1 (SegmentMerger.mergeNorms));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.isIndexed = z0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z0 = r2.isIndexed,r2 (FieldInfos.write));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r3 = r1.text,r1 (TermInfosWriter.writeTerm));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));true;-1;true;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i7 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;0;false;true;265;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.termText = r1,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.LowerCaseFilter: org.apache.lucene.analysis.Token next()> $r3 = r1.termText,r1 (LowerCaseFilter.next));true;200;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));false;0;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r15 = r0.directory,r0 (SegmentMerger.mergeFields));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));false;0;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.directory = r1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $r12 = r0.directory,r0 (DocumentWriter.writeNorms));false;31;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2009,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStoreOffsetWithTermVector()> $z0 = r0.storeOffsetWithTermVector,r0 (Field.isStoreOffsetWithTermVector));true;469;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i2 = r0.bufferPosition,r0 (FastCharStream.readChar));true;-1;true;false;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getEndColumn()> $i0 = r0.bufferPosition,r0 (FastCharStream.getEndColumn));true;-1;true;false;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r31 = r0.tvf,r0 (TermVectorsWriter.close));false;37;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2035,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2013,r0 (Field.setStoreTermVector));true;306;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2035,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTermVectorStored()> $z0 = r0.storeTermVector,r0 (Field.isTermVectorStored));true;344;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l0 = $r3.freqPointer,$r3 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.freqPointer = varReplacer1419,r0 (TermInfo.<init>));false;23;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer1996,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2021,r0 (Field.setStoreTermVector));true;265;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.indexInterval = i0,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i13 = r0.indexInterval,r0 (TermInfosWriter.add));false;42;false;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer1990,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStoreOffsetWithTermVector()> $z0 = r0.storeOffsetWithTermVector,r0 (Field.isStoreOffsetWithTermVector));true;403;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void maybeMergeSegments()> $r2 = r0.segmentInfos,r0 (IndexWriter.maybeMergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));false;8;false;true;233;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r23 = r0.tvd,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));false;28;false;true;235;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void setInfoStream(java.io.PrintStream)> r0.infoStream = r1,r0 (DocumentWriter.setInfoStream));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r23 = r0.infoStream,r0 (DocumentWriter.invertDocument));false;25;false;true;239;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> i0 = r0.size,r0 (PriorityQueue.upHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;137;false;true;242;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r17 = r0.fieldsStream,r0 (FieldsWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));false;11;false;true;240;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.proxOutput = $r15,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r3 = r0.proxOutput,r0 (SegmentMerger.mergeTermInfo));false;0;false;true;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r6 = $r5.buffers,$r5 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMFile: void <init>()> r0.buffers = $r1,r0 (RAMFile.<init>));true;-1;true;true;279;false;true;43;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferStart = varReplacer1474,r0 (BufferedIndexOutput.<init>));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $l10 = r0.bufferStart,r0 (BufferedIndexOutput.writeBytes));false;282;false;true;239;false;true;6;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.directory = r1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> $r8 = r0.directory,r0 (DocumentWriter.addDocument));true;18;false;true;237;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r6 = r0.output,r0 (TermInfosWriter.writeTerm));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));false;25;false;true;239;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i137 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;249;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r37 = r0.segmentInfos,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));false;3;false;true;234;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $r8 = r0.fieldLengths,r0 (DocumentWriter.writeNorms));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldLengths = $r17,r0 (DocumentWriter.addDocument));false;23;false;true;236;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = i248,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;239;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.other = varReplacer1414,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r15 = r0.other,r0 (TermInfosWriter.add));false;34;false;true;238;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.base = i0,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $i2 = r3.base,r3 (SegmentMergeQueue.lessThan));true;-1;true;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i19 = r2.docFreq,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.docFreq = $i0,r0 (TermInfo.set));false;96;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r24 = r0.tvf,r0 (TermVectorsWriter.writeField));false;58;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $r6 = r0.fieldInfos,r0 (DocumentWriter.writeNorms));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldInfos = $r4,r0 (DocumentWriter.addDocument));false;22;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,boolean)> r0.this$0 = r1,r0 (IndexWriter$1.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: java.lang.Object doBody()> $r3 = r0.this$0,r0 (IndexWriter$1.doBody));true;13;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isStorePositionWithTermVector()> $z0 = r0.storePositionWithTermVector,r0 (Field.isStorePositionWithTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2019,r0 (Field.setStoreTermVector));true;389;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r11 = r0.tvd,r0 (TermVectorsWriter.writeDoc));false;42;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $r7 = r0.fieldBoosts,r0 (DocumentWriter.writeNorms));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldBoosts = $r23,r0 (DocumentWriter.addDocument));false;23;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.freqPointer = l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l1 = r2.freqPointer,r2 (TermInfosWriter.add));true;109;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l1 = r2.freqPointer,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.freqPointer = varReplacer1419,r0 (TermInfo.<init>));true;141;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferStart = varReplacer2439,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getEndColumn()> $i1 = r0.bufferStart,r0 (FastCharStream.getEndColumn));true;-1;true;false;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void close()> r0.writeLock = varReplacer1283,r0 (IndexWriter.close));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.writeLock = r3,r0 (IndexWriter.<init>));true;81;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r5 = r0.entries,r0 (CompoundFileWriter.close));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.entries = $r4,r0 (CompoundFileWriter.<init>));true;46;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,boolean)> r0.this$0 = r1,r0 (IndexWriter$1.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: java.lang.Object doBody()> $r7 = r0.this$0,r0 (IndexWriter$1.doBody));true;13;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.merged = varReplacer1338,r0 (CompoundFileWriter.<init>));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $z0 = r0.merged,r0 (CompoundFileWriter.close));true;46;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.freqPointer = $l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l21 = $r22.freqPointer,$r22 (TermInfosWriter.add));false;24;false;true;202;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));false;417;false;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r11 = r0.segment,r0 (SegmentMerger.mergeTerms));false;17;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r29 = r0.eol,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>()> r0.eol = $r1,r0 (ParseException.<init>));false;0;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.store.RAMDirectory: void <init>()> r0.files = $r1,r0 (RAMDirectory.<init>));BackwardQuery: (<org.apache.lucene.store.RAMDirectory: boolean fileExists(java.lang.String)> $r3 = r0.files,r0 (RAMDirectory.fileExists));false;60;false;true;554;false;true;11;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z2 = r0.isIndex,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = varReplacer1416,r0 (TermInfosWriter.<init>));false;28;false;true;221;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i11 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.pointer = varReplacer1472,r0 (RAMOutputStream.<init>));true;711;false;true;225;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i8 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;11;false;true;219;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r14 = r0.segmentInfos,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;79;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r31 = r1.positions,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.positions = varReplacer1381,r0 (TermVectorsWriter$TVTerm.<init>));true;636;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.isIndexed = z0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $z2 = r4.isIndexed,r4 (SegmentMerger.createCompoundFile));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r1 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;77;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> $i0 = r0.bufferPosition,r0 (FastCharStream.BeginToken));true;-1;true;false;229;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> r0.lastSkipDoc = varReplacer1429,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> r0.lastSkipDoc = i0,r0 (SegmentMerger.bufferSkip));false;10;false;true;207;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> r0.version = $l1,r0 (SegmentInfos.write));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l5,r0 (SegmentInfos.read));true;246;false;true;222;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2050,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStoreOffsetWithTermVector()> $z0 = r0.storeOffsetWithTermVector,r0 (Field.isStoreOffsetWithTermVector));true;438;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r6 = r0.entries,r0 (CompoundFileWriter.close));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.entries = $r4,r0 (CompoundFileWriter.<init>));true;47;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.merged = varReplacer1338,r0 (CompoundFileWriter.<init>));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void addFile(java.lang.String)> $z0 = r0.merged,r0 (CompoundFileWriter.addFile));true;45;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.counter = varReplacer1503,r0 (SegmentInfos.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $i0 = $r3.counter,$r3 (IndexWriter.newSegmentName));false;101;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r5 = r0.tvf,r0 (TermVectorsWriter.close));false;0;false;true;233;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.merged = varReplacer1338,r0 (CompoundFileWriter.<init>));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> r0.merged = varReplacer1327,r0 (CompoundFileWriter.close));true;46;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.eol = $r4,r0 (ParseException.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r20 = r0.eol,r0 (ParseException.getMessage));false;5;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void maybeMergeSegments()> $r3 = r0.segmentInfos,r0 (IndexWriter.maybeMergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));false;8;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isIndexed()> $z0 = r0.isIndexed,r0 (Field.isIndexed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isIndexed = varReplacer2000,r0 (Field.<init>));true;372;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i1 = r0.size,r0 (PriorityQueue.downHeap));true;140;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isTokenized = varReplacer1988,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTokenized()> $z0 = r0.isTokenized,r0 (Field.isTokenized));false;154;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i138,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.mergeFactor = varReplacer1496,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void maybeMergeSegments()> $i7 = r0.mergeFactor,r0 (IndexWriter.maybeMergeSegments));false;38;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.freqPointer = l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $l1 = r1.freqPointer,r1 (TermInfo.set));true;109;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object top()> $i0 = r0.size,r0 (PriorityQueue.top));true;131;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i1 = r0.tokenStart,r0 (FastCharStream.refill));true;-1;true;false;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r2 = r0.jj_expentries,r0 (StandardTokenizer.generateParseException));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_expentries = $r3,r0 (StandardTokenizer.<init>));true;326;false;false;221;false;true;808;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r9 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;0;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r27 = r0.segmentInfos,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));false;3;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r6 = r0.fields,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = $r22,r0 (TermVectorsWriter.<init>));false;34;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> r0.lastIndexPointer = $l11,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastIndexPointer = varReplacer1403,r0 (TermInfosWriter.<init>));false;29;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isBinary()> $z0 = r0.isBinary,r0 (Field.isBinary));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isBinary = varReplacer2038,r0 (Field.<init>));false;37;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $r3 = r0.stopWords,r0 (StopFilter.next));BackwardQuery: (<org.apache.lucene.analysis.StopFilter: void <init>(org.apache.lucene.analysis.TokenStream,java.util.Set,boolean)> r0.stopWords = r2,r0 (StopFilter.<init>));true;33;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r16 = r0.fieldsStream,r0 (FieldsWriter.addDocument));false;0;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)> $r4 = $r3.buffers,$r3 (RAMOutputStream.writeTo));BackwardQuery: (<org.apache.lucene.store.RAMFile: void <init>()> r0.buffers = $r1,r0 (RAMFile.<init>));false;13;false;true;217;false;true;4;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z3 = r2.storeOffsetWithTermVector,r2 (FieldInfos.write));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storeOffsetWithTermVector = varReplacer1465,r2 (FieldInfos.add));false;4;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r32 = r0.tvf,r0 (TermVectorsWriter.writeField));false;57;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.directory = r1,r0 (CompoundFileWriter.<init>));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $r4 = r0.directory,r0 (CompoundFileWriter.close));true;45;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeDocument()> $r1 = r0.fields,r0 (TermVectorsWriter.closeDocument));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = $r22,r0 (TermVectorsWriter.<init>));false;33;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void set(java.lang.String,java.lang.String)> r0.text = r2,r0 (Term.set));BackwardQuery: (<org.apache.lucene.index.Term: boolean equals(java.lang.Object)> $r5 = r2.text,r2 (Term.equals));false;25;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r42 = r0.ramDirectory,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.ramDirectory = $r8,r0 (IndexWriter.<init>));false;3;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r22 = r0.directory,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;0;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_ntk = varReplacer3157,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i0,r0 (StandardTokenizer.jj_ntk));true;414;false;false;348;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openDocument()> r0.currentDocPointer = $l0,r0 (TermVectorsWriter.openDocument));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: boolean isDocumentOpen()> $l0 = r0.currentDocPointer,r0 (TermVectorsWriter.isDocumentOpen));false;18;false;true;246;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.term = $r3,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $r6 = r3.term,r3 (SegmentMergeQueue.lessThan));true;-1;true;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $z0 = r0.useCompoundFile,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.useCompoundFile = varReplacer1497,r0 (IndexWriter.<init>));false;6;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.number = i0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: int fieldNumber(java.lang.String)> $i0 = r3.number,r3 (FieldInfos.fieldNumber));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void add(org.apache.lucene.index.IndexReader)> $r2 = r0.readers,r0 (SegmentMerger.add));true;33;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r23 = r0.output,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));false;27;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int merge()> $r1 = r0.fieldInfos,r0 (SegmentMerger.merge));false;31;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $r1 = r0.buffer,r0 (FastCharStream.readChar));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r8 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;116;false;true;214;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i0 = r0.bufferLength,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferLength = varReplacer2440,r0 (FastCharStream.<init>));true;-1;true;false;221;false;true;179;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> $r3 = r0.heap,r0 (PriorityQueue.upHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;111;false;true;226;false;true;1;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i0 = r0.size,r0 (PriorityQueue.downHeap));true;132;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = $r6,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r6 = r0.other,r0 (TermInfosWriter.add));false;0;false;true;229;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = $r22,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> $r2 = r0.fields,r0 (TermVectorsWriter.closeField));false;0;false;true;245;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r36 = r0.queue,r0 (SegmentMerger.mergeTerms));false;17;false;true;209;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: boolean hasVectors()> $z0 = $r1.storeTermVector,$r1 (FieldInfos.hasVectors));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storeTermVector = varReplacer1463,r2 (FieldInfos.add));false;17;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r6 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;217;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = varReplacer3216,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> r0.lastSkipDoc = varReplacer1429,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $i3 = r0.lastSkipDoc,r0 (SegmentMerger.bufferSkip));false;10;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r11,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;351;false;false;228;false;true;202;false
BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r1 = r0.fieldsData,r0 (Field.binaryValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;35;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isCompressed()> $z0 = r0.isCompressed,r0 (Field.isCompressed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isCompressed = varReplacer1995,r0 (Field.<init>));false;32;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i0 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i0,r0 (StandardTokenizer.jj_ntk));true;362;false;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i1 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));true;-1;true;false;222;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> $r7.other = r0,$r7 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r9 = r0.other,r0 (TermInfosWriter.add));false;1;false;true;221;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.tokenStart = varReplacer3521,r0 (FastCharStream.refill));true;-1;true;false;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.getFilePointer));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));false;324;false;true;225;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2010,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTermVectorStored()> $z0 = r0.storeTermVector,r0 (Field.isTermVectorStored));true;402;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $r5 = r0.buffer,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.buffer = $r1,r0 (BufferedIndexOutput.<init>));false;11;false;true;218;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> z1 = $r7.storeOffsets,$r7 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.storeOffsets = varReplacer1384,r0 (TermVectorsWriter$TVField.<init>));true;711;false;true;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.omitNorms = z4,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.omitNorms = varReplacer1462,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $r4 = r0.input_stream,r0 (StandardTokenizerTokenManager.jjFillToken));true;-1;true;false;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));true;-1;true;false;217;false;true;180;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> $z1 = r0.isIndex,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = varReplacer1416,r0 (TermInfosWriter.<init>));false;0;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.similarity = $r6,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $r10 = r0.similarity,r0 (DocumentWriter.writeNorms));false;30;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.indexInterval = varReplacer1409,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i13 = r0.indexInterval,r0 (TermInfosWriter.add));false;36;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $r5 = r0.heap,r0 (PriorityQueue.pop));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;119;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> $r8 = r0.heap,r0 (PriorityQueue.upHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;109;false;true;226;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r16 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;0;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r17 = r0.readers,r0 (SegmentMerger.mergeFields));false;17;false;true;248;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r4 = r0.fieldsStream,r0 (FieldsWriter.addDocument));false;0;false;true;231;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r4 = r0.lastTi,r0 (TermInfosWriter.add));false;36;false;true;237;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.size = varReplacer1402,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $l0 = r0.size,r0 (TermInfosWriter.close));false;42;false;true;240;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2016,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2039,r0 (Field.<init>));true;342;false;true;238;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isCompressed()> $z0 = r0.isCompressed,r0 (Field.isCompressed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isCompressed = varReplacer2046,r0 (Field.<init>));false;35;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));BackwardQuery: (<org.apache.lucene.index.Term: boolean equals(java.lang.Object)> $r5 = r2.text,r2 (Term.equals));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));true;-1;true;false;220;false;true;271;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.skipOffset = $i3,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i12 = r2.skipOffset,r2 (TermInfosWriter.add));false;25;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r14 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;215;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r5 = r0.tvf,r0 (TermVectorsWriter.writeField));false;53;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.termEnum = r1,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> $r2 = r0.termEnum,r0 (SegmentMergeInfo.next));true;-1;true;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r8 = r0.tvd,r0 (TermVectorsWriter.writeDoc));false;43;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = varReplacer3216,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer1992,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2020,r0 (Field.setStoreTermVector));true;271;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fields = varReplacer1389,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> $r2 = r0.fields,r0 (TermVectorsWriter.closeField));false;53;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r7 = r0.postingTable,r0 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.postingTable = $r4,r0 (DocumentWriter.<init>));false;25;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void close()> $r1 = r0.fieldsStream,r0 (FieldsWriter.close));false;0;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2050,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2018,r0 (Field.setStoreTermVector));true;306;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r52 = r0.infoStream,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));false;0;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r6 = r0.currentField,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> r0.currentField = varReplacer1375,r0 (TermVectorsWriter.closeField));false;43;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $r8 = r0.tvd,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));false;33;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isTokenized = varReplacer2028,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTokenized()> $z0 = r0.isTokenized,r0 (Field.isTokenized));false;206;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i16 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;231;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i3 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i143,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isStored = varReplacer1998,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStored()> $z0 = r0.isStored,r0 (Field.isStored));false;124;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;0;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r19 = r4.positions,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.positions = $r3,r0 (Posting.<init>));false;26;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: org.apache.lucene.store.Directory getDirectory()> $r1 = r0.directory,r0 (IndexWriter.getDirectory));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;1;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_expentries = $r3,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r3 = r0.jj_expentries,r0 (StandardTokenizer.generateParseException));true;345;false;false;222;false;true;14;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r3 = r0.directory,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));false;1;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.termText = r1,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $r5 = r6.termText,r6 (StopFilter.next));true;198;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));true;883;false;true;233;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> i0 = r0.size,r0 (PriorityQueue.upHeap));true;103;false;true;216;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.queue = varReplacer1470,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));false;16;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));true;853;false;true;242;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.omitNorms = varReplacer1462,r2 (FieldInfos.add));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $z1 = r2.omitNorms,r2 (DocumentWriter.writeNorms));true;-1;true;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.index.TermVectorOffsetInfo: void <init>(int,int)> r0.startOffset = i0,r0 (TermVectorOffsetInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorOffsetInfo: int getStartOffset()> $i0 = r0.startOffset,r0 (TermVectorOffsetInfo.getStartOffset));true;-1;true;true;726;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i8 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));false;477;false;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r1 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;75;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2017,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer1990,r0 (Field.<init>));true;276;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r2 = r0.freqOutput,r0 (SegmentMerger.mergeTermInfo));false;26;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storeOffsetWithTermVector = varReplacer1465,r2 (FieldInfos.add));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeOffsetWithTermVector = z3,r0 (FieldInfo.<init>));true;-1;true;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r2 = r0.currentToken,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.currentToken = r1,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.skipOffset = i3,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $i3 = r1.skipOffset,r1 (TermInfo.set));true;121;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r34 = r0.termInfosWriter,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfosWriter = varReplacer1469,r0 (SegmentMerger.<init>));false;2;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.freqPointer = $l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l20 = r2.freqPointer,r2 (TermInfosWriter.add));false;25;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTerm = $r4,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r2 = r0.lastTerm,r0 (TermInfosWriter.writeTerm));false;34;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.isIndex = varReplacer1404,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> $z1 = r0.isIndex,r0 (TermInfosWriter.initialize));false;11;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.Lock$With: void <init>(org.apache.lucene.store.Lock,long)> r0.lock = r1,r0 (Lock$With.<init>));BackwardQuery: (<org.apache.lucene.store.Lock$With: java.lang.Object run()> $r6 = r0.lock,r0 (Lock$With.run));true;33;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.size = varReplacer1417,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> r0.size = $l7,r0 (TermInfosWriter.add));false;36;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.freq = varReplacer1383,r0 (TermVectorsWriter$TVTerm.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.freq = i0,r4 (TermVectorsWriter.addTermInternal));true;18;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r2 = r0.file,r0 (RAMOutputStream.flushBuffer));true;711;false;true;225;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r2 = $r1.next,$r1 (StandardTokenizer.jj_ntk));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r27 = r1.offsets,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.offsets = varReplacer1382,r0 (TermVectorsWriter$TVTerm.<init>));true;622;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i15 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));false;0;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)> r0.input = r1,r0 (TokenFilter.<init>));BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $r2 = r0.input,r0 (StopFilter.next));true;113;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.proxPointer = $l2,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l23 = r2.proxPointer,r2 (TermInfosWriter.add));false;23;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_ntk = varReplacer3157,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i1,r0 (StandardTokenizer.jj_ntk));true;406;false;false;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i1 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3165,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $l7 = $r2.length,$r2 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void reset()> $r2.length = varReplacer2600,$r2 (RAMOutputStream.reset));true;-1;true;true;242;false;true;3;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;0;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i20 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r7 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;199;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i4 = r0.tokenStart,r0 (FastCharStream.refill));true;-1;true;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2007,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTermVectorStored()> $z0 = r0.storeTermVector,r0 (Field.isTermVectorStored));true;399;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void close()> $r1 = r0.ramDirectory,r0 (IndexWriter.close));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.ramDirectory = $r8,r0 (IndexWriter.<init>));true;78;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfosWriter = varReplacer1469,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.termInfosWriter = $r16,r0 (SegmentMerger.mergeTerms));false;16;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.queue = $r21,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r4 = r0.queue,r0 (SegmentMerger.mergeTermInfos));false;0;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> $r3 = r0.terms,r0 (TermVectorsWriter.closeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = $r23,r0 (TermVectorsWriter.<init>));false;43;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isStored = varReplacer2043,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStored()> $z0 = r0.isStored,r0 (Field.isStored));false;172;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i0 = r0.tokenStart,r0 (FastCharStream.GetImage));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.tokenStart = varReplacer3521,r0 (FastCharStream.refill));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r33 = r1.positions,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.positions = r2,r4 (TermVectorsWriter.addTermInternal));true;619;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l7,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> r0.version = $l1,r0 (SegmentInfos.write));true;241;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> r0.lastSkipFreqPointer = $l0,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $l5 = r0.lastSkipFreqPointer,r0 (SegmentMerger.bufferSkip));false;10;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r9 = r0.fieldInfos,r0 (SegmentMerger.createCompoundFile));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));false;0;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r7 = r0.output,r0 (TermInfosWriter.writeTerm));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));false;25;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r13 = r4.positions,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.positions = $r3,r0 (Posting.<init>));false;26;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i2 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));false;12;false;true;231;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r2 = r0.fieldsData,r0 (Field.binaryValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer1994,r0 (Field.<init>));false;34;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i2 = r0.jjmatchedPos,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedPos = i247,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.buffer = $r8,r0 (FastCharStream.refill));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $r3 = r0.heap,r0 (PriorityQueue.pop));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;117;false;true;225;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i26 = r2.docFreq,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.docFreq = varReplacer1421,r0 (TermInfo.<init>));true;152;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $l1 = r0.currentDocPointer,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeDocument()> r0.currentDocPointer = varReplacer1374,r0 (TermVectorsWriter.closeDocument));false;33;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $r5 = r3.name,r3 (SegmentInfos.write));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.name = r1,r0 (SegmentInfo.<init>));false;469;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_kind = i0,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> r0.jj_kind = varReplacer3158,r0 (StandardTokenizer.generateParseException));true;389;false;false;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> r0.lastSkipProxPointer = $l1,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $l8 = r0.lastSkipProxPointer,r0 (SegmentMerger.bufferSkip));false;10;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $r10 = r0.segment,r0 (SegmentMerger.mergeNorms));false;30;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c11 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;227;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z0 = r0.isIndex,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = z0,r0 (TermInfosWriter.initialize));false;25;false;true;235;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r5 = r0.buffer,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));true;-1;true;false;222;false;true;182;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void bufferSkip(int)> $r4 = r0.skipBuffer,r0 (SegmentMerger.bufferSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.skipBuffer = $r5,r0 (SegmentMerger.<init>));false;11;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isTokenized = varReplacer2040,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTokenized()> $z0 = r0.isTokenized,r0 (Field.isTokenized));false;203;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i1 = r0.jjround,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjround = $i6,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void close()> $r1 = r0.termEnum,r0 (SegmentMergeInfo.close));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.termEnum = r1,r0 (SegmentMergeInfo.<init>));true;-1;true;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> $r15 = r0.postingTable,r0 (DocumentWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.postingTable = $r4,r0 (DocumentWriter.<init>));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: boolean isFieldOpen()> $r1 = r0.currentField,r0 (TermVectorsWriter.isFieldOpen));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentField = varReplacer1394,r0 (TermVectorsWriter.<init>));false;48;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r3 = r0.segmentInfos,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;75;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferStart = $l11,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferStart = $l4,r0 (BufferedIndexOutput.flush));false;13;false;true;232;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c75 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i8 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));false;433;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i11 = r0.bufferLength,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferLength = varReplacer2440,r0 (FastCharStream.<init>));true;-1;true;false;220;false;true;180;false
BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r2 = r0.fieldsData,r0 (Field.binaryValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;33;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i2 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));true;-1;true;false;217;false;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i1 = r0.bufferPosition,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> r0.bufferPosition = $i2,r0 (FastCharStream.backup));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.proxPointer = l2,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l23 = r2.proxPointer,r2 (TermInfosWriter.add));true;115;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: int hashCode()> $r1 = r0.field,r0 (Term.hashCode));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));true;-1;true;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r4 = r0.token_source,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token_source = $r4,r0 (StandardTokenizer.<init>));true;395;false;false;261;false;true;240;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i0 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3164,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;348;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r3 = r0.lastTi,r0 (TermInfosWriter.add));false;34;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void set(java.lang.String,java.lang.String)> r0.text = r2,r0 (Term.set));BackwardQuery: (<org.apache.lucene.index.Term: int hashCode()> $r2 = r0.text,r0 (Term.hashCode));false;25;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));false;534;false;true;292;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> $r8 = r1.text,r1 (TermInfosWriter.writeTerm));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));true;-1;true;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i26 = r2.docFreq,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.docFreq = i0,r0 (TermInfo.set));true;119;false;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r12 = r0.fieldsStream,r0 (FieldsWriter.addDocument));false;0;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object top()> $r1 = r0.heap,r0 (PriorityQueue.top));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;115;false;true;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i137 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;206;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)> r0.input = r1,r0 (TokenFilter.<init>));BackwardQuery: (<org.apache.lucene.analysis.TokenFilter: void close()> $r1 = r0.input,r0 (TokenFilter.close));true;278;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void ReInitRounds()> r0.jjround = varReplacer3519,r0 (StandardTokenizerTokenManager.ReInitRounds));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $i5 = r0.jjround,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r33 = r1.positions,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.positions = varReplacer1381,r0 (TermVectorsWriter$TVTerm.<init>));true;645;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_kind = i0,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $i8 = r0.jj_kind,r0 (StandardTokenizer.generateParseException));true;401;false;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r6 = r0.freqOutput,r0 (SegmentMerger.appendPostings));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;12;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjrounds = $r3,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $r1 = r0.jjrounds,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.omitNorms = z4,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $z3 = r4.omitNorms,r4 (SegmentMerger.createCompoundFile));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldPositions = $r19,r0 (DocumentWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r10 = r0.fieldPositions,r0 (DocumentWriter.invertDocument));false;1;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.term = $r3,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = varReplacer1426,r0 (SegmentMergeInfo.next));true;-1;true;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $l2 = r0.bufferStart,r0 (BufferedIndexOutput.getFilePointer));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void seek(long)> r0.bufferStart = l0,r0 (BufferedIndexOutput.seek));true;434;false;true;221;false;true;39;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.isTokenized = varReplacer1997,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTokenized()> $z0 = r0.isTokenized,r0 (Field.isTokenized));false;148;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $r7 = r6.termText,r6 (StopFilter.next));BackwardQuery: (<org.apache.lucene.analysis.LowerCaseFilter: org.apache.lucene.analysis.Token next()> r1.termText = $r4,r1 (LowerCaseFilter.next));true;248;false;true;264;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r6 = $r3.term,$r3 (DocumentWriter.quickSort));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));true;-1;true;true;-1;true;true;9;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> $r6 = r0.terms,r0 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = varReplacer1388,r0 (TermVectorsWriter.<init>));false;24;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r2 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;44;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r38 = r0.infoStream,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));false;3;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r12 = r0.segmentInfos,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;80;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r1 = r0.buffer,r0 (FastCharStream.refill));true;-1;true;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void close()> $r2 = r0.postings,r0 (SegmentMergeInfo.close));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: org.apache.lucene.index.TermPositions getPositions()> r0.postings = $r4,r0 (SegmentMergeInfo.getPositions));true;-1;true;true;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)> $r6 = r1.text,r1 (Term.compareTo));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));true;-1;true;true;-1;true;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r4 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;217;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l20 = r2.freqPointer,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.freqPointer = varReplacer1419,r0 (TermInfo.<init>));true;151;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r2 = r0.fieldsData,r0 (Field.readerValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;58;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i3 = r0.tokenStart,r0 (FastCharStream.refill));true;-1;true;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> $r2 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;227;false;true;-1;true
BackwardQuery: (<org.apache.lucene.store.RAMDirectory: void <init>()> r0.files = $r1,r0 (RAMDirectory.<init>));BackwardQuery: (<org.apache.lucene.store.RAMDirectory: java.lang.String[] list()> $r3 = r0.files,r0 (RAMDirectory.list));true;-1;true;true;627;false;true;13;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i4 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;16;false;true;223;false;true;3;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r9 = r0.freqOutput,r0 (SegmentMerger.appendPostings));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;12;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldInfos = r3,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(java.lang.String)> $r3 = r0.fieldInfos,r0 (TermVectorsWriter.openField));false;0;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeTermVector = z1,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> $z6 = r2.storeTermVector,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r5 = r0.lastTi,r0 (TermInfosWriter.add));false;38;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void addFile(java.lang.String)> r2.file = r1,r2 (CompoundFileWriter.addFile));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void copyFile(org.apache.lucene.index.CompoundFileWriter$FileEntry,org.apache.lucene.store.IndexOutput,byte[])> $r19 = r1.file,r1 (CompoundFileWriter.copyFile));false;278;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i1 = r0.size,r0 (PriorityQueue.downHeap));true;125;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldInfos = r3,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addAllDocVectors(org.apache.lucene.index.TermFreqVector[])> $r11 = r0.fieldInfos,r0 (TermVectorsWriter.addAllDocVectors));false;0;false;true;212;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)> $r2 = r0.byName,r0 (FieldInfos.fieldInfo));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void <init>()> r0.byName = $r2,r0 (FieldInfos.<init>));true;249;false;true;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r11 = r0.tvf,r0 (TermVectorsWriter.close));false;0;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void addDocument(org.apache.lucene.document.Document,org.apache.lucene.analysis.Analyzer)> $r12 = r0.ramDirectory,r0 (IndexWriter.addDocument));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.ramDirectory = $r8,r0 (IndexWriter.<init>));false;0;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r10 = r0.token,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;328;false;false;282;false;true;200;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = $r3,r0 (SegmentMergeInfo.next));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> r26 = $r8.term,$r8 (SegmentMerger.mergeTermInfos));true;-1;true;true;237;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r26 = $r25.term,$r25 (DocumentWriter.quickSort));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;117;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,java.util.Vector)> $r9 = r0.infoStream,r0 (IndexWriter.deleteFiles));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));false;28;false;true;219;false;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $c16 = r0.curChar,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.curChar = $c18,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2039,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStorePositionWithTermVector()> $z0 = r0.storePositionWithTermVector,r0 (Field.isStorePositionWithTermVector));true;352;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $l1 = r1.freqPointer,r1 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.freqPointer = varReplacer1419,r0 (TermInfo.<init>));true;136;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i1 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3168,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void ReInitRounds()> $r1 = r0.jjrounds,r0 (StandardTokenizerTokenManager.ReInitRounds));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjrounds = $r3,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;261;false;true;-1;true
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeTermVector = varReplacer2012,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isTermVectorStored()> $z0 = r0.storeTermVector,r0 (Field.isTermVectorStored));true;438;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMDirectory: void <init>()> r0.files = $r1,r0 (RAMDirectory.<init>));BackwardQuery: (<org.apache.lucene.store.RAMDirectory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String)> $r4 = r0.files,r0 (RAMDirectory.createOutput));false;60;false;true;226;false;true;7;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)> $r2 = r0.file,r0 (RAMOutputStream.writeTo));false;259;false;true;217;false;true;12;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r7 = r0.file,r0 (RAMOutputStream.flushBuffer));true;687;false;true;222;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_expentries = $r3,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r4 = r0.jj_expentries,r0 (StandardTokenizer.generateParseException));true;334;false;false;212;false;true;14;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object top()> $i0 = r0.size,r0 (PriorityQueue.top));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;135;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i138,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.proxPointer = $l2,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.proxPointer = varReplacer1420,r0 (TermInfo.<init>));false;24;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addAllDocVectors(org.apache.lucene.index.TermFreqVector[])> $r17 = r0.fieldInfos,r0 (TermVectorsWriter.addAllDocVectors));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldInfos = r3,r0 (TermVectorsWriter.<init>));false;18;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $r7 = r0.input_stream,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;216;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.postingTable = $r4,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: org.apache.lucene.index.Posting[] sortPostingTable()> $r4 = r0.postingTable,r0 (DocumentWriter.sortPostingTable));false;20;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void ReInitRounds()> r0.jjround = varReplacer3519,r0 (StandardTokenizerTokenManager.ReInitRounds));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i5 = r0.jjround,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r6 = r0.tvd,r0 (TermVectorsWriter.close));false;37;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $r1 = r0.buffer,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.buffer = $r1,r0 (BufferedIndexOutput.<init>));true;698;false;true;223;false;true;4;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i4 = r0.tokenStart,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferLength = i0,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferLength = varReplacer2440,r0 (FastCharStream.<init>));true;-1;true;false;267;false;true;228;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_gen = $i3,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i4 = r0.jj_gen,r0 (StandardTokenizer.next));true;432;false;false;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r3.tvfPointer = $l3,$r3 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $l2 = r2.tvfPointer,r2 (TermVectorsWriter.writeDoc));true;748;false;true;-1;true;true;46;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentDocPointer = varReplacer1395,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openDocument()> r0.currentDocPointer = $l0,r0 (TermVectorsWriter.openDocument));false;25;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r67 = r0.expectedTokenSequences,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> r1 = $r11.term,$r11 (DocumentWriter.quickSort));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i0 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3168,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r2 = r0.tvx,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = varReplacer1387,r0 (TermVectorsWriter.<init>));false;26;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i71 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;234;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.reader = r2,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: org.apache.lucene.index.TermPositions getPositions()> $r3 = r0.reader,r0 (SegmentMergeInfo.getPositions));true;984;false;true;219;false;true;5;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2015,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer1996,r0 (Field.<init>));true;274;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r24 = r0.proxOutput,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;10;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.freqPointer = $l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l1 = r2.freqPointer,r2 (TermInfosWriter.add));false;25;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $i4 = r1.number,r1 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.number = i0,r0 (TermVectorsWriter$TVField.<init>));true;752;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r17 = r0.analyzer,r0 (DocumentWriter.invertDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.analyzer = r2,r0 (DocumentWriter.<init>));false;15;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3165,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;217;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r7 = r0.token,r0 (StandardTokenizer.generateParseException));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = r1,r0 (StandardTokenizer.jj_consume_token));true;399;false;false;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i27 = r0.skipInterval,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.skipInterval = varReplacer1401,r0 (TermInfosWriter.<init>));false;28;false;true;426;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l4,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $l0 = r0.version,r0 (SegmentInfos.write));true;396;false;true;264;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferStart = varReplacer1474,r0 (BufferedIndexOutput.<init>));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferStart = $l4,r0 (BufferedIndexOutput.flush));true;714;false;true;224;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer1994,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r1 = r0.fieldsData,r0 (Field.readerValue));false;154;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $i3 = r0.tokenStart,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));true;-1;true;false;250;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2008,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStoreOffsetWithTermVector()> $z0 = r0.storeOffsetWithTermVector,r0 (Field.isStoreOffsetWithTermVector));true;468;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i1 = r0.bufferPosition,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));true;-1;true;false;218;false;true;180;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.proxOutput = $r15,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;0;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.fieldsStream = $r8,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r9 = r0.fieldsStream,r0 (FieldsWriter.addDocument));false;0;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r1 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;199;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r63 = r0.tokenImage,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.tokenImage = r3,r0 (ParseException.<init>));false;1;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r9 = r0.terms,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = $r23,r0 (TermVectorsWriter.<init>));false;47;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r4 = r0.termInfo,r0 (SegmentMerger.mergeTermInfo));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfo = $r4,r0 (SegmentMerger.<init>));false;10;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r9 = r0.segmentInfos,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;79;false;true;366;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> r0.jj_ntk = $i1,r0 (StandardTokenizer.jj_ntk));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_ntk = varReplacer2442,r0 (StandardTokenizer.<init>));true;372;false;false;221;false;true;115;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void closeReaders()> $r3 = r0.readers,r0 (SegmentMerger.closeReaders));false;32;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c140 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r6,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r1 = r0.token,r0 (StandardTokenizer.jj_ntk));true;391;false;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r21 = r0.tvf,r0 (TermVectorsWriter.writeField));false;57;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i3 = r0.tokenStart,r0 (FastCharStream.GetImage));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.tokenStart = varReplacer3521,r0 (FastCharStream.refill));true;-1;true;false;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.maxFieldLength = $i0,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $i5 = r0.maxFieldLength,r0 (DocumentWriter.invertDocument));false;24;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.util.Vector readDeleteableFiles()> $r6 = r0.directory,r0 (IndexWriter.readDeleteableFiles));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;24;false;true;217;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i0 = r0.bufferLength,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferLength = $i6,r0 (FastCharStream.refill));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c141 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: void <init>(int,org.apache.lucene.index.TermEnum,org.apache.lucene.index.IndexReader)> r0.term = $r3,r0 (SegmentMergeInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> r26 = $r8.term,$r8 (SegmentMerger.mergeTermInfos));true;910;false;true;224;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfosWriter = varReplacer1469,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r25 = r0.termInfosWriter,r0 (SegmentMerger.mergeTerms));false;27;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $l1 = r0.currentDocPointer,r0 (TermVectorsWriter.writeDoc));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openDocument()> r0.currentDocPointer = $l0,r0 (TermVectorsWriter.openDocument));false;33;false;true;348;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isIndexed()> $z0 = r0.isIndexed,r0 (Field.isIndexed));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isIndexed = varReplacer2047,r0 (Field.<init>));true;495;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,java.util.Vector)> $r6 = r0.directory,r0 (IndexWriter.deleteFiles));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;33;false;true;220;false;true;2;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i1 = r0.size,r0 (PriorityQueue.pop));true;128;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.docFreq = varReplacer1421,r0 (TermInfo.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $i0 = r1.docFreq,r1 (TermInfo.set));true;137;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,boolean)> r0.val$create = z0,r0 (IndexWriter$1.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter$1: java.lang.Object doBody()> $z0 = r0.val$create,r0 (IndexWriter$1.doBody));true;12;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.name = r1,r0 (SegmentInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentReader: boolean hasSeparateNorms(org.apache.lucene.index.SegmentInfo)> $r5 = r0.name,r0 (SegmentReader.hasSeparateNorms));true;767;false;true;-1;true;true;4;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.directory = $r6,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $r9 = r0.directory,r0 (SegmentMerger.mergeNorms));false;31;false;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.indexStream = $r13,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void close()> $r2 = r0.indexStream,r0 (FieldsWriter.close));false;0;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> $i2 = r0.size,r0 (PriorityQueue.put));true;125;false;true;229;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r11 = r0.fieldInfos,r0 (SegmentMerger.createCompoundFile));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));false;2;false;true;255;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r14 = r4.positions,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.positions = $r3,r0 (Posting.<init>));false;26;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.name = r1,r0 (SegmentInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentReader: boolean hasDeletions(org.apache.lucene.index.SegmentInfo)> $r3 = r0.name,r0 (SegmentReader.hasDeletions));true;782;false;true;-1;true;true;4;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2017,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2050,r0 (Field.<init>));true;318;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> $r1 = r0.currentField,r0 (TermVectorsWriter.closeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.currentField = varReplacer1394,r0 (TermVectorsWriter.<init>));false;44;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = $r5,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r27 = r4.offsets,r4 (DocumentWriter.writePostings));false;89;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $z1 = r50.storeTermVector,r50 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storeTermVector = varReplacer1463,r2 (FieldInfos.add));false;14;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> $i0 = r0.bufferPosition,r0 (FastCharStream.BeginToken));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i1 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));true;684;false;true;232;false;true;4;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r14 = $r13.term,$r13 (DocumentWriter.quickSort));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> i0 = r4.freq,r4 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.freq = varReplacer2081,r0 (Posting.<init>));false;4;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.image = $r10,r1 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r34 = r74.image,r74 (ParseException.getMessage));false;25;false;true;-1;true;true;-1;true
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r8 = r0.fieldInfos,r0 (DocumentWriter.invertDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldInfos = $r4,r0 (DocumentWriter.addDocument));false;15;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferStart = varReplacer1474,r0 (BufferedIndexOutput.<init>));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $l3 = r0.bufferStart,r0 (BufferedIndexOutput.flush));true;697;false;true;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getBeginColumn()> $i0 = r0.tokenStart,r0 (FastCharStream.getBeginColumn));true;-1;true;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r1 = r0.fieldsData,r0 (Field.binaryValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer1994,r0 (Field.<init>));false;33;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.docFreq = i0,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i19 = r2.docFreq,r2 (TermInfosWriter.add));true;112;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.indexInterval = varReplacer1409,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.indexInterval = i0,r0 (TermInfosWriter.initialize));true;26;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));false;0;false;true;232;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.version = $l0,r0 (SegmentInfos.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l5,r0 (SegmentInfos.read));true;228;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> $r2 = r0.heap,r0 (PriorityQueue.put));true;95;false;true;199;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i143,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2011,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2039,r0 (Field.<init>));true;320;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i23,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;283;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.skipOffset = i3,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $i12 = r2.skipOffset,r2 (TermInfosWriter.add));true;117;false;true;320;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_la1 = $r2,r0 (StandardTokenizer.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $r5 = r0.jj_la1,r0 (StandardTokenizer.next));true;426;false;false;248;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r44 = r0.infoStream,r0 (IndexWriter.mergeSegments));false;34;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> $i2 = r0.size,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;127;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void maybeMergeSegments()> $i0 = r0.minMergeDocs,r0 (IndexWriter.maybeMergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.minMergeDocs = varReplacer1491,r0 (IndexWriter.<init>));false;0;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r11 = $r10.next,$r10 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));false;0;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()> $r14 = r0.jj_expentries,r0 (StandardTokenizer.generateParseException));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_expentries = $r3,r0 (StandardTokenizer.<init>));true;337;false;false;213;false;true;808;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i0 = r0.size,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));true;117;false;true;224;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.size = varReplacer1402,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> r0.size = $l7,r0 (TermInfosWriter.add));false;40;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.lang.String,java.util.Vector)> r0.val$mergedName = r3,r0 (IndexWriter$5.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter$5: java.lang.Object doBody()> $r4 = r0.val$mergedName,r0 (IndexWriter$5.doBody));true;12;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(java.lang.String)> $z1 = r2.storePositionWithTermVector,r2 (TermVectorsWriter.openField));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storePositionWithTermVector = z2,r0 (FieldInfo.<init>));false;27;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));true;756;false;true;248;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r29 = r0.proxOutput,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;11;false;true;246;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> r0.freqPointer = $l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.freqPointer = varReplacer1419,r0 (TermInfo.<init>));false;30;false;true;219;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r12 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;215;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r25 = r4.term,r4 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));false;7;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.eol = $r4,r0 (ParseException.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r14 = r0.eol,r0 (ParseException.getMessage));false;4;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.docCount = i0,r0 (SegmentInfo.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $i6 = $r14.docCount,$r14 (IndexWriter.flushRamSegments));true;745;false;true;-1;true;true;4;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_ntk = varReplacer3157,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_ntk = varReplacer2442,r0 (StandardTokenizer.<init>));true;349;false;false;222;false;true;202;false
BackwardQuery: (<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)> r0.input = r1,r0 (TokenFilter.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardFilter: org.apache.lucene.analysis.Token next()> $r5 = r0.input,r0 (StandardFilter.next));true;253;false;true;227;false;false;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.omitNorms = z4,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z4 = r2.omitNorms,r2 (FieldInfos.write));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r6 = r0.tvd,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = $r14,r0 (TermVectorsWriter.<init>));false;28;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $r15 = r0.readers,r0 (SegmentMerger.mergeNorms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;1;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.isIndex = varReplacer1404,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z0 = r0.isIndex,r0 (TermInfosWriter.add));false;34;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i0 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.jj_ntk = varReplacer3157,r0 (StandardTokenizer.jj_consume_token));true;389;false;false;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i14 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.pointer = varReplacer1472,r0 (RAMOutputStream.<init>));true;706;false;true;221;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i23,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> $i1 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r24 = r0.directory,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;0;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> $r20 = r0.readers,r0 (SegmentMerger.mergeFields));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));true;36;false;true;215;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.analyzer = r2,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void addDocument(org.apache.lucene.document.Document)> $r2 = r0.analyzer,r0 (IndexWriter.addDocument));false;31;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.name = $r8,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String name()> $r1 = r0.name,r0 (Field.name));true;521;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r9 = r0.infoStream,r0 (IndexWriter.mergeSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));false;3;false;true;213;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.version = $l7,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $l0 = r0.version,r0 (SegmentInfos.write));true;239;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.counter = varReplacer1503,r0 (SegmentInfos.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = i0,r0 (SegmentInfos.read));true;221;false;true;238;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $r20 = r0.termInfosWriter,r0 (SegmentMerger.mergeTerms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfosWriter = varReplacer1469,r0 (SegmentMerger.<init>));false;0;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = varReplacer1391,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r25 = r0.tvf,r0 (TermVectorsWriter.close));false;39;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> $r2 = r0.freqOutput,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;10;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = varReplacer3216,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;245;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r12 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;240;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i2 = r0.bufferPosition,r0 (FastCharStream.readChar));true;-1;true;false;246;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2018,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStoreOffsetWithTermVector()> $z0 = r0.storeOffsetWithTermVector,r0 (Field.isStoreOffsetWithTermVector));true;505;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.tokenStart = varReplacer2437,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i0 = r0.tokenStart,r0 (FastCharStream.GetImage));true;-1;true;false;242;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r10 = r0.currentToken,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.currentToken = r1,r0 (ParseException.<init>));false;2;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i22 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;242;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i0 = r0.size,r0 (PriorityQueue.pop));true;123;false;true;237;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termIndexInterval = $i0,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> $i0 = r0.termIndexInterval,r0 (SegmentMerger.mergeTerms));false;18;false;true;266;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $l1 = r25.directoryOffset,r25 (CompoundFileWriter.close));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> r20.directoryOffset = $l4,r20 (CompoundFileWriter.close));true;831;false;true;196;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z2 = r0.isIndex,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = z0,r0 (TermInfosWriter.initialize));false;26;false;true;207;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = r1,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;336;false;false;221;false;true;201;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r10 = r0.file,r0 (RAMOutputStream.flushBuffer));true;707;false;true;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> r74 = $r2.next,$r2 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));true;-1;true;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> r74 = r74.next,r74 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));false;1;false;true;-1;true;true;2;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $i1 = r0.size,r0 (PriorityQueue.downHeap));true;117;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r1 = r0.segmentInfos,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;79;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)> r0.input = r1,r0 (TokenFilter.<init>));BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $r4 = r0.input,r0 (StopFilter.next));true;108;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i20 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r11 = $r10.next,$r10 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r5.next = $r6,$r5 (StandardTokenizer.jj_consume_token));true;-1;true;false;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void addFile(java.lang.String)> $r5 = r0.entries,r0 (CompoundFileWriter.addFile));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.entries = $r4,r0 (CompoundFileWriter.<init>));true;43;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.beginColumn = $i4,r1 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i3 = r7.beginColumn,r7 (StandardTokenizer.next));true;721;false;false;210;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void optimize()> $r10 = r0.segmentInfos,r0 (IndexWriter.optimize));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;70;false;true;196;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void writeDeleteableFiles(java.util.Vector)> $r4 = r0.directory,r0 (IndexWriter.writeDeleteableFiles));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));false;27;false;true;216;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.StopFilter: org.apache.lucene.analysis.Token next()> $r5 = r6.termText,r6 (StopFilter.next));BackwardQuery: (<org.apache.lucene.analysis.LowerCaseFilter: org.apache.lucene.analysis.Token next()> r1.termText = $r4,r1 (LowerCaseFilter.next));true;199;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> $r7.other = r0,$r7 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r6 = r0.other,r0 (TermInfosWriter.add));false;1;false;true;222;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> r0.tokenStart = $i0,r0 (FastCharStream.BeginToken));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $i0 = r0.tokenStart,r0 (FastCharStream.GetImage));true;-1;true;false;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $r4 = r0.other,r0 (TermInfosWriter.close));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.other = varReplacer1414,r0 (TermInfosWriter.<init>));false;30;false;true;219;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)> r0.counter = $i8,r0 (SegmentInfos.read));BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $r3.counter = $i1,$r3 (IndexWriter.newSegmentName));false;119;false;true;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.other = $r6,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r9 = r0.other,r0 (TermInfosWriter.add));false;0;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $r1 = r0.expectedTokenSequences,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>(org.apache.lucene.analysis.standard.Token,int[][],java.lang.String[])> r0.expectedTokenSequences = r2,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.size = varReplacer1402,r0 (TermInfosWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l15 = r0.size,r0 (TermInfosWriter.add));false;35;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r11 = r0.postingTable,r0 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.postingTable = $r4,r0 (DocumentWriter.<init>));false;25;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i14,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;0;false;true;213;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r17 = r0.segment,r0 (SegmentMerger.createCompoundFile));false;19;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(int,long,long,int)> r0.freqPointer = l1,r0 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.freqPointer = varReplacer1419,r0 (TermInfo.<init>));true;119;false;true;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: java.lang.String text()> $r1 = r0.text,r0 (Term.text));BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.text = r2,r0 (Term.<init>));false;6;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(int,boolean,boolean)> r0.currentField = $r1,r0 (TermVectorsWriter.openField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r6 = r0.currentField,r0 (TermVectorsWriter.writeField));false;23;false;true;207;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvd = varReplacer1396,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r29 = r0.tvd,r0 (TermVectorsWriter.close));false;34;false;true;202;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: byte[] binaryValue()> $r1 = r0.fieldsData,r0 (Field.binaryValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;33;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void write(org.apache.lucene.store.Directory)> $i5 = r3.docCount,r3 (SegmentInfos.write));BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.docCount = i0,r0 (SegmentInfo.<init>));false;468;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void close()> $r15 = r0.tvx,r0 (TermVectorsWriter.close));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvx = varReplacer1387,r0 (TermVectorsWriter.<init>));false;27;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.termInfosWriter = varReplacer1469,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r8 = r0.termInfosWriter,r0 (SegmentMerger.mergeTermInfo));false;26;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r5 = r0.tvf,r0 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));false;43;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: java.lang.Object doBody()> $r1 = r0.this$0,r0 (IndexWriter$4.doBody));BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.util.Vector)> r0.this$0 = r1,r0 (IndexWriter$4.<init>));true;12;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $z2 = r4.isIndexed,r4 (SegmentMerger.createCompoundFile));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.isIndexed = varReplacer1464,r2 (FieldInfos.add));false;3;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2016,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer1996,r0 (Field.<init>));true;270;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)> $r3 = r0.file,r0 (RAMOutputStream.writeTo));false;257;false;true;215;false;true;12;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r3 = $r2.next,$r2 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5.next = $r6,$r5 (StandardTokenizer.jj_ntk));true;-1;true;false;216;false;true;458;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c184 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;226;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> r0.lastTerm = r1,r0 (TermInfosWriter.writeTerm));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r18 = r0.lastTerm,r0 (TermInfosWriter.add));false;24;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.dir = r2,r0 (SegmentInfo.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentReader: boolean usesCompoundFile(org.apache.lucene.index.SegmentInfo)> $r2 = r0.dir,r0 (SegmentReader.usesCompoundFile));true;929;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storePositionWithTermVector = z2,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storePositionWithTermVector = varReplacer1466,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));BackwardQuery: (<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)> $r3 = r0.field,r0 (Term.compareTo));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r23 = r4.term,r4 (DocumentWriter.writePostings));false;85;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c89 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;208;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r6 = r0.freqOutput,r0 (SegmentMerger.appendPostings));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.freqOutput = varReplacer1468,r0 (SegmentMerger.<init>));false;12;false;true;201;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String stringValue()> $r2 = r0.fieldsData,r0 (Field.stringValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = r2,r0 (Field.<init>));false;71;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l4 = r2.proxPointer,r2 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.proxPointer = varReplacer1420,r0 (TermInfo.<init>));true;145;false;true;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVField: void <init>(int,boolean,boolean)> r0.tvfPointer = varReplacer1385,r0 (TermVectorsWriter$TVField.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeDoc()> $l2 = r2.tvfPointer,r2 (TermVectorsWriter.writeDoc));true;760;false;true;-1;true;true;12;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void reset()> $r2 = r0.file,r0 (RAMOutputStream.reset));false;261;false;true;221;false;true;12;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));true;720;false;true;228;false;true;4;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r2 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;217;false;true;-1;true
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $i5 = r1.freq,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.freq = varReplacer1383,r0 (TermVectorsWriter$TVTerm.<init>));true;896;false;true;-1;true;true;8;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.segment = r2,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)> $r32 = r0.segment,r0 (SegmentMerger.createCompoundFile));false;40;false;true;345;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjAddStates(int,int)> r0.jjnewStateCnt = $i2,r0 (StandardTokenizerTokenManager.jjAddStates));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjnewStateCnt = $i21,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;270;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void close()> $r3 = r0.output,r0 (TermInfosWriter.close));false;0;false;true;247;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));BackwardQuery: (<org.apache.lucene.index.Term: boolean equals(java.lang.Object)> $r4 = r0.field,r0 (Term.equals));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;0;false;true;219;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> r4.termText = r1,r4 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> r35 = r1.termText,r1 (TermVectorsWriter.writeField));true;681;false;true;-1;true;true;3;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: boolean hasVectors()> $z0 = $r1.storeTermVector,$r1 (FieldInfos.hasVectors));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeTermVector = z1,r0 (FieldInfo.<init>));false;20;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> r0.jjmatchedKind = i250,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i6 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;242;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isCompressed = varReplacer2042,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isCompressed()> $z0 = r0.isCompressed,r0 (Field.isCompressed));false;172;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $i13 = r0.pointer,r0 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.pointer = varReplacer1472,r0 (RAMOutputStream.<init>));true;688;false;true;220;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r6 = r0.buffer,r0 (FastCharStream.refill));true;-1;true;false;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2050,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2009,r0 (Field.setStoreTermVector));true;322;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> $r7 = r0.token,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.token = $r5,r0 (StandardTokenizer.<init>));true;352;false;false;194;false;true;227;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.directory = r1,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r13 = r0.directory,r0 (IndexWriter.mergeSegments));false;34;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c61 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;222;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r5 = r0.file,r0 (RAMOutputStream.flushBuffer));true;706;false;true;223;false;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isStored = varReplacer2048,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStored()> $z0 = r0.isStored,r0 (Field.isStored));false;336;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfos()> $r12 = r27.term,r27 (SegmentMerger.mergeTermInfos));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = varReplacer1426,r0 (SegmentMergeInfo.next));true;-1;true;true;224;false;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> $i1 = r0.bufferPosition,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.bufferPosition = i0,r0 (FastCharStream.refill));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.Lock$With: void <init>(org.apache.lucene.store.Lock,long)> r0.lock = r1,r0 (Lock$With.<init>));BackwardQuery: (<org.apache.lucene.store.Lock$With: java.lang.Object run()> $r3 = r0.lock,r0 (Lock$With.run));true;34;false;true;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.lang.String name()> $r1 = r0.name,r0 (Field.name));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.name = varReplacer2045,r0 (Field.<init>));true;554;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2050,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storeOffsetWithTermVector = varReplacer2008,r0 (Field.setStoreTermVector));true;292;false;true;204;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> $r6 = r0.heap,r0 (PriorityQueue.upHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;105;false;true;219;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.Term: void set(java.lang.String,java.lang.String)> r0.field = r1,r0 (Term.set));BackwardQuery: (<org.apache.lucene.index.Term: int hashCode()> $r1 = r0.field,r0 (Term.hashCode));false;24;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> r23.dataOffset = $l3,r23 (CompoundFileWriter.close));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void close()> $l2 = r25.dataOffset,r25 (CompoundFileWriter.close));true;827;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> r0.buffer = $r8,r0 (FastCharStream.refill));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: java.lang.String GetImage()> $r2 = r0.buffer,r0 (FastCharStream.GetImage));true;-1;true;false;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r6 = r0.termBuffer,r0 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.termBuffer = $r5,r0 (DocumentWriter.<init>));false;25;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> $i0 = r0.size,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;127;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i15 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));false;0;false;true;213;false;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: java.lang.String getMessage()> $z0 = r0.specialConstructor,r0 (ParseException.getMessage));BackwardQuery: (<org.apache.lucene.analysis.standard.ParseException: void <init>()> r0.specialConstructor = varReplacer3156,r0 (ParseException.<init>));true;-1;true;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void flush()> r0.bufferPosition = varReplacer2430,r0 (BufferedIndexOutput.flush));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i12 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));false;454;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.Token jj_consume_token(int)> r0.token = $r11,r0 (StandardTokenizer.jj_consume_token));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $r5 = r0.token,r0 (StandardTokenizer.jj_ntk));true;435;false;false;214;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTermInfo(org.apache.lucene.index.SegmentMergeInfo[],int)> $r7 = $r5.term,$r5 (SegmentMerger.mergeTermInfo));BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = varReplacer1426,r0 (SegmentMergeInfo.next));true;-1;true;true;232;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)> r0.ids = $r3,r0 (CompoundFileWriter.<init>));BackwardQuery: (<org.apache.lucene.index.CompoundFileWriter: void addFile(java.lang.String)> $r3 = r0.ids,r0 (CompoundFileWriter.addFile));true;46;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void addTermInternal(java.lang.String,int,int[],org.apache.lucene.index.TermVectorOffsetInfo[])> $r6 = r0.terms,r0 (TermVectorsWriter.addTermInternal));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.terms = $r23,r0 (TermVectorsWriter.<init>));false;23;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeVectors()> $r5 = r0.fieldInfos,r0 (SegmentMerger.mergeVectors));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int mergeFields()> r0.fieldInfos = $r3,r0 (SegmentMerger.mergeFields));false;13;false;true;199;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfo: void set(org.apache.lucene.index.TermInfo)> $l2 = r1.proxPointer,r1 (TermInfo.set));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.proxPointer = varReplacer1420,r0 (TermInfo.<init>));true;132;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.Token next()> $i5 = r0.jj_ntk,r0 (StandardTokenizer.next));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jj_ntk = varReplacer2442,r0 (StandardTokenizer.<init>));true;330;false;false;220;false;true;11;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> $i2 = r0.skipInterval,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int)> r0.skipInterval = varReplacer1401,r0 (TermInfosWriter.<init>));false;0;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.tvf = $r20,r0 (TermVectorsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $r32 = r0.tvf,r0 (TermVectorsWriter.writeField));false;0;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i2 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferPosition = $i6,r0 (BufferedIndexOutput.writeBytes));false;420;false;true;227;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void resetSkip()> $r3 = r0.proxOutput,r0 (SegmentMerger.resetSkip));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.proxOutput = varReplacer1467,r0 (SegmentMerger.<init>));false;10;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.skipBuffer = $r5,r0 (SegmentMerger.<init>));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: long writeSkip()> $r3 = r0.skipBuffer,r0 (SegmentMerger.writeSkip));false;26;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.curLexState = varReplacer2445,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $i22 = r0.curLexState,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c51 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;228;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentInfo: void <init>(java.lang.String,int,org.apache.lucene.store.Directory)> r0.dir = r2,r0 (SegmentInfo.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r12 = $r10.dir,$r10 (IndexWriter.flushRamSegments));true;873;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char BeginToken()> $i0 = r0.bufferPosition,r0 (FastCharStream.BeginToken));true;-1;true;false;222;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.isIndexed = z0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writeNorms(java.lang.String)> $z0 = r2.isIndexed,r2 (DocumentWriter.writeNorms));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r2 = r0.fieldsData,r0 (Field.readerValue));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer2023,r0 (Field.<init>));false;58;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.output = $r8,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r12 = r0.output,r0 (TermInfosWriter.add));false;0;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.fieldsData = varReplacer2023,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: java.io.Reader readerValue()> $r1 = r0.fieldsData,r0 (Field.readerValue));false;197;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void writeTerm(org.apache.lucene.index.Term)> r0.lastTerm = r1,r0 (TermInfosWriter.writeTerm));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r14 = r0.lastTerm,r0 (TermInfosWriter.add));false;24;false;true;221;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> r1.kind = $i1,r1 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizer: int jj_ntk()> $i0 = $r3.kind,$r3 (StandardTokenizer.jj_ntk));true;667;false;false;215;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $z1 = r50.storeTermVector,r50 (DocumentWriter.writePostings));BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.storeTermVector = z1,r0 (FieldInfo.<init>));false;14;false;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r4.length = $l12,$r4 (RAMOutputStream.flushBuffer));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void reset()> $r2.length = varReplacer2600,$r2 (RAMOutputStream.reset));true;-1;true;true;235;false;true;4;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()> $r3.counter = $i1,$r3 (IndexWriter.newSegmentName));BackwardQuery: (<org.apache.lucene.index.SegmentInfos: void <init>()> r0.counter = varReplacer1503,r0 (SegmentInfos.<init>));false;0;false;true;207;false;true;3;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.buffer = varReplacer2441,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void refill()> $r12 = r0.buffer,r0 (FastCharStream.refill));true;-1;true;false;267;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.omitNorms = varReplacer1462,r2 (FieldInfos.add));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $z1 = r1.omitNorms,r1 (SegmentMerger.mergeNorms));true;-1;true;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.omitNorms = varReplacer1462,r2 (FieldInfos.add));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void write(org.apache.lucene.store.IndexOutput)> $z4 = r2.omitNorms,r2 (FieldInfos.write));true;-1;true;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.size = varReplacer1400,r0 (PriorityQueue.initialize));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object top()> $i0 = r0.size,r0 (PriorityQueue.top));true;119;false;true;226;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: boolean isBinary()> $z0 = r0.isBinary,r0 (Field.isBinary));BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.isBinary = varReplacer2036,r0 (Field.<init>));false;37;false;true;-1;true;true;1;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> $i1 = r0.bufferPosition,r0 (FastCharStream.backup));true;-1;true;false;231;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $r24 = r0.lastTi,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.lastTi = $r5,r0 (TermInfosWriter.<init>));false;28;false;true;239;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $l24 = $r24.proxPointer,$r24 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfo: void <init>()> r0.proxPointer = varReplacer1420,r0 (TermInfo.<init>));false;25;false;true;246;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: int appendPostings(org.apache.lucene.index.SegmentMergeInfo[],int)> $r7 = r0.freqOutput,r0 (SegmentMerger.appendPostings));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeTerms()> r0.freqOutput = $r8,r0 (SegmentMerger.mergeTerms));false;13;false;true;242;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r7 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));true;-1;true;false;241;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> r0.bufferPosition = $i3,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));true;-1;true;false;245;false;true;185;false
BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.storeOffsetWithTermVector = varReplacer1465,r2 (FieldInfos.add));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(java.lang.String)> $z0 = r2.storeOffsetWithTermVector,r2 (TermVectorsWriter.openField));true;-1;true;true;-1;true;true;5;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.io.Reader,org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer1996,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStorePositionWithTermVector()> $z0 = r0.storePositionWithTermVector,r0 (Field.isStorePositionWithTermVector));true;344;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> $i3 = r0.size,r0 (PriorityQueue.pop));true;144;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void <init>(java.io.Reader)> r0.bufferPosition = varReplacer2438,r0 (FastCharStream.<init>));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getEndColumn()> $i0 = r0.bufferPosition,r0 (FastCharStream.getEndColumn));true;-1;true;false;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void add(org.apache.lucene.index.Term,org.apache.lucene.index.TermInfo)> $z1 = r0.isIndex,r0 (TermInfosWriter.add));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = z0,r0 (TermInfosWriter.initialize));false;25;false;true;219;false;true;0;false
BackwardQuery: (<org.apache.lucene.document.Field: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store,org.apache.lucene.document.Field$Index,org.apache.lucene.document.Field$TermVector)> r0.omitNorms = varReplacer2029,r0 (Field.<init>));BackwardQuery: (<org.apache.lucene.document.Field: boolean getOmitNorms()> $z0 = r0.omitNorms,r0 (Field.getOmitNorms));true;361;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $i0 = r0.bufferPosition,r0 (BufferedIndexOutput.getFilePointer));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));true;718;false;true;233;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.infoStream = varReplacer1493,r0 (IndexWriter.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void mergeSegments(int,int)> $r30 = r0.infoStream,r0 (IndexWriter.mergeSegments));false;35;false;true;225;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: void <init>(org.apache.lucene.index.IndexWriter,org.apache.lucene.store.Lock,long,java.util.Vector)> r0.val$segmentsToDelete = r3,r0 (IndexWriter$4.<init>));BackwardQuery: (<org.apache.lucene.index.IndexWriter$4: java.lang.Object doBody()> $r5 = r0.val$segmentsToDelete,r0 (IndexWriter$4.doBody));true;13;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> r0.bufferPosition = $i3,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: int getEndColumn()> $i0 = r0.bufferPosition,r0 (FastCharStream.getEndColumn));true;-1;true;false;232;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.offsets = $r5,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r21 = r4.offsets,r4 (DocumentWriter.addPosition));false;113;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void writeField()> $i12 = r1.freq,r1 (TermVectorsWriter.writeField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter$TVTerm: void <init>()> r0.freq = varReplacer1383,r0 (TermVectorsWriter$TVTerm.<init>));true;638;false;true;-1;true;true;6;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = varReplacer1426,r0 (SegmentMergeInfo.next));BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $r6 = r3.term,r3 (SegmentMergeQueue.lessThan));true;-1;true;true;226;false;true;3;false
BackwardQuery: (<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String,boolean)> r0.field = $r4,r0 (Term.<init>));BackwardQuery: (<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)> $r2 = r1.field,r1 (Term.compareTo));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.Token: void <init>(java.lang.String,int,int,java.lang.String)> r0.type = r2,r0 (Token.<init>));BackwardQuery: (<org.apache.lucene.analysis.Token: java.lang.String type()> $r1 = r0.type,r0 (Token.type));true;193;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.IndexWriter: void flushRamSegments()> $r13 = r0.segmentInfos,r0 (IndexWriter.flushRamSegments));BackwardQuery: (<org.apache.lucene.index.IndexWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,boolean,boolean)> r0.segmentInfos = $r7,r0 (IndexWriter.<init>));true;78;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void mergeNorms()> $r16 = r0.readers,r0 (SegmentMerger.mergeNorms));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;1;false;true;216;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i1 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3164,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $i142 = r0.jjnewStateCnt,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void jjCheckNAdd(int)> r0.jjnewStateCnt = $i4,r0 (StandardTokenizerTokenManager.jjCheckNAdd));true;-1;true;false;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> $i2 = r0.bufferPosition,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void <init>()> r0.bufferPosition = varReplacer1473,r0 (BufferedIndexOutput.<init>));true;654;false;true;224;false;true;2;false
BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> r0.term = r1,r0 (Posting.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void quickSort(org.apache.lucene.index.Posting[],int,int)> $r18 = $r17.term,$r17 (DocumentWriter.quickSort));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void closeReaders()> $r2 = r0.readers,r0 (SegmentMerger.closeReaders));BackwardQuery: (<org.apache.lucene.index.SegmentMerger: void <init>(org.apache.lucene.index.IndexWriter,java.lang.String)> r0.readers = $r3,r0 (SegmentMerger.<init>));false;19;false;true;274;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $i0 = r0.jjmatchedKind,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.jjmatchedKind = varReplacer3165,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;239;false;true;0;false
BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void <init>(org.apache.lucene.store.RAMFile)> r0.file = r1,r0 (RAMOutputStream.<init>));BackwardQuery: (<org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)> $r4 = r0.file,r0 (RAMOutputStream.flushBuffer));true;711;false;true;226;false;true;1;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> i0 = r0.size,r0 (PriorityQueue.upHeap));true;116;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c24 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;218;false;true;1;false
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> r0.bufferStart = $l11,r0 (BufferedIndexOutput.writeBytes));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: long getFilePointer()> $l2 = r0.bufferStart,r0 (BufferedIndexOutput.getFilePointer));false;13;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void openField(int,boolean,boolean)> r0.currentField = $r1,r0 (TermVectorsWriter.openField));BackwardQuery: (<org.apache.lucene.index.TermVectorsWriter: void closeField()> $r1 = r0.currentField,r0 (TermVectorsWriter.closeField));false;22;false;true;211;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)> r4.offsets = r20,r4 (DocumentWriter.addPosition));BackwardQuery: (<org.apache.lucene.index.Posting: void <init>(org.apache.lucene.index.Term,int,org.apache.lucene.index.TermVectorOffsetInfo)> $r6 = r0.offsets,r0 (Posting.<init>));false;25;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.SegmentMergeInfo: boolean next()> r0.term = $r3,r0 (SegmentMergeInfo.next));BackwardQuery: (<org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)> $r5 = r4.term,r4 (SegmentMergeQueue.lessThan));true;-1;true;true;231;false;true;3;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)> $r18 = r0.fieldLengths,r0 (DocumentWriter.invertDocument));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void addDocument(java.lang.String,org.apache.lucene.document.Document)> r0.fieldLengths = $r17,r0 (DocumentWriter.addDocument));false;19;false;true;236;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void put(java.lang.Object)> r0.size = $i1,r0 (PriorityQueue.put));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()> r0.size = $i4,r0 (PriorityQueue.pop));true;131;false;true;223;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $r5 = r0.jjstateSet,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.jjstateSet = $r4,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;238;false;true;-1;true
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token jjFillToken()> $r8 = r0.input_stream,r0 (StandardTokenizerTokenManager.jjFillToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;227;false;true;-1;true
BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeByte(byte)> r0.bufferPosition = $i3,r0 (BufferedIndexOutput.writeByte));BackwardQuery: (<org.apache.lucene.store.BufferedIndexOutput: void writeBytes(byte[],int)> $i12 = r0.bufferPosition,r0 (BufferedIndexOutput.writeBytes));false;447;false;true;220;false;true;0;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void upHeap()> $r4 = r0.heap,r0 (PriorityQueue.upHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;96;false;true;213;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.FieldInfo: void <init>(java.lang.String,boolean,int,boolean,boolean,boolean,boolean)> r0.isIndexed = z0,r0 (FieldInfo.<init>));BackwardQuery: (<org.apache.lucene.index.FieldInfos: void add(java.lang.String,boolean,boolean,boolean,boolean,boolean)> r2.isIndexed = varReplacer1464,r2 (FieldInfos.add));true;-1;true;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexWriter)> r0.directory = r1,r0 (DocumentWriter.<init>));BackwardQuery: (<org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)> $r8 = r0.directory,r0 (DocumentWriter.writePostings));false;21;false;true;217;false;true;0;false
BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos)> r0.indexStream = $r13,r0 (FieldsWriter.<init>));BackwardQuery: (<org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)> $r3 = r0.indexStream,r0 (FieldsWriter.addDocument));false;0;false;true;218;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> $r5 = r0.input_stream,r0 (StandardTokenizerTokenManager.getNextToken));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: void <init>(org.apache.lucene.analysis.standard.CharStream)> r0.input_stream = r1,r0 (StandardTokenizerTokenManager.<init>));true;-1;true;false;215;false;true;-1;true
BackwardQuery: (<org.apache.lucene.document.Field: void setStoreTermVector(org.apache.lucene.document.Field$TermVector)> r0.storePositionWithTermVector = varReplacer2016,r0 (Field.setStoreTermVector));BackwardQuery: (<org.apache.lucene.document.Field: boolean isStorePositionWithTermVector()> $z0 = r0.storePositionWithTermVector,r0 (Field.isStorePositionWithTermVector));true;390;false;true;-1;true;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: int jjMoveNfa_0(int,int)> $c48 = r0.curChar,r0 (StandardTokenizerTokenManager.jjMoveNfa_0));BackwardQuery: (<org.apache.lucene.analysis.standard.StandardTokenizerTokenManager: org.apache.lucene.analysis.standard.Token getNextToken()> r0.curChar = $c0,r0 (StandardTokenizerTokenManager.getNextToken));true;-1;true;false;227;false;true;1;false
BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void downHeap()> $r10 = r0.heap,r0 (PriorityQueue.downHeap));BackwardQuery: (<org.apache.lucene.util.PriorityQueue: void initialize(int)> r0.heap = $r1,r0 (PriorityQueue.initialize));true;119;false;true;224;false;true;1;false
BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void initialize(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = z0,r0 (TermInfosWriter.initialize));BackwardQuery: (<org.apache.lucene.index.TermInfosWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,int,boolean)> r0.isIndex = varReplacer1416,r0 (TermInfosWriter.<init>));true;24;false;true;224;false;true;0;false
BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: char readChar()> r0.bufferPosition = $i3,r0 (FastCharStream.readChar));BackwardQuery: (<org.apache.lucene.analysis.standard.FastCharStream: void backup(int)> $i1 = r0.bufferPosition,r0 (FastCharStream.backup));true;-1;true;false;232;false;true;0;false
