Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;VisitedMethod;ReachableMethods;CallRecursion;FieldLoop;MaxAccessPath;MaxMemory
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> r138.iterator(),r143 (MethodEditor.commit) Value: virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>());r143 = virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;1504;500;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> r138.iterator(),r143 (MethodEditor.commit) Value: virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>());r143 = virtualinvoke r138.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;1505;500;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r12.iterator(),r47 (SSA.rename) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r47 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;158;144;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r12.iterator(),r47 (SSA.rename) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r47 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;159;144;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueFolder: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r4.iterator(),r2 (ValueFolder.visitPhiJoinStmt) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.trans.ValueFolder;true;false;51220;264;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueFolder: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r4.iterator(),r2 (ValueFolder.visitPhiJoinStmt) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.trans.ValueFolder;true;false;51221;264;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> r4.iterator(),r7 (Liveness.liveOut) Value: interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>());r7 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;324;417;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> r4.iterator(),r7 (Liveness.liveOut) Value: interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>());r7 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;326;417;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r14.iterator(),r78 (VerifyCFG.visitBlock) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r78 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;3596;201;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r14.iterator(),r78 (VerifyCFG.visitBlock) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r78 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;3597;201;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> r48.iterator(),r4 (FlowGraph.setBlockTypes) Value: interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;4375;323;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> r48.iterator(),r4 (FlowGraph.setBlockTypes) Value: interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke r48.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;4376;323;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r4.iterator(),r26 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;57325;118;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r4.iterator(),r26 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;57326;118;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()> $r23.iterator(),r6 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;false;false;132;252;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()> $r23.iterator(),r6 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;false;false;133;252;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1: void visitComponent(java.util.List)> r1.iterator(),r2 (InductionVarAnalyzer$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1;false;false;51963;129;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1: void visitComponent(java.util.List)> r1.iterator(),r2 (InductionVarAnalyzer$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer$1;false;false;51964;129;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r6.iterator(),r74 (DominatorTree.buildTree) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r74 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;133;276;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r6.iterator(),r74 (DominatorTree.buildTree) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r74 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;134;276;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r138.iterator(),r151 (FlowGraph.peelLoops) Value: interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>());r151 = interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1440;753;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r138.iterator(),r151 (FlowGraph.peelLoops) Value: interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>());r151 = interfaceinvoke r138.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1441;753;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r15.iterator(),r62 (SSAPRE.rename) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r62 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;29;61;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r15.iterator(),r62 (SSAPRE.rename) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r62 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;29;61;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r91.iterator(),r135 (FlowGraph.peelLoops) Value: interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>());r135 = interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3929;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r91.iterator(),r135 (FlowGraph.peelLoops) Value: interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>());r135 = interfaceinvoke $r91.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3931;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.ClassInfo)> $r15.iterator(),r3 (CachingBloatContext.release) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.ClassInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;988;162;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.ClassInfo)> $r15.iterator(),r3 (CachingBloatContext.release) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.ClassInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;989;162;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)> $r61.iterator(),r5 (SSAPRE.search) Value: interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;45278;533;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)> $r61.iterator(),r5 (SSAPRE.search) Value: interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke $r61.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;45278;533;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$7: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r8.iterator(),r2 (CodeGenerator$7.visitPhiJoinStmt) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$7: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$7;false;false;3546;225;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$7: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r8.iterator(),r2 (CodeGenerator$7.visitPhiJoinStmt) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$7: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$7;false;false;3550;225;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r10.iterator(),r3 (SSAPRE.enqueueParents) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;95;78;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r10.iterator(),r3 (SSAPRE.enqueueParents) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;95;78;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r37.iterator(),r164 (FlowGraph.peelLoops) Value: interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>());r164 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;669;757;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r37.iterator(),r164 (FlowGraph.peelLoops) Value: interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>());r164 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;669;757;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r4.iterator(),r2 (SSA$1.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.ssa.SSA$1;false;false;46281;69;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r4.iterator(),r2 (SSA$1.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.ssa.SSA$1;false;false;46282;69;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])> $r7.iterator(),r135 (Main.main) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r135 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;true;false;62;106;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])> $r7.iterator(),r135 (Main.main) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r135 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;true;false;63;106;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void verifyTargets(EDU.purdue.cs.bloat.cfg.Block,java.util.Set)> r2.iterator(),r3 (VerifyCFG.verifyTargets) Value: interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void verifyTargets(EDU.purdue.cs.bloat.cfg.Block,java.util.Set)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;3642;143;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void verifyTargets(EDU.purdue.cs.bloat.cfg.Block,java.util.Set)> r2.iterator(),r3 (VerifyCFG.verifyTargets) Value: interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void verifyTargets(EDU.purdue.cs.bloat.cfg.Block,java.util.Set)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;3642;143;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void insertEdgesToSinkDFS(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet,java.util.BitSet,java.util.Map,boolean)> $r6.iterator(),r5 (DominatorTree.insertEdgesToSinkDFS) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void insertEdgesToSinkDFS(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet,java.util.BitSet,java.util.Map,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;127;243;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void insertEdgesToSinkDFS(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet,java.util.BitSet,java.util.Map,boolean)> $r6.iterator(),r5 (DominatorTree.insertEdgesToSinkDFS) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void insertEdgesToSinkDFS(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet,java.util.BitSet,java.util.Map,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;127;243;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r4.iterator(),r35 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r35 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;30;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r4.iterator(),r35 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r35 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;30;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: java.util.Collection idf(java.util.Collection,boolean)> r13.iterator(),r6 (FlowGraph.idf) Value: interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: java.util.Collection idf(java.util.Collection,boolean)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;68;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: java.util.Collection idf(java.util.Collection,boolean)> r13.iterator(),r6 (FlowGraph.idf) Value: interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: java.util.Collection idf(java.util.Collection,boolean)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;68;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r11.iterator(),r30 (SSAPRE.placePhis) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;49;170;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r11.iterator(),r30 (SSAPRE.placePhis) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;50;170;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r33.iterator(),r159 (FlowGraph.peelLoops) Value: interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>());r159 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;1491;761;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r33.iterator(),r159 (FlowGraph.peelLoops) Value: interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>());r159 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;1492;761;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r2.iterator(),r5 (SSAPRE.rename) Value: virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>());r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37225;355;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r2.iterator(),r5 (SSAPRE.rename) Value: virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>());r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37226;355;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> $r31.iterator(),r93 (Liveness.liveOut) Value: interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>());r93 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;366;417;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> $r31.iterator(),r93 (Liveness.liveOut) Value: interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>());r93 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;367;417;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> r57.iterator(),r59 (SSAGraph$5.visitNode) Value: virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>());r59 = virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;51125;151;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> r57.iterator(),r59 (SSAGraph$5.visitNode) Value: virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>());r59 = virtualinvoke r57.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;51125;151;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r20.iterator(),r6 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;114627;166;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r20.iterator(),r6 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;114628;166;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: EDU.purdue.cs.bloat.editor.Label firstBlock()> $r4.iterator(),r1 (MethodEditor.firstBlock) Value: virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>());r1 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: EDU.purdue.cs.bloat.editor.Label firstBlock()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;154;115;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: EDU.purdue.cs.bloat.editor.Label firstBlock()> $r4.iterator(),r1 (MethodEditor.firstBlock) Value: virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>());r1 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: EDU.purdue.cs.bloat.editor.Label firstBlock()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;155;115;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitNode(EDU.purdue.cs.bloat.tree.Node)> r2.iterator(),r3 (VerifyCFG.visitNode) Value: virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>());r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;38088;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitNode(EDU.purdue.cs.bloat.tree.Node)> r2.iterator(),r3 (VerifyCFG.visitNode) Value: virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>());r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;38094;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r5.iterator(),r64 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r64 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;128;413;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r5.iterator(),r64 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r64 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;129;413;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)> r68.iterator(),r69 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>());r69 = interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;true;false;138;419;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)> r68.iterator(),r69 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>());r69 = interfaceinvoke r68.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;true;false;139;419;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r5.iterator(),$r26 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());$r26 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;97;292;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r5.iterator(),$r26 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());$r26 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;98;292;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness$2: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r13.iterator(),r3 (Liveness$2.visitPhiJoinStmt) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$2: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.Liveness$2;false;false;4708;216;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness$2: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r13.iterator(),r3 (Liveness$2.visitPhiJoinStmt) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$2: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.codegen.Liveness$2;false;false;4708;216;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.Tree: void initLocals(java.util.Collection)> r1.iterator(),r3 (Tree.initLocals) Value: interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree: void initLocals(java.util.Collection)>;EDU.purdue.cs.bloat.tree.Tree;false;false;60;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.Tree: void initLocals(java.util.Collection)> r1.iterator(),r3 (Tree.initLocals) Value: interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree: void initLocals(java.util.Collection)>;EDU.purdue.cs.bloat.tree.Tree;false;false;61;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r11.iterator(),r40 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>());r40 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;150;89;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r11.iterator(),r40 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>());r40 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;150;89;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.cfg.Block isMu(EDU.purdue.cs.bloat.tree.PhiJoinStmt,EDU.purdue.cs.bloat.cfg.FlowGraph)> $r9.iterator(),r3 (InductionVarAnalyzer.isMu) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.cfg.Block isMu(EDU.purdue.cs.bloat.tree.PhiJoinStmt,EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;3023;211;3;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.cfg.Block isMu(EDU.purdue.cs.bloat.tree.PhiJoinStmt,EDU.purdue.cs.bloat.cfg.FlowGraph)> $r9.iterator(),r3 (InductionVarAnalyzer.isMu) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.cfg.Block isMu(EDU.purdue.cs.bloat.tree.PhiJoinStmt,EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;3024;211;3;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r29.iterator(),r40 (SSA.rename) Value: interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>());r40 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;64;242;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r29.iterator(),r40 (SSA.rename) Value: interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>());r40 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;65;242;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void replaceJoinPhis(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r4.iterator(),r2 (CodeGenerator.replaceJoinPhis) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void replaceJoinPhis(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;82;116;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void replaceJoinPhis(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r4.iterator(),r2 (CodeGenerator.replaceJoinPhis) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void replaceJoinPhis(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;82;116;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()> r5.iterator(),r25 (SSAPRE.beginTry) Value: virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>());r25 = virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;49;154;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()> r5.iterator(),r25 (SSAPRE.beginTry) Value: virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>());r25 = virtualinvoke r5.<java.util.HashSet: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;49;154;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)> $r62.iterator(),r15 (FlowGraph.buildTrees) Value: interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>());r15 = interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;52;212;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)> $r62.iterator(),r15 (FlowGraph.buildTrees) Value: interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>());r15 = interfaceinvoke $r62.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;52;212;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()> $r9.iterator(),r2 (FlowGraph.insertProtectedRegionStores) Value: interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;63;136;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()> $r9.iterator(),r2 (FlowGraph.insertProtectedRegionStores) Value: interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;64;136;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueFolding$1: void visitComponent(java.util.List)> r1.iterator(),r3 (ValueFolding$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolding$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueFolding$1;false;false;38080;163;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueFolding$1: void visitComponent(java.util.List)> r1.iterator(),r3 (ValueFolding$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolding$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueFolding$1;false;false;38080;163;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r22.iterator(),r112 (CachingBloatContext.toString) Value: interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>());r112 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;266;118;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r22.iterator(),r112 (CachingBloatContext.toString) Value: interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>());r112 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;266;118;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void start(EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.editor.Type)> $r39.iterator(),r40 (TypeInferenceVisitor.start) Value: interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>());r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void start(EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;2969;109;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void start(EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.editor.Type)> $r39.iterator(),r40 (TypeInferenceVisitor.start) Value: interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>());r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void start(EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;2970;109;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)> r1.iterator(),r40 (Peephole.removeUnreachable) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r40 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;306;374;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)> r1.iterator(),r40 (Peephole.removeUnreachable) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r40 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;307;374;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r3.iterator(),r28 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r28 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;53948;125;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r3.iterator(),r28 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r28 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;53949;125;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r85.iterator(),r148 (FlowGraph.peelLoops) Value: interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>());r148 = interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3679;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r85.iterator(),r148 (FlowGraph.peelLoops) Value: interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>());r148 = interfaceinvoke $r85.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3680;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void number(EDU.purdue.cs.bloat.util.GraphNode,java.util.Set)> $r7.iterator(),r3 (Graph.number) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void number(EDU.purdue.cs.bloat.util.GraphNode,java.util.Set)>;EDU.purdue.cs.bloat.util.Graph;false;false;3703;168;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void number(EDU.purdue.cs.bloat.util.GraphNode,java.util.Set)> $r7.iterator(),r3 (Graph.number) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void number(EDU.purdue.cs.bloat.util.GraphNode,java.util.Set)>;EDU.purdue.cs.bloat.util.Graph;false;false;3704;168;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r46.iterator(),r59 (VerifyCFG.visitBlock) Value: interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;4657;309;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r46.iterator(),r59 (VerifyCFG.visitBlock) Value: interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;4658;309;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> r243.iterator(),r244 (CodeArray.buildCode) Value: interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>());r244 = interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;1816;800;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> r243.iterator(),r244 (CodeArray.buildCode) Value: interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>());r244 = interfaceinvoke r243.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;1817;800;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> $r15.iterator(),r53 (SSAGraph$5.visitNode) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());r53 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;5013;256;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> $r15.iterator(),r53 (SSAGraph$5.visitNode) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());r53 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;5013;256;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r16.iterator(),r61 (SSAPRE.codeMotion) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r61 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;78;114;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r16.iterator(),r61 (SSAPRE.codeMotion) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r61 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;78;114;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph: void makeEquiv(EDU.purdue.cs.bloat.tree.Node,EDU.purdue.cs.bloat.tree.Node)> r4.iterator(),r5 (SSAGraph.makeEquiv) Value: interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void makeEquiv(EDU.purdue.cs.bloat.tree.Node,EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;3335;100;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph: void makeEquiv(EDU.purdue.cs.bloat.tree.Node,EDU.purdue.cs.bloat.tree.Node)> r4.iterator(),r5 (SSAGraph.makeEquiv) Value: interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void makeEquiv(EDU.purdue.cs.bloat.tree.Node,EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;3336;100;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r13.iterator(),r2 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;166407;265;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r13.iterator(),r2 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;166408;265;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)> $r20.iterator(),r34 (FlowGraph.removeBlock) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r34 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;37442;59;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)> $r20.iterator(),r34 (FlowGraph.removeBlock) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r34 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;37442;59;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()> $r12.iterator(),r3 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;70;196;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()> $r12.iterator(),r3 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;71;196;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)> r1.iterator(),r53 (Peephole.removeUnreachable) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r53 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;210;211;9;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)> r1.iterator(),r53 (Peephole.removeUnreachable) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r53 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;210;211;9;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])> r123.iterator(),r133 (Main.main) Value: interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>());r133 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;60;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])> r123.iterator(),r133 (Main.main) Value: interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>());r133 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;60;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r16.iterator(),r3 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;47243;152;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r16.iterator(),r3 (CodeGenerator.visitFlowGraph) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;47244;152;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> $r46.iterator(),r55 (SSAGraph$5.visitNode) Value: interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>());r55 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;43862;250;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> $r46.iterator(),r55 (SSAGraph$5.visitNode) Value: interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>());r55 = interfaceinvoke $r46.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;false;false;43863;250;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void visitForceChildren(EDU.purdue.cs.bloat.tree.TreeVisitor)> $r4.iterator(),r2 (PhiJoinStmt.visitForceChildren) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void visitForceChildren(EDU.purdue.cs.bloat.tree.TreeVisitor)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;true;false;48895;184;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void visitForceChildren(EDU.purdue.cs.bloat.tree.TreeVisitor)> $r4.iterator(),r2 (PhiJoinStmt.visitForceChildren) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void visitForceChildren(EDU.purdue.cs.bloat.tree.TreeVisitor)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;true;false;48896;184;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.PersistentBloatContext: void addClasses(java.util.Collection)> r1.iterator(),r2 (PersistentBloatContext.addClasses) Value: interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.PersistentBloatContext: void addClasses(java.util.Collection)>;EDU.purdue.cs.bloat.context.PersistentBloatContext;false;false;56;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.PersistentBloatContext: void addClasses(java.util.Collection)> r1.iterator(),r2 (PersistentBloatContext.addClasses) Value: interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.PersistentBloatContext: void addClasses(java.util.Collection)>;EDU.purdue.cs.bloat.context.PersistentBloatContext;false;false;56;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r11.iterator(),r5 (SSAPRE.downSafety) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;52;180;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r11.iterator(),r5 (SSAPRE.downSafety) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;52;180;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> r1.iterator(),r20 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;70;110;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> r1.iterator(),r20 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;71;110;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)> $r6.iterator(),$r7 (SSAPRE$12.<init>) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;true;false;82190;701;10;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)> $r6.iterator(),$r7 (SSAPRE$12.<init>) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;true;false;82192;701;10;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)> $r12.iterator(),r26 (MethodEditor.print) Value: virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>());r26 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;112;115;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)> $r12.iterator(),r26 (MethodEditor.print) Value: virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>());r26 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;113;115;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r47.iterator(),r175 (FlowGraph.peelLoops) Value: interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>());r175 = interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3409;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r47.iterator(),r175 (FlowGraph.peelLoops) Value: interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>());r175 = interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3410;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r11.iterator(),r63 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>());r63 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;34778;104;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r11.iterator(),r63 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>());r63 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;34778;104;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)> $r8.iterator(),r3 (CodeGenerator$5.visitPhiCatchStmt) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;33876;239;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)> $r8.iterator(),r3 (CodeGenerator$5.visitPhiCatchStmt) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;33877;239;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)> $r5.iterator(),r2 (PrintVisitor.visitPhiCatchStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;50543;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)> $r5.iterator(),r2 (PrintVisitor.visitPhiCatchStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiCatchStmt(EDU.purdue.cs.bloat.tree.PhiCatchStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;50543;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r14.iterator(),r42 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r42 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3933;177;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r14.iterator(),r42 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r42 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3933;177;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.ImmutableIterator: void <init>(java.util.Collection)> $r2.iterator(),$r3 (ImmutableIterator.<init>) Value: virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>());$r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.ImmutableIterator: void <init>(java.util.Collection)>;EDU.purdue.cs.bloat.util.ImmutableIterator;true;false;4794;3812;12;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.ImmutableIterator: void <init>(java.util.Collection)> $r2.iterator(),$r3 (ImmutableIterator.<init>) Value: virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>());$r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.ImmutableIterator: void <init>(java.util.Collection)>;EDU.purdue.cs.bloat.util.ImmutableIterator;true;false;4800;3812;12;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r28.iterator(),r175 (RegisterAllocator.<init>) Value: interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>());r175 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;111;425;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r28.iterator(),r175 (RegisterAllocator.<init>) Value: interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>());r175 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;112;425;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void allocReturnAddresses(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.RegisterAllocator)> $r6.iterator(),r3 (CodeGenerator.allocReturnAddresses) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void allocReturnAddresses(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.RegisterAllocator)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;true;false;34;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void allocReturnAddresses(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.RegisterAllocator)> $r6.iterator(),r3 (CodeGenerator.allocReturnAddresses) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void allocReturnAddresses(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.RegisterAllocator)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;true;false;34;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$EdgeSet: java.util.Iterator iterator()> $r3.iterator(),r1 (Graph$EdgeSet.iterator) Value: interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;true;false;457287;10984;70;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$EdgeSet: java.util.Iterator iterator()> $r3.iterator(),r1 (Graph$EdgeSet.iterator) Value: interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;true;false;457321;10984;70;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r15.iterator(),r32 (SSA.rename) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;97;242;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r15.iterator(),r32 (SSA.rename) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;98;242;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r10.iterator(),r52 (SSAPRE.codeMotion) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r52 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;105;257;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r10.iterator(),r52 (SSAPRE.codeMotion) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r52 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;106;257;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)> $r14.iterator(),r30 (FlowGraph.removeBlock) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;510;172;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)> $r14.iterator(),r30 (FlowGraph.removeBlock) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;510;172;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void <init>(EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r8.iterator(),r3 (PhiJoinStmt.<init>) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void <init>(EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;false;false;66;165;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void <init>(EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r8.iterator(),r3 (PhiJoinStmt.<init>) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PhiJoinStmt: void <init>(EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.tree.PhiJoinStmt;false;false;67;165;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r18.iterator(),r33 (SSAPRE.placePhis) Value: interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>());r33 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;50;124;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r18.iterator(),r33 (SSAPRE.placePhis) Value: interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>());r33 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;51;124;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> $r12.iterator(),r3 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;74;228;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> $r12.iterator(),r3 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;74;228;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r25.iterator(),r35 (SSAPRE.placePhis) Value: interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>());r35 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;86;182;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r25.iterator(),r35 (SSAPRE.placePhis) Value: interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>());r35 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;87;182;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r12.iterator(),r5 (SSAPRE.computeCanBeAvail) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;71;194;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r12.iterator(),r5 (SSAPRE.computeCanBeAvail) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;71;194;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r6.iterator(),r2 (VerifyCFG.visitFlowGraph) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;3634;147;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r6.iterator(),r2 (VerifyCFG.visitFlowGraph) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;true;false;3634;147;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r5.iterator(),r43 (SSA.search) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r43 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;63;204;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r5.iterator(),r43 (SSA.search) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r43 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;64;204;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)> $r11.iterator(),r6 (FlowGraph.addHandlerEdges) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;47;183;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)> $r11.iterator(),r6 (FlowGraph.addHandlerEdges) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;47;183;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void addCatchPhiOperands(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr)> $r8.iterator(),r3 (SSA.addCatchPhiOperands) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void addCatchPhiOperands(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;45;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void addCatchPhiOperands(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr)> $r8.iterator(),r3 (SSA.addCatchPhiOperands) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void addCatchPhiOperands(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;45;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r11.iterator(),r2 (SSAPRE.computeLater) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60;192;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r11.iterator(),r2 (SSAPRE.computeLater) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60;192;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r202.iterator(),r208 (CodeArray.buildCode) Value: interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>());r208 = interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;5621;1254;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r202.iterator(),r208 (CodeArray.buildCode) Value: interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>());r208 = interfaceinvoke $r202.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;5622;1254;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r14.iterator(),r86 (Liveness.computeIntersections) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r86 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;119;407;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r14.iterator(),r86 (Liveness.computeIntersections) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r86 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;120;407;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r41.iterator(),r4 (SSA.search) Value: interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;101;231;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r41.iterator(),r4 (SSA.search) Value: interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r41.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;101;231;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)> $r12.iterator(),r4 (Peephole.removeUnreachable) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;223;323;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)> $r12.iterator(),r4 (Peephole.removeUnreachable) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.Peephole: void removeUnreachable(EDU.purdue.cs.bloat.editor.MethodEditor,java.util.List)>;EDU.purdue.cs.bloat.trans.Peephole;false;false;224;323;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r115.iterator(),r126 (FlowGraph.peelLoops) Value: interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>());r126 = interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3348;935;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r115.iterator(),r126 (FlowGraph.peelLoops) Value: interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>());r126 = interfaceinvoke $r115.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3349;935;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtStores(EDU.purdue.cs.bloat.cfg.Block,java.util.HashSet,EDU.purdue.cs.bloat.util.ResizeableArrayList)> $r10.iterator(),r21 (FlowGraph.insertProtStores) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r21 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtStores(EDU.purdue.cs.bloat.cfg.Block,java.util.HashSet,EDU.purdue.cs.bloat.util.ResizeableArrayList)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;44;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtStores(EDU.purdue.cs.bloat.cfg.Block,java.util.HashSet,EDU.purdue.cs.bloat.util.ResizeableArrayList)> $r10.iterator(),r21 (FlowGraph.insertProtStores) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r21 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtStores(EDU.purdue.cs.bloat.cfg.Block,java.util.HashSet,EDU.purdue.cs.bloat.util.ResizeableArrayList)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;44;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r7.iterator(),r38 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;135;210;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r7.iterator(),r38 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;136;210;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r51.iterator(),r58 (SSAPRE.rename) Value: interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>());r58 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;36666;325;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r51.iterator(),r58 (SSAPRE.rename) Value: interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>());r58 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;36667;325;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r20.iterator(),r110 (CachingBloatContext.toString) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r110 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;468;157;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r20.iterator(),r110 (CachingBloatContext.toString) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r110 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;468;157;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.ClassHierarchy: EDU.purdue.cs.bloat.editor.Type superclass(EDU.purdue.cs.bloat.editor.Type)> r3.iterator(),r4 (ClassHierarchy.superclass) Value: interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: EDU.purdue.cs.bloat.editor.Type superclass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;3394;155;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.ClassHierarchy: EDU.purdue.cs.bloat.editor.Type superclass(EDU.purdue.cs.bloat.editor.Type)> r3.iterator(),r4 (ClassHierarchy.superclass) Value: interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: EDU.purdue.cs.bloat.editor.Type superclass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;3394;155;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r14.iterator(),r104 (CachingBloatContext.toString) Value: interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>());r104 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;278;274;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r14.iterator(),r104 (CachingBloatContext.toString) Value: interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>());r104 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;278;274;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.FieldInfo)> $r20.iterator(),r4 (CachingBloatContext.release) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.FieldInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;798;110;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.FieldInfo)> $r20.iterator(),r4 (CachingBloatContext.release) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.FieldInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;799;110;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()> r1.iterator(),r26 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;77;142;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()> r1.iterator(),r26 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;77;142;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void buildLists()> $r7.iterator(),r17 (Graph.buildLists) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r17 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;231;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void buildLists()> $r7.iterator(),r17 (Graph.buildLists) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r17 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;231;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r59.iterator(),r100 (Liveness.computeIntersections) Value: interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>());r100 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;129;447;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r59.iterator(),r100 (Liveness.computeIntersections) Value: interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>());r100 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;129;447;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetDownSafe(EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)> $r8.iterator(),r5 (SSAPRE.resetDownSafe) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetDownSafe(EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;54;154;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetDownSafe(EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)> $r8.iterator(),r5 (SSAPRE.resetDownSafe) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetDownSafe(EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;54;154;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r31.iterator(),r156 (FlowGraph.peelLoops) Value: interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>());r156 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3331;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r31.iterator(),r156 (FlowGraph.peelLoops) Value: interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>());r156 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3332;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()> $r10.iterator(),r2 (SSAPRE.beginTry) Value: interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;66;148;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()> $r10.iterator(),r2 (SSAPRE.beginTry) Value: interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;67;148;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()> $r16.iterator(),r6 (FlowGraph.insertProtectedRegionStores) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;190;142;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()> $r16.iterator(),r6 (FlowGraph.insertProtectedRegionStores) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void insertProtectedRegionStores()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;191;142;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> $r22.iterator(),r5 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;59;267;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> $r22.iterator(),r5 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;59;267;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)> $r16.iterator(),r32 (FlowGraph.removeBlock) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;260;152;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)> $r16.iterator(),r32 (FlowGraph.removeBlock) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;260;152;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> $r40.iterator(),r47 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>());r47 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;87;373;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> $r40.iterator(),r47 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>());r47 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;87;373;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)> $r14.iterator(),r24 (FlowGraph.addHandlerEdges) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r24 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;60;239;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)> $r14.iterator(),r24 (FlowGraph.addHandlerEdges) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r24 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void addHandlerEdges(EDU.purdue.cs.bloat.cfg.Block,java.util.Map,java.util.Map,EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;60;239;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r12.iterator(),r130 (MethodEditor.commit) Value: virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>());r130 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;1079;674;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r12.iterator(),r130 (MethodEditor.commit) Value: virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>());r130 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;1080;674;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r139.iterator(),r145 (FlowGraph.peelLoops) Value: interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>());r145 = interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1218;753;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r139.iterator(),r145 (FlowGraph.peelLoops) Value: interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>());r145 = interfaceinvoke r139.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1219;753;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r14.iterator(),r30 (SSA.placePhiFunctions) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;65;132;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r14.iterator(),r30 (SSA.placePhiFunctions) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;66;132;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.MethodInfo)> $r16.iterator(),r4 (CachingBloatContext.release) Value: interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.MethodInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;937;110;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.MethodInfo)> $r16.iterator(),r4 (CachingBloatContext.release) Value: interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: void release(EDU.purdue.cs.bloat.reflect.MethodInfo)>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;937;110;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.DeadCodeElimination$5: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r4.iterator(),r2 (DeadCodeElimination$5.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.DeadCodeElimination$5: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.trans.DeadCodeElimination$5;false;false;38442;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.DeadCodeElimination$5: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r4.iterator(),r2 (DeadCodeElimination$5.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.DeadCodeElimination$5: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.trans.DeadCodeElimination$5;false;false;38442;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r25.iterator(),r231 (CodeArray.buildCode) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r231 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;4991;831;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r25.iterator(),r231 (CodeArray.buildCode) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r231 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;4992;831;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()> $r6.iterator(),r36 (CodeArray.array) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r36 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;52;158;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()> $r6.iterator(),r36 (CodeArray.array) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r36 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;52;158;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> r49.iterator(),r55 (FlowGraph.setBlockTypes) Value: interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>());r55 = interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;3692;323;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> r49.iterator(),r55 (FlowGraph.setBlockTypes) Value: interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>());r55 = interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;3692;323;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r25.iterator(),r105 (Liveness.computeIntersections) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r105 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;73;199;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r25.iterator(),r105 (Liveness.computeIntersections) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r105 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;73;199;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r6.iterator(),r3 (SSA.placePhiFunctions) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;95;204;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r6.iterator(),r3 (SSA.placePhiFunctions) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;95;204;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> r24.iterator(),r25 (DominanceFrontier.calcFrontier) Value: virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>());r25 = virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;116;226;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> r24.iterator(),r25 (DominanceFrontier.calcFrontier) Value: virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>());r25 = virtualinvoke r24.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;117;226;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> r68.iterator(),r69 (DominatorTree.buildTree) Value: interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>());r69 = interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;199;573;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> r68.iterator(),r69 (DominatorTree.buildTree) Value: interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>());r69 = interfaceinvoke r68.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;200;573;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueFolder: void cleanup()> $r3.iterator(),r1 (ValueFolder.cleanup) Value: virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>());r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void cleanup()>;EDU.purdue.cs.bloat.trans.ValueFolder;false;false;57;92;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueFolder: void cleanup()> $r3.iterator(),r1 (ValueFolder.cleanup) Value: virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>());r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueFolder: void cleanup()>;EDU.purdue.cs.bloat.trans.ValueFolder;false;false;58;92;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.lang.String toString()> $r24.iterator(),r1 (SSAPRE$Phi.toString) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;3517;315;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.lang.String toString()> $r24.iterator(),r1 (SSAPRE$Phi.toString) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;3517;315;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$3: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r4.iterator(),$r5 (CodeGenerator$3.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$3: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$3;true;true;612601;100116;1350;4467;true;true;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r3.iterator(),$r4 (ExprPropagation$1.visitTree) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());$r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.trans.ExprPropagation$1;true;true;614242;101221;1406;4467;true;true;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r4.iterator(),r22 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r22 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;104;218;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r4.iterator(),r22 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r22 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;104;218;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.BloatContext: boolean ignoreClass(EDU.purdue.cs.bloat.editor.Type)> $r5.iterator(),r2 (BloatContext.ignoreClass) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.BloatContext: boolean ignoreClass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.context.BloatContext;true;false;43;108;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.BloatContext: boolean ignoreClass(EDU.purdue.cs.bloat.editor.Type)> $r5.iterator(),r2 (BloatContext.ignoreClass) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.BloatContext: boolean ignoreClass(EDU.purdue.cs.bloat.editor.Type)>;EDU.purdue.cs.bloat.context.BloatContext;true;false;43;108;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> r2.iterator(),r14 (TypeInferenceVisitor.visitPhiStmt) Value: interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>());r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;false;false;32978;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> r2.iterator(),r14 (TypeInferenceVisitor.visitPhiStmt) Value: interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>());r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;false;false;32978;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)> r2.iterator(),r3 (SSAGraph.printSCCs) Value: interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;50;158;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)> r2.iterator(),r3 (SSAGraph.printSCCs) Value: interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;50;158;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])> r123.iterator(),r130 (Main.main) Value: interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>());r130 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;149;176;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])> r123.iterator(),r130 (Main.main) Value: interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>());r130 = interfaceinvoke r123.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.optimize.Main: void main(java.lang.String[])>;EDU.purdue.cs.bloat.optimize.Main;false;false;150;176;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.DefExpr: void cleanupOnly()> r1.iterator(),r2 (DefExpr.cleanupOnly) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.DefExpr: void cleanupOnly()>;EDU.purdue.cs.bloat.tree.DefExpr;false;false;31469;93;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.DefExpr: void cleanupOnly()> r1.iterator(),r2 (DefExpr.cleanupOnly) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.DefExpr: void cleanupOnly()>;EDU.purdue.cs.bloat.tree.DefExpr;false;false;31470;93;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.ReplaceTarget: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)> $r5.iterator(),r2 (ReplaceTarget.visitRetStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.ReplaceTarget: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.ReplaceTarget;false;false;35674;168;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.ReplaceTarget: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)> $r5.iterator(),r2 (ReplaceTarget.visitRetStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.ReplaceTarget: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.ReplaceTarget;false;false;35674;168;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)> $r5.iterator(),r34 (ExprPropagation.propExpr) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;3895;112;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)> $r5.iterator(),r34 (ExprPropagation.propExpr) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;3896;112;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)> $r30.iterator(),r4 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;99;237;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)> $r30.iterator(),r4 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;99;237;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r21.iterator(),r22 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>());r22 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;118;220;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r21.iterator(),r22 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>());r22 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;true;false;118;220;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInference$2: void visitComponent(java.util.List)> r1.iterator(),r2 (TypeInference$2.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$2: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.tbaa.TypeInference$2;false;false;30347;109;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInference$2: void visitComponent(java.util.List)> r1.iterator(),r2 (TypeInference$2.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$2: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.tbaa.TypeInference$2;false;false;30348;109;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)> r1.iterator(),r25 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r25 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;36104;143;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)> r1.iterator(),r25 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r25 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;36104;143;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> r225.iterator(),r226 (CodeArray.buildCode) Value: interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>());r226 = interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;2395;973;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> r225.iterator(),r226 (CodeArray.buildCode) Value: interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>());r226 = interfaceinvoke r225.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;2396;973;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r7.iterator(),r31 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;258;169;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r7.iterator(),r31 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;259;169;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)> $r11.iterator(),r25 (MethodEditor.print) Value: virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>());r25 = virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;82;140;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)> $r11.iterator(),r25 (MethodEditor.print) Value: virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>());r25 = virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void print(java.io.PrintStream)>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;83;140;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()> $r9.iterator(),r1 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;68;196;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()> $r9.iterator(),r1 (RegisterAllocator$IGNode.computeWeight) Value: interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void computeWeight()>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;69;196;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r14.iterator(),r59 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;31764;172;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r14.iterator(),r59 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;31764;172;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r8.iterator(),r28 (SSA.placePhiFunctions) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r28 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;38;138;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r8.iterator(),r28 (SSA.placePhiFunctions) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r28 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;38;138;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: java.lang.Object get_swizzler(int)> $r4.iterator(),r1 (InductionVarAnalyzer.get_swizzler) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: java.lang.Object get_swizzler(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;286;111;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: java.lang.Object get_swizzler(int)> $r4.iterator(),r1 (InductionVarAnalyzer.get_swizzler) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: java.lang.Object get_swizzler(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;287;111;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r62.iterator(),r66 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>());r66 = interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;171;413;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r62.iterator(),r66 (CodeGenerator.removeEmptyBlocks) Value: interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>());r66 = interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator: void removeEmptyBlocks(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator;false;false;172;413;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r50.iterator(),r95 (Liveness.computeIntersections) Value: interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>());r95 = interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;true;false;109;391;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r50.iterator(),r95 (Liveness.computeIntersections) Value: interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>());r95 = interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;true;false;109;391;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r75.iterator(),r76 (VerifyCFG.visitBlock) Value: interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>());r76 = interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;3397;259;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r75.iterator(),r76 (VerifyCFG.visitBlock) Value: interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>());r76 = interfaceinvoke $r75.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;3397;259;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)> $r25.iterator(),r4 (FlowGraph.buildTrees) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;161;284;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)> $r25.iterator(),r4 (FlowGraph.buildTrees) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTrees(EDU.purdue.cs.bloat.cfg.Block,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;161;284;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r17.iterator(),r34 (SSA.rename) Value: interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;86;236;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r17.iterator(),r34 (SSA.rename) Value: interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;86;236;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r25.iterator(),r52 (SSAPRE.rename) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r52 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;112;387;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r25.iterator(),r52 (SSAPRE.rename) Value: interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>());r52 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;112;387;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r8.iterator(),r98 (CachingBloatContext.toString) Value: interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>());r98 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;305;391;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r8.iterator(),r98 (CachingBloatContext.toString) Value: interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>());r98 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;305;391;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r57.iterator(),r170 (FlowGraph.peelLoops) Value: interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>());r170 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;2976;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r57.iterator(),r170 (FlowGraph.peelLoops) Value: interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>());r170 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;2977;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness$1: void <init>(EDU.purdue.cs.bloat.codegen.Liveness,EDU.purdue.cs.bloat.util.GraphNode)> $r6.iterator(),$r7 (Liveness$1.<init>) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$1: void <init>(EDU.purdue.cs.bloat.codegen.Liveness,EDU.purdue.cs.bloat.util.GraphNode)>;EDU.purdue.cs.bloat.codegen.Liveness$1;true;false;699;980;9;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness$1: void <init>(EDU.purdue.cs.bloat.codegen.Liveness,EDU.purdue.cs.bloat.util.GraphNode)> $r6.iterator(),$r7 (Liveness$1.<init>) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness$1: void <init>(EDU.purdue.cs.bloat.codegen.Liveness,EDU.purdue.cs.bloat.util.GraphNode)>;EDU.purdue.cs.bloat.codegen.Liveness$1;true;false;700;980;9;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> r50.iterator(),r52 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>());r52 = interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;72;267;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> r50.iterator(),r52 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>());r52 = interfaceinvoke r50.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;73;267;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInference$1: void visitInitStmt(EDU.purdue.cs.bloat.tree.InitStmt)> $r11.iterator(),r5 (TypeInference$1.visitInitStmt) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$1: void visitInitStmt(EDU.purdue.cs.bloat.tree.InitStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInference$1;true;false;3457;136;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInference$1: void visitInitStmt(EDU.purdue.cs.bloat.tree.InitStmt)> $r11.iterator(),r5 (TypeInference$1.visitInitStmt) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInference$1: void visitInitStmt(EDU.purdue.cs.bloat.tree.InitStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInference$1;true;false;3457;136;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)> $r3.iterator(),$r4 (SSAPRE$12.<init>) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());$r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;true;false;45678;747;10;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)> $r3.iterator(),$r4 (SSAPRE$12.<init>) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());$r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$12: void <init>(EDU.purdue.cs.bloat.trans.SSAPRE$11)>;EDU.purdue.cs.bloat.trans.SSAPRE$12;true;false;45679;747;10;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r8.iterator(),r2 (SSAPRE.downSafety) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;94;60;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r8.iterator(),r2 (SSAPRE.downSafety) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void downSafety(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;94;60;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r53.iterator(),$r58 (DominatorTree.buildTree) Value: interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>());$r58 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;446;916;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r53.iterator(),$r58 (DominatorTree.buildTree) Value: interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>());$r58 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;447;916;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()> $r19.iterator(),r24 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>());r24 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;79;262;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()> $r19.iterator(),r24 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>());r24 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;80;262;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: boolean validate(java.lang.String)> $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;219;452;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: boolean validate(java.lang.String)> $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;219;452;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r4.iterator(),r2 (CodeGenerator$5.visitFlowGraph) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;28999;92;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r4.iterator(),r2 (CodeGenerator$5.visitFlowGraph) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$5: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$5;false;false;28999;92;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()> $r5.iterator(),r2 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;39;142;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()> $r5.iterator(),r2 (FlowGraph.removeCriticalEdges) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void removeCriticalEdges()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;39;142;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void removeUnreachable()> $r9.iterator(),r1 (Graph.removeUnreachable) Value: interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void removeUnreachable()>;EDU.purdue.cs.bloat.util.Graph;false;false;49;152;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void removeUnreachable()> $r9.iterator(),r1 (Graph.removeUnreachable) Value: interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void removeUnreachable()>;EDU.purdue.cs.bloat.util.Graph;false;false;49;152;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: java.lang.String toString()> $r4.iterator(),r1 (Graph.toString) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: java.lang.String toString()>;EDU.purdue.cs.bloat.util.Graph;false;false;254;86;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: java.lang.String toString()> $r4.iterator(),r1 (Graph.toString) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: java.lang.String toString()>;EDU.purdue.cs.bloat.util.Graph;false;false;254;86;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r15.iterator(),r139 (MethodEditor.commit) Value: virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>());r139 = virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;840;542;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r15.iterator(),r139 (MethodEditor.commit) Value: virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>());r139 = virtualinvoke $r15.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;841;542;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r6.iterator(),r140 (FlowGraph.peelLoops) Value: interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>());r140 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1665;831;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r6.iterator(),r140 (FlowGraph.peelLoops) Value: interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>());r140 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1665;831;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph$6: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r11.iterator(),r2 (FlowGraph$6.visitBlock) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph$6: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph$6;false;false;3323;190;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph$6: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)> $r11.iterator(),r2 (FlowGraph$6.visitBlock) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph$6: void visitBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph$6;false;false;3323;190;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)> r1.iterator(),r2 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;40634;179;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)> r1.iterator(),r2 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;40634;179;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)> $r7.iterator(),r3 (VerifyCFG.visitRetStmt) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;33073;104;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)> $r7.iterator(),r3 (VerifyCFG.visitRetStmt) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.VerifyCFG: void visitRetStmt(EDU.purdue.cs.bloat.tree.RetStmt)>;EDU.purdue.cs.bloat.cfg.VerifyCFG;false;false;33074;104;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr phiRelatedFind(EDU.purdue.cs.bloat.tree.Expr)> r1.iterator(),r2 (SSAPRE.phiRelatedFind) Value: virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>());r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr phiRelatedFind(EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;30701;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr phiRelatedFind(EDU.purdue.cs.bloat.tree.Expr)> r1.iterator(),r2 (SSAPRE.phiRelatedFind) Value: virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>());r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr phiRelatedFind(EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;30701;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r162.iterator(),r177 (FlowGraph.peelLoops) Value: interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>());r177 = interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;1186;761;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r162.iterator(),r177 (FlowGraph.peelLoops) Value: interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>());r177 = interfaceinvoke r162.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;1186;761;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r10.iterator(),r2 (PrintVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;3482;183;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r10.iterator(),r2 (PrintVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;3482;183;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void buildLists()> $r2.iterator(),r15 (Graph.buildLists) Value: interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>());r15 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;38074;202;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph: void buildLists()> $r2.iterator(),r15 (Graph.buildLists) Value: interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>());r15 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph: void buildLists()>;EDU.purdue.cs.bloat.util.Graph;false;false;38075;202;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.CompactArrayInitializer: boolean transform(EDU.purdue.cs.bloat.editor.MethodEditor)> $r6.iterator(),r2 (CompactArrayInitializer.transform) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.CompactArrayInitializer: boolean transform(EDU.purdue.cs.bloat.editor.MethodEditor)>;EDU.purdue.cs.bloat.trans.CompactArrayInitializer;false;false;857;665;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.CompactArrayInitializer: boolean transform(EDU.purdue.cs.bloat.editor.MethodEditor)> $r6.iterator(),r2 (CompactArrayInitializer.transform) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.CompactArrayInitializer: boolean transform(EDU.purdue.cs.bloat.editor.MethodEditor)>;EDU.purdue.cs.bloat.trans.CompactArrayInitializer;false;false;857;665;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: void postIterationCleanup(java.lang.String)> $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;20;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: void postIterationCleanup(java.lang.String)> $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;20;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r146.iterator(),r223 (CodeArray.buildCode) Value: interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>());r223 = interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;965;973;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r146.iterator(),r223 (CodeArray.buildCode) Value: interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>());r223 = interfaceinvoke $r146.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;966;973;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r14.iterator(),r31 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;162;376;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r14.iterator(),r31 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;162;376;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> r71.iterator(),r72 (DominatorTree.buildTree) Value: interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>());r72 = interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;true;false;390;517;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> r71.iterator(),r72 (DominatorTree.buildTree) Value: interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>());r72 = interfaceinvoke r71.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;true;false;391;517;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r89.iterator(),r142 (FlowGraph.peelLoops) Value: interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>());r142 = interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3292;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r89.iterator(),r142 (FlowGraph.peelLoops) Value: interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>());r142 = interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3292;809;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r12.iterator(),r1 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;166;362;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r12.iterator(),r1 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;167;362;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void insertCode(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r5.iterator(),r2 (SSA.insertCode) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void insertCode(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;25;44;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void insertCode(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r5.iterator(),r2 (SSA.insertCode) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void insertCode(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;25;44;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> $r19.iterator(),r95 (Liveness.liveOut) Value: interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>());r95 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;152;479;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> $r19.iterator(),r95 (Liveness.liveOut) Value: interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>());r95 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;152;479;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r38.iterator(),r171 (FlowGraph.peelLoops) Value: interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>());r171 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;617;757;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r38.iterator(),r171 (FlowGraph.peelLoops) Value: interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>());r171 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;617;757;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r12.iterator(),r102 (CachingBloatContext.toString) Value: interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>());r102 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;297;313;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r12.iterator(),r102 (CachingBloatContext.toString) Value: interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>());r102 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;297;313;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r4.iterator(),r41 (SSA.rename) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r41 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;44;144;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r4.iterator(),r41 (SSA.rename) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r41 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;44;144;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)> $r8.iterator(),r34 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60;212;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)> $r8.iterator(),r34 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r34 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60;212;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> r168.iterator(),r172 (RegisterAllocator.<init>) Value: virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>());r172 = virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;237;363;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> r168.iterator(),r172 (RegisterAllocator.<init>) Value: virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>());r172 = virtualinvoke r168.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;238;363;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.tree.MemExpr get_local(int)> $r4.iterator(),r1 (InductionVarAnalyzer.get_local) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.tree.MemExpr get_local(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;787;103;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.tree.MemExpr get_local(int)> $r4.iterator(),r1 (InductionVarAnalyzer.get_local) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: EDU.purdue.cs.bloat.tree.MemExpr get_local(int)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;true;false;788;103;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r37.iterator(),$r58 (DominatorTree.buildTree) Value: interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>());$r58 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;327;914;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r37.iterator(),$r58 (DominatorTree.buildTree) Value: interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>());$r58 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;328;914;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: void insert_aswrange(EDU.purdue.cs.bloat.tree.Swizzler)> $r7.iterator(),r2 (InductionVarAnalyzer.insert_aswrange) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: void insert_aswrange(EDU.purdue.cs.bloat.tree.Swizzler)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;false;false;3345;251;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: void insert_aswrange(EDU.purdue.cs.bloat.tree.Swizzler)> $r7.iterator(),r2 (InductionVarAnalyzer.insert_aswrange) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.diva.InductionVarAnalyzer: void insert_aswrange(EDU.purdue.cs.bloat.tree.Swizzler)>;EDU.purdue.cs.bloat.diva.InductionVarAnalyzer;false;false;3345;251;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAConstructionInfo: void addRetPhis(EDU.purdue.cs.bloat.cfg.Subroutine)> $r4.iterator(),r2 (SSAConstructionInfo.addRetPhis) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAConstructionInfo: void addRetPhis(EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.ssa.SSAConstructionInfo;false;false;74;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAConstructionInfo: void addRetPhis(EDU.purdue.cs.bloat.cfg.Subroutine)> $r4.iterator(),r2 (SSAConstructionInfo.addRetPhis) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAConstructionInfo: void addRetPhis(EDU.purdue.cs.bloat.cfg.Subroutine)>;EDU.purdue.cs.bloat.ssa.SSAConstructionInfo;false;false;74;94;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.Iterator iterator()> r0.iterator(),r1 (Tree$StmtList.iterator) Value: specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>());r1 = specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.tree.Tree$StmtList;true;false;589463;53146;871;4467;true;true;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.Iterator iterator()> r0.iterator(),r1 (Tree$StmtList.iterator) Value: specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>());r1 = specialinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.Tree$StmtList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.tree.Tree$StmtList;true;false;589515;53146;871;4467;true;true;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r51.iterator(),r55 (SSAPRE.rename) Value: interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>());r55 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;94055;2160;701;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r51.iterator(),r55 (SSAPRE.rename) Value: interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>());r55 = interfaceinvoke r51.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void rename(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;94056;2160;701;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r4.iterator(),r29 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r29 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;41200;123;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r4.iterator(),r29 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r29 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;41201;123;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r6.iterator(),r14 (SSAPRE.computeLater) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r14 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37;98;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r6.iterator(),r14 (SSAPRE.computeLater) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r14 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37;98;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr buildPhiOperand(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)> $r6.iterator(),r4 (SSAPRE.buildPhiOperand) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr buildPhiOperand(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;87916;26387;769;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr buildPhiOperand(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)> $r6.iterator(),r4 (SSAPRE.buildPhiOperand) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: EDU.purdue.cs.bloat.tree.Expr buildPhiOperand(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;87944;26387;769;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r3.iterator(),r24 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;29504;144;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)> r3.iterator(),r24 (ValueNumbering$Tuple.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;29504;144;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r10.iterator(),r100 (CachingBloatContext.toString) Value: interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>());r100 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;320;352;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r10.iterator(),r100 (CachingBloatContext.toString) Value: interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>());r100 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;320;352;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)> r4.iterator(),r5 (SSAGraph.printSCCs) Value: interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;47;153;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)> r4.iterator(),r5 (SSAGraph.printSCCs) Value: interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph: void printSCCs(java.io.PrintWriter)>;EDU.purdue.cs.bloat.ssa.SSAGraph;true;false;48;153;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r69.iterator(),r74 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>());r74 = interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;263;356;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r69.iterator(),r74 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>());r74 = interfaceinvoke $r69.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;263;356;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r6.iterator(),r50 (SSA.search) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r50 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;60;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)> $r6.iterator(),r50 (SSA.search) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r50 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;60;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r16.iterator(),$r26 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());$r26 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;105;294;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r16.iterator(),$r26 (DominanceFrontier.calcFrontier) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());$r26 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominanceFrontier: java.util.LinkedList calcFrontier(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominanceFrontier;false;false;105;294;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r6.iterator(),r43 (SSA.rename) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r43 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;80;138;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r6.iterator(),r43 (SSA.rename) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r43 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void rename(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;81;138;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r8.iterator(),r17 (SSAPRE.computeLater) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r17 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37;72;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r8.iterator(),r17 (SSAPRE.computeLater) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r17 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37;72;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$EdgeSet: void clear()> $r4.iterator(),r1 (Graph$EdgeSet.clear) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: void clear()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;true;false;3526;174;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$EdgeSet: void clear()> $r4.iterator(),r1 (Graph$EdgeSet.clear) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$EdgeSet: void clear()>;EDU.purdue.cs.bloat.util.Graph$EdgeSet;true;false;3526;174;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()> $r16.iterator(),r6 (SSAPRE.beginTry) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;48;154;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()> $r16.iterator(),r6 (SSAPRE.beginTry) Value: interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: java.util.Set beginTry()>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;48;154;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void coalesce(EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode)> $r4.iterator(),r2 (RegisterAllocator$IGNode.coalesce) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void coalesce(EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;48;100;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void coalesce(EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode)> $r4.iterator(),r2 (RegisterAllocator$IGNode.coalesce) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode: void coalesce(EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$IGNode;true;false;48;100;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> $r6.iterator(),r16 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r16 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;35;108;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> $r6.iterator(),r16 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r16 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;35;108;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> r160.iterator(),r166 (RegisterAllocator.<init>) Value: virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>());r166 = virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;405;805;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> r160.iterator(),r166 (RegisterAllocator.<init>) Value: virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>());r166 = virtualinvoke r160.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;406;805;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r13.iterator(),r6 (SSAPRE.resetCanBeAvail) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60;197;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r13.iterator(),r6 (SSAPRE.resetCanBeAvail) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;60;197;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r6.iterator(),r133 (FlowGraph.peelLoops) Value: interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>());r133 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1718;831;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r6.iterator(),r133 (FlowGraph.peelLoops) Value: interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>());r133 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;1719;831;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r13.iterator(),r6 (SSAPRE.resetLater) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;65;188;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r13.iterator(),r6 (SSAPRE.resetLater) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;65;188;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r7.iterator(),r26 (SSA.placePhiFunctions) Value: interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;77;150;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r7.iterator(),r26 (SSA.placePhiFunctions) Value: interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;false;false;77;150;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r10.iterator(),r3 (SSAPRE.resetLater) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;38;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r10.iterator(),r3 (SSAPRE.resetLater) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetLater(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;38;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering: boolean valnum(EDU.purdue.cs.bloat.tree.Node,java.util.HashMap)> $r27.iterator(),r3 (ValueNumbering.valnum) Value: interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering: boolean valnum(EDU.purdue.cs.bloat.tree.Node,java.util.HashMap)>;EDU.purdue.cs.bloat.trans.ValueNumbering;true;false;3074;166;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering: boolean valnum(EDU.purdue.cs.bloat.tree.Node,java.util.HashMap)> $r27.iterator(),r3 (ValueNumbering.valnum) Value: interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>());r3 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering: boolean valnum(EDU.purdue.cs.bloat.tree.Node,java.util.HashMap)>;EDU.purdue.cs.bloat.trans.ValueNumbering;true;false;3074;166;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r20.iterator(),r28 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>());r28 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;220;446;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r20.iterator(),r28 (SSAPRE.setValueNumbers) Value: interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>());r28 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void setValueNumbers(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;220;446;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r36.iterator(),r42 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>());r42 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3292;455;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r36.iterator(),r42 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>());r42 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3292;455;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r9.iterator(),r36 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>());r36 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;153;133;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r9.iterator(),r36 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>());r36 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;153;133;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r7.iterator(),r76 (DominatorTree.buildTree) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r76 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;144;244;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)> $r7.iterator(),r76 (DominatorTree.buildTree) Value: interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>());r76 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.DominatorTree: void buildTree(EDU.purdue.cs.bloat.cfg.FlowGraph,boolean)>;EDU.purdue.cs.bloat.cfg.DominatorTree;false;false;145;244;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> r2.iterator(),r19 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>());r19 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;47;172;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()> r2.iterator(),r19 (FlowGraph.splitIrreducibleLoops) Value: interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>());r19 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitIrreducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;47;172;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r27.iterator(),r54 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>());r54 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;3812;323;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r27.iterator(),r54 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>());r54 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;3813;323;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r44.iterator(),r9 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>());r9 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;175;362;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r44.iterator(),r9 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>());r9 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;175;362;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r12.iterator(),r4 (RegisterAllocator$1.visitPhiStmt) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$1;true;false;36632;216;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r12.iterator(),r4 (RegisterAllocator$1.visitPhiStmt) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator$1;true;false;36633;216;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r22.iterator(),r179 (RegisterAllocator.<init>) Value: interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>());r179 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;54;173;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r22.iterator(),r179 (RegisterAllocator.<init>) Value: interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>());r179 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;54;173;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTreeForBlock(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.OperandStack,EDU.purdue.cs.bloat.cfg.Subroutine,java.util.Map,java.util.Map)> $r72.iterator(),r91 (FlowGraph.buildTreeForBlock) Value: interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>());r91 = interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTreeForBlock(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.OperandStack,EDU.purdue.cs.bloat.cfg.Subroutine,java.util.Map,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;56;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTreeForBlock(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.OperandStack,EDU.purdue.cs.bloat.cfg.Subroutine,java.util.Map,java.util.Map)> $r72.iterator(),r91 (FlowGraph.buildTreeForBlock) Value: interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>());r91 = interfaceinvoke $r72.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildTreeForBlock(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.OperandStack,EDU.purdue.cs.bloat.cfg.Subroutine,java.util.Map,java.util.Map)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;56;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: EDU.purdue.cs.bloat.cfg.Block copyBlock(EDU.purdue.cs.bloat.cfg.Block)> $r10.iterator(),r4 (FlowGraph.copyBlock) Value: interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: EDU.purdue.cs.bloat.cfg.Block copyBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;20;44;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: EDU.purdue.cs.bloat.cfg.Block copyBlock(EDU.purdue.cs.bloat.cfg.Block)> $r10.iterator(),r4 (FlowGraph.copyBlock) Value: interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>());r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: EDU.purdue.cs.bloat.cfg.Block copyBlock(EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;20;44;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)> $r11.iterator(),r73 (SSAPRE.search) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r73 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;39;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)> $r11.iterator(),r73 (SSAPRE.search) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r73 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;39;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r18.iterator(),r108 (CachingBloatContext.toString) Value: interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>());r108 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;259;196;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r18.iterator(),r108 (CachingBloatContext.toString) Value: interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>());r108 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;259;196;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r10.iterator(),r31 (SSA.placePhiFunctions) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;39;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r10.iterator(),r31 (SSA.placePhiFunctions) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: void placePhiFunctions(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;39;102;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)> r1.iterator(),r26 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;30690;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)> r1.iterator(),r26 (ValueNumbering$1.visitComponent) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r26 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$1: void visitComponent(java.util.List)>;EDU.purdue.cs.bloat.trans.ValueNumbering$1;false;false;30690;96;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r163.iterator(),r179 (FlowGraph.peelLoops) Value: interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>());r179 = interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;1232;761;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> r163.iterator(),r179 (FlowGraph.peelLoops) Value: interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>());r179 = interfaceinvoke r163.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;1233;761;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> $r57.iterator(),r11 (Liveness.liveOut) Value: interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>());r11 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;691;417;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)> $r57.iterator(),r11 (Liveness.liveOut) Value: interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>());r11 = interfaceinvoke $r57.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void liveOut(java.util.BitSet,java.util.List[],EDU.purdue.cs.bloat.cfg.Block,int,EDU.purdue.cs.bloat.codegen.Liveness$IGNode,java.util.Collection)>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;692;417;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r24.iterator(),r181 (RegisterAllocator.<init>) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r181 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;445;173;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r24.iterator(),r181 (RegisterAllocator.<init>) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r181 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;true;false;446;173;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r6.iterator(),r2 (SSAPRE$1.visitPhiStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.SSAPRE$1;true;false;35865;190;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r6.iterator(),r2 (SSAPRE$1.visitPhiStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.SSAPRE$1;true;false;35865;190;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r10.iterator(),r57 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r57 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;339;178;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()> $r10.iterator(),r57 (FlowGraph.setBlockTypes) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r57 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void setBlockTypes()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;339;178;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$NodeList: java.util.Iterator iterator()> r0.iterator(),r1 (Graph$NodeList.iterator) Value: specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>());r1 = specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$NodeList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$NodeList;true;false;158437;1554;24;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$NodeList: java.util.Iterator iterator()> r0.iterator(),r1 (Graph$NodeList.iterator) Value: specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>());r1 = specialinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$NodeList: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$NodeList;true;false;158439;1554;24;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r6.iterator(),r20 (PrintVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r20 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;true;false;36772;186;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r6.iterator(),r20 (PrintVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r20 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.PrintVisitor;true;false;36772;186;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)> $r10.iterator(),r30 (ExprPropagation.propExpr) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;3128;126;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)> $r10.iterator(),r30 (ExprPropagation.propExpr) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r30 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;3128;126;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r6.iterator(),r3 (ExprPropagation$1.visitPhiStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.ExprPropagation$1;true;false;45325;239;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r6.iterator(),r3 (ExprPropagation$1.visitPhiStmt) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation$1: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.trans.ExprPropagation$1;true;false;45325;239;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r22.iterator(),r38 (SSAPRE.placePhis) Value: interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;107;236;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r22.iterator(),r38 (SSAPRE.placePhis) Value: interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;107;236;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.ClassHierarchy: void <init>(EDU.purdue.cs.bloat.editor.EditorContext,java.util.Collection,boolean)> $r11.iterator(),r3 (ClassHierarchy.<init>) Value: virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>());r3 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: void <init>(EDU.purdue.cs.bloat.editor.EditorContext,java.util.Collection,boolean)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;56;92;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.ClassHierarchy: void <init>(EDU.purdue.cs.bloat.editor.EditorContext,java.util.Collection,boolean)> $r11.iterator(),r3 (ClassHierarchy.<init>) Value: virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>());r3 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.ClassHierarchy: void <init>(EDU.purdue.cs.bloat.editor.EditorContext,java.util.Collection,boolean)>;EDU.purdue.cs.bloat.editor.ClassHierarchy;false;false;56;92;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.ReplaceVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r7.iterator(),r2 (ReplaceVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.ReplaceVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.ReplaceVisitor;true;false;790;118;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.ReplaceVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)> $r7.iterator(),r2 (ReplaceVisitor.visitPhiJoinStmt) Value: interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.ReplaceVisitor: void visitPhiJoinStmt(EDU.purdue.cs.bloat.tree.PhiJoinStmt)>;EDU.purdue.cs.bloat.tree.ReplaceVisitor;true;false;790;118;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitEdge(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.Block)> $r21.iterator(),r6 (FlowGraph.splitEdge) Value: interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitEdge(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;34;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitEdge(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.Block)> $r21.iterator(),r6 (FlowGraph.splitEdge) Value: interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitEdge(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.cfg.Block)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;34;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r12.iterator(),r59 (SSAPRE.codeMotion) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37;56;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r12.iterator(),r59 (SSAPRE.codeMotion) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r59 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;37;56;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r12.iterator(),r5 (SSAPRE.enqueueParents) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;81;150;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r12.iterator(),r5 (SSAPRE.enqueueParents) Value: interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>());r5 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void enqueueParents(EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;82;150;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> $r8.iterator(),r3 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;61;253;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()> $r8.iterator(),r3 (FlowGraph.splitReducibleLoops) Value: interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitReducibleLoops()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;62;253;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r6.iterator(),r154 (RegisterAllocator.<init>) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r154 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;405;790;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r6.iterator(),r154 (RegisterAllocator.<init>) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r154 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;405;790;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r158.iterator(),r159 (MethodEditor.commit) Value: virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>());r159 = virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;698;169;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r158.iterator(),r159 (MethodEditor.commit) Value: virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>());r159 = virtualinvoke $r158.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;699;169;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r18.iterator(),r38 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3912;221;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()> $r18.iterator(),r38 (FlowGraph.buildLoopTree) Value: interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>());r38 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void buildLoopTree()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;3913;221;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.PersistentCheckElimination: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet[])> $r6.iterator(),r13 (PersistentCheckElimination.search) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r13 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.PersistentCheckElimination: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet[])>;EDU.purdue.cs.bloat.trans.PersistentCheckElimination;true;false;43;110;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.PersistentCheckElimination: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet[])> $r6.iterator(),r13 (PersistentCheckElimination.search) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r13 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.PersistentCheckElimination: void search(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.cfg.Block,java.util.BitSet[])>;EDU.purdue.cs.bloat.trans.PersistentCheckElimination;true;false;44;110;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r18.iterator(),r90 (Liveness.computeIntersections) Value: interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>());r90 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;295;424;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r18.iterator(),r90 (Liveness.computeIntersections) Value: interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>());r90 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;295;424;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: java.util.Iterator collectVars(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r4.iterator(),$r5 (SSA.collectVars) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: java.util.Iterator collectVars(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;38;100;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSA: java.util.Iterator collectVars(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r4.iterator(),$r5 (SSA.collectVars) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSA: java.util.Iterator collectVars(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.ssa.SSA;true;false;39;100;6;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$4: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r4.iterator(),r2 (CodeGenerator$4.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$4: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$4;false;false;27843;65;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.CodeGenerator$4: void visitTree(EDU.purdue.cs.bloat.tree.Tree)> $r4.iterator(),r2 (CodeGenerator$4.visitTree) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.CodeGenerator$4: void visitTree(EDU.purdue.cs.bloat.tree.Tree)>;EDU.purdue.cs.bloat.codegen.CodeGenerator$4;false;false;27843;65;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r19.iterator(),r57 (SSAPRE.codeMotion) Value: interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>());r57 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;103;315;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r19.iterator(),r57 (SSAPRE.codeMotion) Value: interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>());r57 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;104;315;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r5.iterator(),r2 (PrintVisitor.visitFlowGraph) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;91784;114;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)> $r5.iterator(),r2 (PrintVisitor.visitFlowGraph) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.PrintVisitor: void visitFlowGraph(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.PrintVisitor;false;false;91784;114;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r29.iterator(),r55 (SSAPRE.codeMotion) Value: interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>());r55 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;174;377;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)> $r29.iterator(),r55 (SSAPRE.codeMotion) Value: interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>());r55 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void codeMotion(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.VarExpr,EDU.purdue.cs.bloat.ssa.SSAConstructionInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;175;377;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)> $r5.iterator(),r94 (ClassFileLoader.loadClass) Value: virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>());r94 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;92467;512;9;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)> $r5.iterator(),r94 (ClassFileLoader.loadClass) Value: virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>());r94 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.file.ClassFileLoader: EDU.purdue.cs.bloat.reflect.ClassInfo loadClass(java.lang.String)>;EDU.purdue.cs.bloat.file.ClassFileLoader;false;false;92468;512;9;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)> $r11.iterator(),r32 (ExprPropagation.propExpr) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;2971;103;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)> $r11.iterator(),r32 (ExprPropagation.propExpr) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r32 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ExprPropagation: boolean propExpr(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.tree.LocalExpr,EDU.purdue.cs.bloat.tree.Expr)>;EDU.purdue.cs.bloat.trans.ExprPropagation;true;false;2971;103;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)> r3.iterator(),r5 (SSAPRE$ExprKey.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;41800;190;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)> r3.iterator(),r5 (SSAPRE$ExprKey.equals) Value: interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;41800;190;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)> $r9.iterator(),r70 (SSAPRE.search) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r70 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;75;198;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)> $r9.iterator(),r70 (SSAPRE.search) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r70 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void search(EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.tree.Expr,EDU.purdue.cs.bloat.trans.SSAPRE$Def,java.util.List)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;75;198;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()> $r4.iterator(),r27 (CodeArray.array) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r27 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;70;265;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()> $r4.iterator(),r27 (CodeArray.array) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r27 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: byte[] array()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;71;265;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)> r4.iterator(),r6 (SSAPRE$ExprKey.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;48549;188;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)> r4.iterator(),r6 (SSAPRE$ExprKey.equals) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey: boolean equals(java.lang.Object)>;EDU.purdue.cs.bloat.trans.SSAPRE$ExprKey;false;false;48550;188;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.StackOptimizer: void optimizeCFG(EDU.purdue.cs.bloat.cfg.FlowGraph)> r1.iterator(),r2 (StackOptimizer.optimizeCFG) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.StackOptimizer: void optimizeCFG(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.StackOptimizer;false;false;25;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tree.StackOptimizer: void optimizeCFG(EDU.purdue.cs.bloat.cfg.FlowGraph)> r1.iterator(),r2 (StackOptimizer.optimizeCFG) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tree.StackOptimizer: void optimizeCFG(EDU.purdue.cs.bloat.cfg.FlowGraph)>;EDU.purdue.cs.bloat.tree.StackOptimizer;false;false;25;68;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r15.iterator(),r4 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;177;362;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r15.iterator(),r4 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;177;362;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r11.iterator(),r169 (RegisterAllocator.<init>) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r169 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;129;402;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r11.iterator(),r169 (RegisterAllocator.<init>) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r169 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;129;402;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r13.iterator(),r177 (RegisterAllocator.<init>) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r177 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;63;109;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)> $r13.iterator(),r177 (RegisterAllocator.<init>) Value: interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>());r177 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.RegisterAllocator: void <init>(EDU.purdue.cs.bloat.cfg.FlowGraph,EDU.purdue.cs.bloat.codegen.Liveness)>;EDU.purdue.cs.bloat.codegen.RegisterAllocator;false;false;63;109;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r24.iterator(),r6 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;141;356;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()> $r24.iterator(),r6 (FlowGraph.splitPhiBlocks) Value: interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void splitPhiBlocks()>;EDU.purdue.cs.bloat.cfg.FlowGraph;false;false;142;356;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r16.iterator(),r106 (CachingBloatContext.toString) Value: interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>());r106 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;278;235;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r16.iterator(),r106 (CachingBloatContext.toString) Value: interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>());r106 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;279;235;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r5.iterator(),r12 (TypeInferenceVisitor.visitPhiStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r12 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;34090;210;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)> $r5.iterator(),r12 (TypeInferenceVisitor.visitPhiStmt) Value: interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>());r12 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor: void visitPhiStmt(EDU.purdue.cs.bloat.tree.PhiStmt)>;EDU.purdue.cs.bloat.tbaa.TypeInferenceVisitor;true;false;34090;210;8;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> $r13.iterator(),r50 (SSAGraph$5.visitNode) Value: interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>());r50 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;3086;282;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)> $r13.iterator(),r50 (SSAGraph$5.visitNode) Value: interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>());r50 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.ssa.SSAGraph$5: void visitNode(EDU.purdue.cs.bloat.tree.Node)>;EDU.purdue.cs.bloat.ssa.SSAGraph$5;true;false;3087;282;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)> $r10.iterator(),r37 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r37 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;46;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)> $r10.iterator(),r37 (SSAPRE.finalizeVisit) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r37 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void finalizeVisit(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.cfg.Block,EDU.purdue.cs.bloat.trans.SSAPRE$Def)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;46;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r37.iterator(),r154 (MethodEditor.commit) Value: virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>());r154 = virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;653;211;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()> $r37.iterator(),r154 (MethodEditor.commit) Value: virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>());r154 = virtualinvoke $r37.<java.util.LinkedList: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.MethodEditor: void commit()>;EDU.purdue.cs.bloat.editor.MethodEditor;false;false;654;211;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r9.iterator(),r2 (SSAPRE.computeCanBeAvail) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;32;74;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> $r9.iterator(),r2 (SSAPRE.computeCanBeAvail) Value: interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void computeCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;32;74;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r56.iterator(),r168 (FlowGraph.peelLoops) Value: interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>());r168 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;496;753;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)> $r56.iterator(),r168 (FlowGraph.peelLoops) Value: interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>());r168 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.cfg.FlowGraph: void peelLoops(int)>;EDU.purdue.cs.bloat.cfg.FlowGraph;true;false;496;753;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r6.iterator(),r96 (CachingBloatContext.toString) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r96 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;364;430;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()> $r6.iterator(),r96 (CachingBloatContext.toString) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());r96 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.context.CachingBloatContext: java.lang.String toString()>;EDU.purdue.cs.bloat.context.CachingBloatContext;true;false;364;430;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: java.lang.String toString()> r1.iterator(),r2 (ValueNumbering$Tuple.toString) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;32773;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: java.lang.String toString()> r1.iterator(),r2 (ValueNumbering$Tuple.toString) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple: java.lang.String toString()>;EDU.purdue.cs.bloat.trans.ValueNumbering$Tuple;false;false;32773;124;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.util.List leaves()> $r4.iterator(),r1 (SSAPRE$Phi.leaves) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.util.List leaves()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;25636;119;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.util.List leaves()> $r4.iterator(),r1 (SSAPRE$Phi.leaves) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE$Phi: java.util.List leaves()>;EDU.purdue.cs.bloat.trans.SSAPRE$Phi;false;false;25636;119;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r10.iterator(),r3 (SSAPRE.resetCanBeAvail) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;32;77;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)> $r10.iterator(),r3 (SSAPRE.resetCanBeAvail) Value: interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>());r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void resetCanBeAvail(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo,EDU.purdue.cs.bloat.trans.SSAPRE$Phi)>;EDU.purdue.cs.bloat.trans.SSAPRE;false;false;32;77;4;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r32.iterator(),r40 (SSAPRE.placePhis) Value: interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>());r40 = interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;40;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)> r32.iterator(),r40 (SSAPRE.placePhis) Value: interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>());r40 = interfaceinvoke r32.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.trans.SSAPRE: void placePhis(EDU.purdue.cs.bloat.trans.SSAPRE$ExprInfo)>;EDU.purdue.cs.bloat.trans.SSAPRE;true;false;40;98;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r19.iterator(),r210 (CodeArray.buildCode) Value: interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>());r210 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;5304;1227;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r19.iterator(),r210 (CodeArray.buildCode) Value: interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>());r210 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;false;false;5305;1227;7;4467;true;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r20.iterator(),r218 (CodeArray.buildCode) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r218 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;1413;1067;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()> $r20.iterator(),r218 (CodeArray.buildCode) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r218 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.editor.CodeArray: void buildCode()>;EDU.purdue.cs.bloat.editor.CodeArray;true;false;1414;1067;5;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$1: java.util.Iterator iterator()> $r2.iterator(),r1 (Graph$1.iterator) Value: interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$1: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$1;true;false;339996;5515;65;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.util.Graph$1: java.util.Iterator iterator()> $r2.iterator(),r1 (Graph$1.iterator) Value: interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>());r1 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.util.Graph$1: java.util.Iterator iterator()>;EDU.purdue.cs.bloat.util.Graph$1;true;false;340004;5515;65;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r16.iterator(),r88 (Liveness.computeIntersections) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r88 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;261;447;7;4467;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()> $r16.iterator(),r88 (Liveness.computeIntersections) Value: interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>());r88 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();<EDU.purdue.cs.bloat.codegen.Liveness: void computeIntersections()>;EDU.purdue.cs.bloat.codegen.Liveness;false;false;262;447;7;4467;false;false;0;0;
