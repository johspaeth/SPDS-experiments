Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;VisitedMethod;ReachableMethods;CallRecursion;FieldLoop;MaxAccessPath;MaxMemory
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])> $r14.iterator(),r111 (PyType.fillFromClass) Value: interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>());r111 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])>;org.python.core.PyType;true;false;1074;297;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])> $r14.iterator(),r111 (PyType.fillFromClass) Value: interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>());r111 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])>;org.python.core.PyType;true;false;1075;297;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: void postIterationCleanup(java.lang.String)> $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;76;94;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: void postIterationCleanup(java.lang.String)> $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;76;94;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)> $r3.iterator(),$r4 (PyTuple$2.<init>) Value: virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r4 = virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)>;org.python.core.PyTuple$2;true;false;937;222;13;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)> $r3.iterator(),$r4 (PyTuple$2.<init>) Value: virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r4 = virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)>;org.python.core.PyTuple$2;true;false;938;222;13;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PySequenceList: java.util.Iterator iterator()> $r1.iterator(),$r2 (PySequenceList.iterator) Value: virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r2 = virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PySequenceList: java.util.Iterator iterator()>;org.python.core.PySequenceList;true;false;192;186;11;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PySequenceList: java.util.Iterator iterator()> $r1.iterator(),$r2 (PySequenceList.iterator) Value: virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r2 = virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PySequenceList: java.util.Iterator iterator()>;org.python.core.PySequenceList;true;false;192;186;11;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: boolean validate(java.lang.String)> $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;283;452;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: boolean validate(java.lang.String)> $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;284;452;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: boolean validate(java.lang.String)> $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;1279;452;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: boolean validate(java.lang.String)> $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;1280;452;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])> $r14.iterator(),r111 (PyType.fillFromClass) Value: interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>());r111 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])>;org.python.core.PyType;true;false;178;297;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])> $r14.iterator(),r111 (PyType.fillFromClass) Value: interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>());r111 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();<org.python.core.PyType: void fillFromClass(org.python.core.PyType,java.lang.String,java.lang.Class,java.lang.Class,boolean,java.lang.reflect.Method,java.lang.String[])>;org.python.core.PyType;true;false;179;297;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: void postIterationCleanup(java.lang.String)> $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;27;94;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: void postIterationCleanup(java.lang.String)> $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;28;94;5;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)> $r3.iterator(),$r4 (PyTuple$2.<init>) Value: virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r4 = virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)>;org.python.core.PyTuple$2;true;false;653;222;13;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)> $r3.iterator(),$r4 (PyTuple$2.<init>) Value: virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r4 = virtualinvoke $r3.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PyTuple$2: void <init>(org.python.core.PyTuple)>;org.python.core.PyTuple$2;true;false;654;222;13;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PySequenceList: java.util.Iterator iterator()> $r1.iterator(),$r2 (PySequenceList.iterator) Value: virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r2 = virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PySequenceList: java.util.Iterator iterator()>;org.python.core.PySequenceList;true;false;217;186;11;4268;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<org.python.core.PySequenceList: java.util.Iterator iterator()> $r1.iterator(),$r2 (PySequenceList.iterator) Value: virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>());$r2 = virtualinvoke $r1.<org.python.core.PyObjectList: java.util.Iterator iterator()>();<org.python.core.PySequenceList: java.util.Iterator iterator()>;org.python.core.PySequenceList;true;false;217;186;11;4268;false;false;0;0;
