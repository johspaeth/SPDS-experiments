Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;VisitedMethod;ReachableMethods;CallRecursion;FieldLoop;MaxAccessPath;MaxMemory
ideal;EmptyVector;ForwardQuery: (<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)> $r4 = new Vector,$r4 (ConfigFile.<init>) Value: new java.util.Vector);$r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void <init>(java.io.InputStream,java.lang.String)>;dacapo.parser.ConfigFile;true;false;5463;1669;34;3795;true;false;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.ast.JavaParser: void <init>(net.sourceforge.pmd.ast.CharStream)> $r6 = new Vector,$r6 (JavaParser.<init>) Value: new java.util.Vector);$r6 = new java.util.Vector;<net.sourceforge.pmd.ast.JavaParser: void <init>(net.sourceforge.pmd.ast.CharStream)>;net.sourceforge.pmd.ast.JavaParser;false;true;600281;46158;736;3795;true;true;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()> $r2 = new Stack,$r2 (JJTJspParserState.<init>) Value: new java.util.Stack);$r2 = new java.util.Stack;<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;true;false;61401;12405;166;3795;true;false;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()> $r1 = new Stack,$r1 (JJTJavaParserState.<init>) Value: new java.util.Stack);$r1 = new java.util.Stack;<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;true;true;600412;60722;736;3795;true;true;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()> $r2 = new Stack,$r2 (JJTJavaParserState.<init>) Value: new java.util.Stack);$r2 = new java.util.Stack;<net.sourceforge.pmd.ast.JJTJavaParserState: void <init>()>;net.sourceforge.pmd.ast.JJTJavaParserState;true;true;600246;60796;736;3795;true;true;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.dfa.Structure: void <init>()> $r3 = new Stack,$r3 (Structure.<init>) Value: new java.util.Stack);$r3 = new java.util.Stack;<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;true;false;46191;8753;311;3795;true;true;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: void addVariableAccess(int,net.sourceforge.pmd.dfa.variableaccess.VariableAccess,java.util.List)> $r6 = new Vector,$r6 (VariableAccessVisitor.addVariableAccess) Value: new java.util.Vector);$r6 = new java.util.Vector;<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: void addVariableAccess(int,net.sourceforge.pmd.dfa.variableaccess.VariableAccess,java.util.List)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;195;338;22;3795;false;true;0;0;
ideal;EmptyVector;ForwardQuery: (<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)> $r4 = new Vector,$r4 (ConfigFile.sizeClause) Value: new java.util.Vector);$r4 = new java.util.Vector;<dacapo.parser.ConfigFile: void sizeClause(dacapo.parser.Config,java.lang.String)>;dacapo.parser.ConfigFile;false;false;74;492;14;3795;false;false;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.dfa.Structure: void <init>()> $r2 = new Stack,$r2 (Structure.<init>) Value: new java.util.Stack);$r2 = new java.util.Stack;<net.sourceforge.pmd.dfa.Structure: void <init>()>;net.sourceforge.pmd.dfa.Structure;true;false;118394;10370;315;3795;true;true;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()> $r1 = new Stack,$r1 (JJTJspParserState.<init>) Value: new java.util.Stack);$r1 = new java.util.Stack;<net.sourceforge.pmd.jsp.ast.JJTJspParserState: void <init>()>;net.sourceforge.pmd.jsp.ast.JJTJspParserState;true;false;37154;12275;164;3795;true;false;0;0;
ideal;EmptyVector;ForwardQuery: (<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])> $r3 = new Vector,$r3 (TestHarness.vectorise) Value: new java.util.Vector);$r3 = new java.util.Vector;<dacapo.TestHarness: java.util.Vector vectorise(java.lang.String[])>;dacapo.TestHarness;true;false;103;488;14;3795;false;false;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder: void <init>()> $r1 = new Stack,$r1 (ScopeAndDeclarationFinder.<init>) Value: new java.util.Stack);$r1 = new java.util.Stack;<net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder: void <init>()>;net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder;true;false;8018;3577;272;3795;true;false;0;0;
ideal;EmptyVector;ForwardQuery: (<net.sourceforge.pmd.jsp.ast.JspParser: void <init>(net.sourceforge.pmd.jsp.ast.CharStream)> $r6 = new Vector,$r6 (JspParser.<init>) Value: new java.util.Vector);$r6 = new java.util.Vector;<net.sourceforge.pmd.jsp.ast.JspParser: void <init>(net.sourceforge.pmd.jsp.ast.CharStream)>;net.sourceforge.pmd.jsp.ast.JspParser;false;false;17277;9325;153;3795;true;false;0;0;
