Analysis;Rule;Seed;SeedStatement;SeedMethod;SeedClass;Is_In_Error;Timedout;AnalysisTimes;PropagationCount;VisitedMethod;ReachableMethods;CallRecursion;FieldLoop;MaxAccessPath;MaxMemory
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.SummaryHTMLRenderer: java.lang.String renderSummary(net.sourceforge.pmd.Report)> $r11.iterator(),r4 (SummaryHTMLRenderer.renderSummary) Value: interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.SummaryHTMLRenderer: java.lang.String renderSummary(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.SummaryHTMLRenderer;true;false;948;147;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)> r3.iterator(),r4 (VariableAccessVisitor.markUsages) Value: interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>());r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;true;false;356;148;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)> r1.iterator(),r6 (PMD.processFiles) Value: interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>());r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void processFiles(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.RuleSets,boolean,boolean,java.lang.String,java.lang.String)>;net.sourceforge.pmd.PMD;false;false;358;125;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.SourceFileScope: java.lang.String toString()> $r4.iterator(),$r5 (SourceFileScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.SourceFileScope;true;false;308;136;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSet: void apply(java.util.List,net.sourceforge.pmd.RuleContext)> $r5.iterator(),r3 (RuleSet.apply) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: void apply(java.util.List,net.sourceforge.pmd.RuleContext)>;net.sourceforge.pmd.RuleSet;false;false;45;92;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSets: void apply(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.Language)> $r6.iterator(),r4 (RuleSets.apply) Value: interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>());r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: void apply(java.util.List,net.sourceforge.pmd.RuleContext,net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;45;98;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSets: java.util.Set getAllRules()> $r4.iterator(),r2 (RuleSets.getAllRules) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: java.util.Set getAllRules()>;net.sourceforge.pmd.RuleSets;false;false;42;94;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.Report: java.util.Map getSummary()> $r5.iterator(),r2 (Report.getSummary) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getSummary()>;net.sourceforge.pmd.Report;false;false;47;111;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSet: boolean usesDFA()> $r3.iterator(),r1 (RuleSet.usesDFA) Value: interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>());r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: boolean usesDFA()>;net.sourceforge.pmd.RuleSet;false;false;47;98;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)> $r23.iterator(),$r24 (ClassScope.findVariableHere) Value: interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>());$r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;373;106;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.VBHTMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)> r1.iterator(),r47 (VBHTMLRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r47 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.VBHTMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.VBHTMLRenderer;false;false;71;224;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath: java.lang.String clipPath(java.lang.String)> $r4.iterator(),r2 (IDEAJRenderer$SourcePath.clipPath) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath: java.lang.String clipPath(java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer$SourcePath;true;false;35;123;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)> $r20.iterator(),r8 (VariableAccessVisitor.markUsages) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r8 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;false;false;72;202;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.TextRenderer: void addSuppressed(net.sourceforge.pmd.Report,java.lang.StringBuffer)> $r5.iterator(),r3 (TextRenderer.addSuppressed) Value: interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: void addSuppressed(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;389;134;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSetFactory: void parseRuleNodeWithExclude(net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)> $r11.iterator(),r6 (RuleSetFactory.parseRuleNodeWithExclude) Value: interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>());r6 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseRuleNodeWithExclude(net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)>;net.sourceforge.pmd.RuleSetFactory;false;false;77;104;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.HTMLRenderer: java.lang.StringBuffer glomIRuleViolations(net.sourceforge.pmd.Report)> r1.iterator(),r3 (HTMLRenderer.glomIRuleViolations) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: java.lang.StringBuffer glomIRuleViolations(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;329;266;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.LocalScope: java.lang.String toString()> $r4.iterator(),$r5 (LocalScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.LocalScope;true;false;225;136;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String)> r1.iterator(),r5 (IDEAJRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;39;126;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String,java.lang.String)> r1.iterator(),r5 (IDEAJRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r5 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.IDEAJRenderer: java.lang.String render(net.sourceforge.pmd.Report,java.lang.String,java.lang.String)>;net.sourceforge.pmd.renderers.IDEAJRenderer;false;false;57;118;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.Report: java.util.Iterator errors()> $r1.iterator(),$r2 (Report.errors) Value: interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>());$r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator errors()>;net.sourceforge.pmd.Report;false;false;1091;722;10;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()> $r21.iterator(),r1 (ClassScope.toString) Value: interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;60;182;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.HTMLRenderer: void glomSuppressions(net.sourceforge.pmd.Report,java.lang.StringBuffer)> $r6.iterator(),r3 (HTMLRenderer.glomSuppressions) Value: interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>());r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.HTMLRenderer: void glomSuppressions(net.sourceforge.pmd.Report,java.lang.StringBuffer)>;net.sourceforge.pmd.renderers.HTMLRenderer;false;false;79;251;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.PMD: void printRuleNamesInDebug(boolean,net.sourceforge.pmd.RuleSets)> $r3.iterator(),r1 (PMD.printRuleNamesInDebug) Value: interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>());r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: void printRuleNamesInDebug(boolean,net.sourceforge.pmd.RuleSets)>;net.sourceforge.pmd.PMD;true;false;30;113;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSetFactory: void parseInternallyDefinedRuleNode(net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)> $r23.iterator(),r8 (RuleSetFactory.parseInternallyDefinedRuleNode) Value: interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>());r8 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSetFactory: void parseInternallyDefinedRuleNode(net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)>;net.sourceforge.pmd.RuleSetFactory;false;false;155;240;8;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()> $r45.iterator(),$r46 (ClassScope.toString) Value: interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>());$r46 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;75;247;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: boolean validate(java.lang.String)> $r5.iterator(),r2 (Benchmark.validate) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: boolean validate(java.lang.String)>;dacapo.Benchmark;true;false;172;452;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.Benchmark: void postIterationCleanup(java.lang.String)> $r5.iterator(),r2 (Benchmark.postIterationCleanup) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<dacapo.Benchmark: void postIterationCleanup(java.lang.String)>;dacapo.Benchmark;true;false;21;94;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)> $r10.iterator(),$r11 (ClassScope.findVariableHere) Value: interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>());$r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;24;76;4;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.CSVRenderer: java.lang.String render(net.sourceforge.pmd.Report)> r1.iterator(),r3 (CSVRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.CSVRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.CSVRenderer;false;false;40;138;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.PMD: java.util.List collect(java.lang.String,net.sourceforge.pmd.SourceFileSelector)> r37.iterator(),r38 (PMD.collect) Value: interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>());r38 = interfaceinvoke r37.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.PMD: java.util.List collect(java.lang.String,net.sourceforge.pmd.SourceFileSelector)>;net.sourceforge.pmd.PMD;false;false;34;96;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.SourceFileScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)> $r6.iterator(),$r7 (SourceFileScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.SourceFileScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.SourceFileScope;true;false;37;106;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.Report: boolean isEmpty()> $r1.iterator(),$r2 (Report.isEmpty) Value: interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>());$r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: boolean isEmpty()>;net.sourceforge.pmd.Report;false;false;14;32;3;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.EmacsRenderer: java.lang.String render(net.sourceforge.pmd.Report)> r1.iterator(),r3 (EmacsRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r3 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.EmacsRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.EmacsRenderer;false;false;30;94;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)> $r20.iterator(),r191 (PapariTextRenderer.render) Value: interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>());r191 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;true;false;69;294;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.MethodScope: java.util.Map getVariableDeclarations()> $r5.iterator(),$r6 (MethodScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.MethodScope;true;false;41;106;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.OccurrenceFinder: java.lang.Object visit(net.sourceforge.pmd.ast.ASTPrimaryExpression,java.lang.Object)> r4.iterator(),r5 (OccurrenceFinder.visit) Value: interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>());r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.OccurrenceFinder: java.lang.Object visit(net.sourceforge.pmd.ast.ASTPrimaryExpression,java.lang.Object)>;net.sourceforge.pmd.symboltable.OccurrenceFinder;false;false;41;108;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.TextRenderer: java.lang.String render(net.sourceforge.pmd.Report)> r1.iterator(),r42 (TextRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r42 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.TextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.TextRenderer;false;false;41;170;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSets: boolean usesDFA(net.sourceforge.pmd.Language)> $r4.iterator(),r2 (RuleSets.usesDFA) Value: interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSets: boolean usesDFA(net.sourceforge.pmd.Language)>;net.sourceforge.pmd.RuleSets;false;false;34;104;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()> $r15.iterator(),$r16 (ClassScope.toString) Value: interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>());$r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;59;139;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)> $r20.iterator(),r94 (XMLRenderer.render) Value: interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>());r94 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;37;138;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)> r1.iterator(),r187 (PapariTextRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r187 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.PapariTextRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.PapariTextRenderer;false;false;271;531;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.MethodScope: java.lang.String toString()> $r4.iterator(),$r5 (MethodScope.toString) Value: interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>());$r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: java.lang.String toString()>;net.sourceforge.pmd.symboltable.MethodScope;true;false;60;136;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)> $r29.iterator(),r33 (ClassScope.findVariableHere) Value: interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>());r33 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;32;113;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.MethodScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)> $r6.iterator(),$r7 (MethodScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.MethodScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.MethodScope;true;false;32;106;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.RuleSet: net.sourceforge.pmd.Rule getRuleByName(java.lang.String)> $r4.iterator(),r2 (RuleSet.getRuleByName) Value: interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>());r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();<net.sourceforge.pmd.RuleSet: net.sourceforge.pmd.Rule getRuleByName(java.lang.String)>;net.sourceforge.pmd.RuleSet;false;false;31;100;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)> $r11.iterator(),r6 (VariableAccessVisitor.markUsages) Value: interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>());r6 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor: java.util.List markUsages(net.sourceforge.pmd.dfa.IDataFlowNode)>;net.sourceforge.pmd.dfa.variableaccess.VariableAccessVisitor;true;false;32;148;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<dacapo.pmd.PmdHarness: java.lang.String commaSeparate(java.util.List)> r0.iterator(),r1 (PmdHarness.commaSeparate) Value: interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>());r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();<dacapo.pmd.PmdHarness: java.lang.String commaSeparate(java.util.List)>;dacapo.pmd.PmdHarness;false;false;113;117;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.Report: java.util.Map getCountSummary()> $r7.iterator(),r2 (Report.getCountSummary) Value: virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>());r2 = virtualinvoke $r7.<net.sourceforge.pmd.dfa.report.ReportTree: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Map getCountSummary()>;net.sourceforge.pmd.Report;false;false;171;176;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.LocalScope: java.util.Map getVariableDeclarations()> $r5.iterator(),$r6 (LocalScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.LocalScope;true;false;80;106;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)> r1.iterator(),r74 (XMLRenderer.render) Value: virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>());r74 = virtualinvoke r1.<net.sourceforge.pmd.Report: java.util.Iterator iterator()>();<net.sourceforge.pmd.renderers.XMLRenderer: java.lang.String render(net.sourceforge.pmd.Report)>;net.sourceforge.pmd.renderers.XMLRenderer;false;false;80;311;5;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: java.util.Map getVariableDeclarations()> $r5.iterator(),$r6 (ClassScope.getVariableDeclarations) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: java.util.Map getVariableDeclarations()>;net.sourceforge.pmd.symboltable.ClassScope;true;false;37;106;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.LocalScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)> $r6.iterator(),$r7 (LocalScope.findVariableHere) Value: interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>());$r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.LocalScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.LocalScope;true;false;35;106;6;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.Report: java.util.Iterator iterator()> $r1.iterator(),$r2 (Report.iterator) Value: interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>());$r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.Report: java.util.Iterator iterator()>;net.sourceforge.pmd.Report;false;false;586;1532;14;3795;false;false;0;0;
ideal;IteratorHasNext;ForwardQuery: (<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)> $r5.iterator(),$r6 (ClassScope.findVariableHere) Value: interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>());$r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();<net.sourceforge.pmd.symboltable.ClassScope: net.sourceforge.pmd.symboltable.NameDeclaration findVariableHere(net.sourceforge.pmd.symboltable.NameOccurrence)>;net.sourceforge.pmd.symboltable.ClassScope;true;false;23;76;4;3795;false;false;0;0;
