<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0"
                 xmlns:xmi="http://www.omg.org/XMI"
                 xmlns:rules="http:///com/ibm/safe/rules.ecore"
                 xmlns:typestate="http:///com/ibm/safe/typestate.ecore">

  <typestate:IDeterministicFiniteAutomaton xmi:id="automaton_1">
    <states name="unchecked"/>
    <states name="marked"/>
    <states name="err" accepting="true"/>

    <events xsi:type="typestate:IDispatchEvent" name="mark">
      <pattern pattern=".*mark\(.*" />
    </events>
    <events xsi:type="typestate:IDispatchEvent" name="reset">
      <pattern pattern=".*reset\(.*" />
    </events>

    <transitions source="unchecked" event="mark" destination="marked"/>
    <transitions source="unchecked" event="reset" destination="err"/>

    <transitions source="marked" event="mark" destination="marked"/>
    <transitions source="marked" event="reset" destination="unchecked"/>

    <transitions source="err" event="mark" destination="err"/>
    <transitions source="err" event="reset" destination="err"/>

  </typestate:IDeterministicFiniteAutomaton>

  <rules:ITypeStateRule
        name="Always call mark() before reset()"
        severity="Warning"
        category="Correctness"
        level="MethodLevel"
        typeStateAutomaton="automaton_1">
    <types name="Ljava/nio/Buffer"/>
    <description>

<![CDATA[
Every call to <i>Buffer.reset()</i> should be preceded by a call to <i>Buffer.mark()</i> in order to avoid a potential exception.
]]>
    </description>

    <example>
<![CDATA[
<code>
Buffer buffer = getBuffer();
buffer.reset();
</code>
This will lead to an InvalidMarkException being thrown.
]]>
    </example>

    <action>
<![CDATA[
Always call <i>Buffer.mark()</i> before every call to <i>Buffer.reset()</i>.
]]>
    </action>
  </rules:ITypeStateRule>

</xmi:XMI>
