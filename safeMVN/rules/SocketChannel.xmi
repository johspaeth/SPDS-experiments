<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0"
                 xmlns:xmi="http://www.omg.org/XMI"
                 xmlns:rules="http:///com/ibm/safe/rules.ecore"
                 xmlns:typestate="http:///com/ibm/safe/typestate.ecore">

  <typestate:IDeterministicFiniteAutomaton xmi:id="automaton_1">
    <states name="open"/>
    <states name="closed"/>
    <states name="err" accepting="true"/>

    <events xsi:type="typestate:IDispatchEvent" name="read">
      <pattern pattern=".*read\(.*" />
    </events>

    <events xsi:type="typestate:IDispatchEvent" name="write">
      <pattern pattern=".*write\(.*" />
    </events>

    <events xsi:type="typestate:IDispatchEvent" name="close">
      <pattern pattern=".*close\(.*" />
    </events>

    <transitions source="open" event="read" destination="open"/>
    <transitions source="open" event="write" destination="open"/>
    <transitions source="open" event="close" destination="closed"/>

    <transitions source="closed" event="read" destination="err"/>
    <transitions source="closed" event="write" destination="err"/>
    <transitions source="closed" event="close" destination="closed"/>

    <transitions source="err" event="read" destination="err"/>
    <transitions source="err" event="write" destination="err"/>
    <transitions source="err" event="close" destination="err"/>
  </typestate:IDeterministicFiniteAutomaton>

  <rules:ITypeStateRule
        name="Never read from or write to a SocketChannel after it has been closed"
        severity="Warning"
        category="Correctness"
        level="MethodLevel"
        typeStateAutomaton="automaton_1">
    <types name="Ljava/nio/channels/SocketChannel"/>
    <description>

<![CDATA[
Trying to read from or write to a closed SocketChannel will produce a <b>java.io.IOException</b>.
]]>
    </description>

    <example>

    </example>

    <action>
    </action>

  </rules:ITypeStateRule>

</xmi:XMI>
